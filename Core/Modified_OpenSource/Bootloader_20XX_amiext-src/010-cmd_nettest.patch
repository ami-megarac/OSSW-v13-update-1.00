diff -Naur u-boot-2019.04/cmd/nettest/cmd_nettest.c uboot/cmd/nettest/cmd_nettest.c
--- u-boot-2019.04/cmd/nettest/cmd_nettest.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/cmd_nettest.c	2020-01-14 13:36:49.337961228 -0500
@@ -15,8 +15,10 @@
 
 #include "swfunc.h"
 #include "comminf.h"
+#include "mem_io.h"
+#include "mac_api.h"
 
-extern int mac_test(int argc, char * const argv[], char mode);
+extern int mac_test(int argc, char * const argv[], uint32_t mode);
 
 int do_mactest (cmd_tbl_t * cmdtp, int flag, int argc, char * const argv[])
 {
@@ -27,7 +29,7 @@
 int do_ncsitest (cmd_tbl_t * cmdtp, int flag, int argc, char * const argv[])
 {
 	display_lantest_log_msg = 0;
-	return mac_test(argc, argv, MODE_NSCI);
+	return mac_test(argc, argv, MODE_NCSI);
 }
 
 U_BOOT_CMD(mactest, NETESTCMD_MAX_ARGS, 0, do_mactest,
@@ -45,7 +47,7 @@
 int do_ncsitestd (cmd_tbl_t * cmdtp, int flag, int argc, char * const argv[])
 {
 	display_lantest_log_msg = 1;
-	return mac_test(argc, argv, MODE_NSCI);
+	return mac_test(argc, argv, MODE_NCSI);
 }
 
 U_BOOT_CMD(mactestd, NETESTCMD_MAX_ARGS, 0, do_mactestd,
@@ -54,15 +56,16 @@
 	   "Share LAN (NC-SI) test program and display more information", NULL);
 
 // ------------------------------------------------------------------------------
+#if 0
 void multi_pin_2_mdcmdio_init( MAC_ENGINE *eng )
 {  
 #if defined(CONFIG_ASPEED_AST2500)
-	switch (eng->run.MAC_idx_PHY) {
+	switch (eng->run.mdio_idx) {
 	case 0:
-		Write_Reg_SCU_DD(0x088, (Read_Reg_SCU_DD(0x088) | 0xC0000000));
+		SCU_WR((SCU_RD(0x088) | 0xC0000000), 0x88);
 		break;
 	case 1:
-		Write_Reg_SCU_DD(0x090, (Read_Reg_SCU_DD(0x090) | 0x00000004));
+		SCU_WR((SCU_RD(0x090) | 0x00000004), 0x90);
 		break;
 	default:
 		break;
@@ -101,12 +104,12 @@
 
 		if (MACnum == 0) {
 			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY = 0;
+			eng->run.mac_base = MAC1_BASE;
+			eng->run.mdio_idx = 0;
 		} else if (MACnum == 1) {
 			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY = 1;
+			eng->run.mac_base = MAC2_BASE;
+			eng->run.mdio_idx = 1;
 		} else {
 			printf("wrong parameter (mac number)\n");
 			ret = -1;
@@ -120,25 +123,25 @@
 		}
 
 		multi_pin_2_mdcmdio_init(eng);
-		MAC_040 = Read_Reg_MAC_DD(eng, 0x40);
+		MAC_040 = mac_reg_read(eng, 0x40);
 #ifdef CONFIG_ASPEED_AST2600
-		eng->inf.NewMDIO = 1;
+		eng->env.is_new_mdio_reg[MACnum] = 1;
 #else
-		eng->inf.NewMDIO = (MAC_040 & 0x80000000) ? 1 : 0;
+		eng->env.is_new_mdio_reg[MACnum] = (MAC_040 & 0x80000000) ? 1 : 0;
 #endif
 
-		if (eng->inf.NewMDIO) {
+		if (eng->env.is_new_mdio_reg[MACnum]) {
 #ifdef CONFIG_ASPEED_AST2600
-			Write_Reg_MAC_DD(eng, 0x60,
-					 MAC_PHYRd_AST2600 | (PHYaddr << 21) |
+			mac_reg_write(eng, 0x60,
+					 MAC_PHYRd_New | (PHYaddr << 21) |
 					     ((PHYreg & 0x1f) << 16));
-			while (Read_Reg_MAC_DD(eng, 0x60) &
-			       MAC_PHYBusy_AST2600) {
+			while (mac_reg_read(eng, 0x60) &
+			       MAC_PHYBusy_New) {
 #else
-			Write_Reg_MAC_DD(eng, 0x60,
+			mac_reg_write(eng, 0x60,
 					 MAC_PHYRd_New | (PHYaddr << 5) |
 					     (PHYreg & 0x1f));
-			while (Read_Reg_MAC_DD(eng, 0x60) & MAC_PHYBusy_New) {
+			while (mac_reg_read(eng, 0x60) & MAC_PHYBusy_New) {
 #endif
 				if (++timeout > TIME_OUT_PHY_RW) {
 					ret = -1;
@@ -148,13 +151,13 @@
 #ifdef Delay_PHYRd
 			DELAY(Delay_PHYRd);
 #endif
-			result_data = Read_Reg_MAC_DD(eng, 0x64) & 0xffff;
+			result_data = mac_reg_read(eng, 0x64) & 0xffff;
 		} else {
-			Write_Reg_MAC_DD(eng, 0x60,
+			mac_reg_write(eng, 0x60,
 					 MDC_Thres | MAC_PHYRd |
 					     (PHYaddr << 16) |
 					     ((PHYreg & 0x1f) << 21));
-			while (Read_Reg_MAC_DD(eng, 0x60) & MAC_PHYRd) {
+			while (mac_reg_read(eng, 0x60) & MAC_PHYRd) {
 				if (++timeout > TIME_OUT_PHY_RW) {
 					ret = -1;
 					break;
@@ -163,7 +166,7 @@
 #ifdef Delay_PHYRd
 			DELAY(Delay_PHYRd);
 #endif
-			result_data = Read_Reg_MAC_DD(eng, 0x64) >> 16;
+			result_data = mac_reg_read(eng, 0x64) >> 16;
 		}
 		printf(" PHY[%d] reg[0x%02X] = %04x\n", PHYaddr, PHYreg,
 		       result_data);
@@ -207,13 +210,13 @@
 
 		if ( MACnum == 0 ) {
 			// Set MAC 0
-			eng->run.MAC_BASE  = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
+			eng->run.mac_base  = MAC1_BASE;
+			eng->run.mdio_idx = 0;
 		}
 		else if ( MACnum == 1 ) {
 			// Set MAC 1
-			eng->run.MAC_BASE  = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;
+			eng->run.mac_base  = MAC2_BASE;
+			eng->run.mdio_idx = 1;
 		}
 		else {
 			printf("wrong parameter (mac number)\n");
@@ -228,22 +231,22 @@
 		}
 
 		multi_pin_2_mdcmdio_init( eng );
-		MAC_040 = Read_Reg_MAC_DD( eng, 0x40 );
+		MAC_040 = mac_reg_read( eng, 0x40 );
 #ifdef CONFIG_ASPEED_AST2600
-		eng->inf.NewMDIO = 1;
-#else		
-		eng->inf.NewMDIO = (MAC_040 & 0x80000000) ? 1 : 0;
-#endif		
+		eng->env.is_new_mdio_reg[MACnum] = 1;
+#else
+		eng->env.is_new_mdio_reg[MACnum] = (MAC_040 & 0x80000000) ? 1 : 0;
+#endif
 
-		if ( eng->inf.NewMDIO ) {
+		if (eng->env.is_new_mdio_reg[MACnum]) {
 #ifdef CONFIG_ASPEED_AST2600
-			Write_Reg_MAC_DD( eng, 0x60, reg_data | MAC_PHYWr_AST2600 | (PHYaddr<<21) | ((PHYreg & 0x1f)<<16) );
+			mac_reg_write( eng, 0x60, reg_data | MAC_PHYWr_New | (PHYaddr<<21) | ((PHYreg & 0x1f)<<16) );
 			
-			while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYBusy_AST2600 ) {
+			while ( mac_reg_read( eng, 0x60 ) & MAC_PHYBusy_New ) {
 #else
-			Write_Reg_MAC_DD( eng, 0x60, ( reg_data << 16 ) | MAC_PHYWr_New | (PHYaddr<<5) | (PHYreg & 0x1f) );
+			mac_reg_write( eng, 0x60, ( reg_data << 16 ) | MAC_PHYWr_New | (PHYaddr<<5) | (PHYreg & 0x1f) );
 
-			while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYBusy_New ) {
+			while ( mac_reg_read( eng, 0x60 ) & MAC_PHYBusy_New ) {
 #endif			
 				if ( ++timeout > TIME_OUT_PHY_RW ) {
 					ret = -1;
@@ -252,16 +255,16 @@
 			}
 		}
 		else {
-			Write_Reg_MAC_DD( eng, 0x64, reg_data );
-			Write_Reg_MAC_DD( eng, 0x60, MDC_Thres | MAC_PHYWr | (PHYaddr<<16) | ((PHYreg & 0x1f) << 21) );
+			mac_reg_write( eng, 0x64, reg_data );
+			mac_reg_write( eng, 0x60, MDC_Thres | MAC_PHYWr | (PHYaddr<<16) | ((PHYreg & 0x1f) << 21) );
 
-			while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYWr ) {
+			while ( mac_reg_read( eng, 0x60 ) & MAC_PHYWr ) {
 				if ( ++timeout > TIME_OUT_PHY_RW ) {
 					ret = -1;
 					break;
 				}
 			}
-		} // End if ( eng->inf.NewMDIO )
+		} // End if (eng->env.new_mdio_reg)
 
 		printf("Write: PHY[%d] reg[0x%02X] = %04x\n", PHYaddr, PHYreg, reg_data );
 	} while ( 0 );
@@ -298,13 +301,13 @@
 
 		if ( MACnum == 0 ) {
 			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
+			eng->run.mac_base = MAC1_BASE;
+			eng->run.mdio_idx = 0;
 		}
 		else if ( MACnum == 1 ) {
 			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;            
+			eng->run.mac_base = MAC2_BASE;
+			eng->run.mdio_idx = 1;
 		}
 		else {
 			printf("wrong parameter (mac number)\n");
@@ -319,22 +322,22 @@
 		}
 
 		multi_pin_2_mdcmdio_init( eng );
-		MAC_040 = Read_Reg_MAC_DD( eng, 0x40 );
+		MAC_040 = mac_reg_read( eng, 0x40 );
 #ifdef CONFIG_ASPEED_AST2600
-		eng->inf.NewMDIO = 1;
-#else		
-		eng->inf.NewMDIO = (MAC_040 & 0x80000000) ? 1 : 0;
-#endif		
+		eng->env.is_new_mdio_reg[MACnum] = 1;
+#else
+		eng->env.is_new_mdio_reg[MACnum] = (MAC_040 & 0x80000000) ? 1 : 0;
+#endif
 
-		if ( eng->inf.NewMDIO ) {
+		if (eng->env.is_new_mdio_reg[MACnum]) {
 			for ( PHYreg = 0; PHYreg < 32; PHYreg++ ) {
 #ifdef CONFIG_ASPEED_AST2600
-				Write_Reg_MAC_DD( eng, 0x60, MAC_PHYRd_AST2600 | (PHYaddr << 21) | (( PHYreg & 0x1f ) << 16) );
+				mac_reg_write( eng, 0x60, MAC_PHYRd_New | (PHYaddr << 21) | (( PHYreg & 0x1f ) << 16) );
 				
-				while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYBusy_AST2600 ) {
+				while ( mac_reg_read( eng, 0x60 ) & MAC_PHYBusy_New ) {
 #else				
-				Write_Reg_MAC_DD( eng, 0x60, MAC_PHYRd_New | (PHYaddr << 5) | ( PHYreg & 0x1f ) );
-				while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYBusy_New ) {
+				mac_reg_write( eng, 0x60, MAC_PHYRd_New | (PHYaddr << 5) | ( PHYreg & 0x1f ) );
+				while ( mac_reg_read( eng, 0x60 ) & MAC_PHYBusy_New ) {
 #endif				
 					if ( ++timeout > TIME_OUT_PHY_RW ) {
 						ret = -1;
@@ -344,7 +347,7 @@
 #ifdef Delay_PHYRd
 				DELAY( Delay_PHYRd );
 #endif
-				result_data = Read_Reg_MAC_DD( eng, 0x64 ) & 0xffff;
+				result_data = mac_reg_read( eng, 0x64 ) & 0xffff;
 				switch ( PHYreg % 4 ) {
 					case 0	: printf("%02d| %04x ", PHYreg, result_data ); break;
 					case 3	: printf("%04x\n", result_data ); break;
@@ -354,8 +357,8 @@
 		}
 		else {
 			for ( PHYreg = 0; PHYreg < 32; PHYreg++ ) {
-				Write_Reg_MAC_DD( eng, 0x60, MDC_Thres | MAC_PHYRd | (PHYaddr << 16) | ((PHYreg & 0x1f) << 21) );
-				while ( Read_Reg_MAC_DD( eng, 0x60 ) & MAC_PHYRd ) {
+				mac_reg_write( eng, 0x60, MDC_Thres | MAC_PHYRd | (PHYaddr << 16) | ((PHYreg & 0x1f) << 21) );
+				while ( mac_reg_read( eng, 0x60 ) & MAC_PHYRd ) {
 					if ( ++timeout > TIME_OUT_PHY_RW ) {
 						ret = -1;
 						break;
@@ -364,7 +367,7 @@
 #ifdef Delay_PHYRd
 				DELAY( Delay_PHYRd );
 #endif
-				result_data = Read_Reg_MAC_DD( eng, 0x64 ) >> 16;
+				result_data = mac_reg_read( eng, 0x64 ) >> 16;
 				switch ( PHYreg % 4 ) {
 					case 0	: printf("%02d| %04x ", PHYreg, result_data ); break;
 					case 3	: printf("%04x\n", result_data ); break;
@@ -398,10 +401,10 @@
 // ------------------------------------------------------------------------------
 int do_macgpio (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
 {
-	Write_Reg_GPIO_DD( 0x78 , Read_Reg_GPIO_DD( 0x78 ) & 0xf7bfffff );
-	Write_Reg_GPIO_DD( 0x7c , Read_Reg_GPIO_DD( 0x7c ) | 0x08400000 );
+	GPIO_WR(GPIO_RD( 0x78 ) & 0xf7bfffff, 0x78);
+	GPIO_WR(GPIO_RD( 0x7c ) | 0x08400000, 0x7c);
 	DELAY( 100 );
-	Write_Reg_GPIO_DD( 0x78 , Read_Reg_GPIO_DD( 0x78 ) | 0x08400000 );
+	GPIO_WR(GPIO_RD( 0x78 ) | 0x08400000, 0x78);
 
 	return 0;
 }
@@ -411,6 +414,7 @@
 	"Setting GPIO to trun on the system for the MACTEST/NCSITEST (OEM)",
 	NULL	
 );
+#endif
 /*
 int do_clkduty (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
 {
@@ -426,14 +430,16 @@
 	}
 	argc--;
 
-	Write_Reg_SCU_DD( 0x1DC, 0 );
+	SCU_WR(0,  0x1DC);
 	mac_test( argc, re, MODE_DEDICATED );
-	printf("SCU1DC= %x\n", Read_Reg_SCU_DD(0x1DC) );
+	printf("SCU1DC= %x\n", SCU_RD(0x1DC) );
 
 	for ( i = 0; i < 64; i += temp )
 	{
-		Write_Reg_SCU_DD( 0x1DC, ( ((uint32_t)(i + 0x40) << 16) | ((uint32_t)(i + 0x40) << 8) ) );
-		printf("SCU1DC= %x [%x]\n", Read_Reg_SCU_DD(0x1DC) , (uint32_t)temp );
+		SCU_WR((((uint32_t)(i + 0x40) << 16) | ((uint32_t)(i + 0x40) <<
+			8) ), 0x1DC);
+		
+		printf("SCU1DC= %x [%x]\n", SCU_RD(0x1DC) , (uint32_t)temp );
 		mac_test( argc, re, MODE_DEDICATED );
 	}
 
@@ -446,468 +452,3 @@
 	NULL
 );
 */
-
-#if defined(PHY_GPIO)
-// ------------------------------------------------------------------------------
-void multi_pin_2_gpio_init( MAC_ENGINE *eng )
-{
-#if defined(CONFIG_ASPEED_AST2500)
-	switch (eng->run.MAC_idx_PHY) {
-	case 0:
-		Write_Reg_SCU_DD(0x088, (Read_Reg_SCU_DD(0x088) & 0x3fffffff));
-		break;
-	case 1:
-		Write_Reg_SCU_DD(0x090, (Read_Reg_SCU_DD(0x090) & 0xfffffffb));
-		break;
-	default:
-		break;
-	}
-#endif
-} 
-
-int do_phygread (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	int     MACnum;
-	int     PHYreg;
-	uint32_t   result_data;
-	int     ret = 0;
-	int     PHYaddr;
-	int     GPIO_RdDelay = 0;
-
-	eng = &MACENG;
-	do {
-		if ( argc == 5 ) {
-			GPIO_RdDelay = strtoul(argv[4], NULL, 16);
-		} else
-
-		if ( argc != 4 ) {
-			printf(" Wrong parameter number.\n");
-			printf(" phyr mac addr reg\n");
-			printf("   mac     : 0 or 1.   [hex]\n");
-			printf("   PHY addr: 0 to 0x1F.[hex]\n");
-			printf("   register: 0 to 0xFF.[hex]\n");
-			printf(" example: phyr 0 0 1\n");
-			ret = -1;
-			break;
-		}
-
-		MACnum  = strtoul(argv[1], NULL, 16);
-		PHYaddr = strtoul(argv[2], NULL, 16);
-		PHYreg  = strtoul(argv[3], NULL, 16);
-
-		if ( MACnum == 0 ) {
-			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
-		}
-		else if ( MACnum == 1 ) {
-			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;
-		}
-		else {
-			printf("wrong parameter (mac number)\n");
-			ret = -1;
-			break;
-		}
-
-		if ( ( PHYaddr < 0 ) || ( PHYaddr > 31 ) ) {
-			printf("wrong parameter (PHY address)\n");
-			ret = -1;
-			break;
-		}
-
-		multi_pin_2_gpio_init( eng );
-		phy_gpio_init( eng );
-		eng->GPIO.Dat_RdDelay = GPIO_RdDelay;
-		eng->phy.Adr = PHYaddr;
-		result_data = phy_gpio_read( eng, PHYreg );
-		printf("[GPIO][%d] PHY[%d] reg[0x%02X] = %04x\n", eng->GPIO.Dat_RdDelay, PHYaddr, PHYreg, result_data );
-	} while ( 0 );
-
-	return ret;
-}
-
-int do_phygwrite (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	int     MACnum;
-	int     PHYreg;
-	int     PHYaddr;
-	uint32_t   reg_data;
-	int     ret     = 0;
-
-	eng = &MACENG;
-
-	do {
-		if ( argc != 5 )
-		{
-			printf(" Wrong parameter number.\n");
-			printf(" phyw mac addr reg data\n");
-			printf("   mac     : 0 or 1.     [hex]\n");
-			printf("   PHY addr: 0 to 0x1F.  [hex]\n");
-			printf("   register: 0 to 0xFF.  [hex]\n");
-			printf("   data    : 0 to 0xFFFF.[hex]\n");
-			printf(" example: phyw 0 0 0 610\n");
-			ret = -1;
-			break;
-		}
-
-		MACnum   = strtoul(argv[1], NULL, 16);
-		PHYaddr  = strtoul(argv[2], NULL, 16);
-		PHYreg   = strtoul(argv[3], NULL, 16);
-		reg_data = strtoul(argv[4], NULL, 16);
-
-		if ( MACnum == 0 ) {
-			// Set MAC 0
-			eng->run.MAC_BASE  = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
-		}
-		else if ( MACnum == 1 ) {
-			// Set MAC 1
-			eng->run.MAC_BASE  = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;
-		}
-		else {
-			printf("wrong parameter (mac number)\n");
-			ret = -1;
-			break;
-		}
-
-		if ( ( PHYaddr < 0 ) || ( PHYaddr > 31 ) ) {
-			printf("wrong parameter (PHY address)\n");
-			ret = -1;
-			break;
-		}
-
-		multi_pin_2_gpio_init( eng );
-		phy_gpio_init( eng );
-		eng->phy.Adr = PHYaddr;
-		phy_gpio_write( eng, PHYreg, reg_data );
-		printf("[GPIO]Write: PHY[%d] reg[0x%02X] = %04x\n", PHYaddr, PHYreg, reg_data );
-	} while ( 0 );
-
-	return ret;
-}
-
-int do_phygdump (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	uint32_t     MACnum;
-	int     PHYreg;
-	uint32_t   result_data;
-	int     ret = 0;
-	int     PHYaddr;
-	int     GPIO_RdDelay = 0;
-
-	eng = &MACENG;
-	do {
-		if ( argc == 4 ) {
-			GPIO_RdDelay = strtoul(argv[3], NULL, 16);
-		} else if ( argc != 3 ) {
-			printf(" Wrong parameter number.\n");
-			printf(" phyd mac addr\n");
-			printf("   mac     : 0 or 1.   [hex]\n");
-			printf("   PHY addr: 0 to 0x1F.[hex]\n");
-			printf(" example: phyd 0 0\n");
-			ret = -1;
-			break;
-		}
-
-		MACnum  = strtoul(argv[1], NULL, 16);
-		PHYaddr = strtoul(argv[2], NULL, 16);
-
-		if ( MACnum == 0 ) {
-			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
-		}
-		else if ( MACnum == 1 ) {
-			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;            
-		}
-		else {
-			printf("wrong parameter (mac number)\n");
-			ret = -1;
-			break;
-		}
-
-		if ( ( PHYaddr < 0 ) || ( PHYaddr > 31 ) ) {
-			printf("wrong parameter (PHY address)\n");
-			ret = -1;
-			break;
-		}
-
-		multi_pin_2_gpio_init( eng );
-		phy_gpio_init( eng );
-		eng->GPIO.Dat_RdDelay = GPIO_RdDelay;
-		eng->phy.Adr = PHYaddr;
-		for ( PHYreg = 0; PHYreg < 32; PHYreg++ ) {
-			result_data = phy_gpio_read( eng, PHYreg );
-			switch (PHYreg % 4) {
-			case 0:
-				printf("%02d| %04x ", PHYreg, result_data);
-				break;
-			case 3:
-				printf("%04x\n", result_data);
-				break;
-			default:
-				printf("%04x ", result_data);
-				break;
-			}
-		}
-	} while ( 0 );
-
-	return ret;
-}
-
-int do_impread (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	int     MACnum;
-	uint32_t   result_data;
-	int     ret = 0;
-	int     page;
-	int     offset;
-	int     GPIO_RdDelay = 0;
-
-	eng = &MACENG;
-	do {
-		if ( argc == 5 ) {
-			GPIO_RdDelay = strtoul(argv[4], NULL, 16);
-		} else
-
-		if ( argc != 4 ) {
-			printf(" Wrong parameter number.\n");
-			printf(" impr mac page offset\n");
-			printf("   mac     : 0 or 1.   [hex]\n");
-			printf("   page    : 0 to 0xFF.[hex]\n");
-			printf("   offset  : 0 to 0xFF.[hex]\n");
-			ret = -1;
-			break;
-		}
-
-		MACnum  = strtoul(argv[1], NULL, 16);
-		page    = strtoul(argv[2], NULL, 16) & 0xff;
-		offset  = strtoul(argv[3], NULL, 16) & 0xff;
-
-		if ( MACnum == 0 ) {
-			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
-		}
-		else if ( MACnum == 1 ) {
-			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;
-		}
-		else {
-			printf("wrong parameter (mac number)\n");
-			ret = -1;
-			break;
-		}
-
-		multi_pin_2_gpio_init( eng );
-		phy_gpio_init( eng );
-		eng->GPIO.Dat_RdDelay = GPIO_RdDelay;
-		eng->phy.Adr = 30;
-
-		BCMIMP_set_page ( eng, page );
-		BCMIMP_reg_read ( eng, offset );
-		printf("[IMP Rd][page %d:0x%02X] = %08x %08x\n", page, offset, eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0] );
-	} while ( 0 );
-
-	return ret;
-}
-int impwrite (MAC_ENGINE *eng, int MACnum, int page, int offset, int reg_data1, int reg_data0)
-{
-	BCMIMP_set_page ( eng, page );
-	BCMIMP_reg_read ( eng, offset );
-	printf("[IMP Wr][page %d:0x%02X] = %08x %08x", page, offset, eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0] );
-	BCMIMP_reg_write( eng, offset, reg_data1, reg_data0 );
-	BCMIMP_reg_read ( eng, offset );
-	printf(" --> %08x %08x (%08x %08x)\n", eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0], reg_data1, reg_data0 );
-}
-
-int do_impwrite (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	int     MACnum;
-	uint32_t   result_data;
-	int     ret = 0;
-	int     page;
-	int     offset;
-	uint32_t   reg_data0;
-	uint32_t   reg_data1;
-	int     GPIO_RdDelay = 0;
-
-	eng = &MACENG;
-	do {
-		if ( argc == 7 ) {
-			GPIO_RdDelay = strtoul(argv[6], NULL, 16);
-		} else
-
-		if ( argc != 6 ) {
-			printf(" Wrong parameter number.\n");
-			printf(" impw mac page offset dw1 dw0\n");
-			printf("   mac     : 0 or 1.   [hex]\n");
-			printf("   page    : 0 to 0xFF.[hex]\n");
-			printf("   offset  : 0 to 0xFF.[hex]\n");
-			printf("   dw1     : 0 to 0xFFFFFFFF.[hex]\n");
-			printf("   dw0     : 0 to 0xFFFFFFFF.[hex]\n");
-			ret = -1;
-			break;
-		}
-
-		MACnum    = strtoul(argv[1], NULL, 16);
-		page      = strtoul(argv[2], NULL, 16) & 0xff;
-		offset    = strtoul(argv[3], NULL, 16) & 0xff;
-		reg_data1 = strtoul(argv[4], NULL, 16);
-		reg_data0 = strtoul(argv[5], NULL, 16);
-
-		if ( MACnum == 0 ) {
-			// Set MAC 0
-			eng->run.MAC_BASE = MAC_BASE1;
-			eng->run.MAC_idx_PHY  = 0;
-		}
-		else if ( MACnum == 1 ) {
-			// Set MAC 1
-			eng->run.MAC_BASE = MAC_BASE2;
-			eng->run.MAC_idx_PHY  = 1;
-		}
-		else {
-			printf("wrong parameter (mac number)\n");
-			ret = -1;
-			break;
-		}
-
-		multi_pin_2_gpio_init( eng );
-		phy_gpio_init( eng );
-		eng->GPIO.Dat_RdDelay = GPIO_RdDelay;
-		eng->phy.Adr = 30;
-
-		impwrite(eng, MACnum, page, offset, reg_data1, reg_data0);
-	} while ( 0 );
-
-	return ret;
-}
-
-int do_setbcm5396 (cmd_tbl_t * cmdtp, int flag, int argc, char *argv[])
-{
-	MAC_ENGINE	MACENG;
-	MAC_ENGINE	*eng;
-	int     MACnum;
-	int     GPIO_RdDelay = 0;
-
-	eng = &MACENG;
-
-	MACnum = 1;
-
-	if ( MACnum == 0 ) {
-		// Set MAC 0
-		eng->run.MAC_BASE = MAC_BASE1;
-		eng->run.MAC_idx_PHY  = 0;
-	}
-	else {
-		// Set MAC 1
-		eng->run.MAC_BASE = MAC_BASE2;
-		eng->run.MAC_idx_PHY  = 1;
-	}
-
-	multi_pin_2_gpio_init( eng );
-	phy_gpio_init( eng );
-	eng->GPIO.Dat_RdDelay = GPIO_RdDelay;
-	eng->phy.Adr = 30;
-
-	impwrite(eng, 1, 0x02, 0x00, 0x00000000, 0x00000082);
-	impwrite(eng, 1, 0x00, 0x86, 0x00000000, 0x00000020);
-	impwrite(eng, 1, 0x00, 0x70, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x10, 0x00000000, 0x0000001C);
-	impwrite(eng, 1, 0x34, 0x08, 0x00000000, 0x00000002);
-	impwrite(eng, 1, 0x10, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x11, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x12, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x13, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x14, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x15, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x16, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x17, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x18, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x19, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x1A, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x1B, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x1C, 0x20, 0x00000000, 0x000001C1);
-	impwrite(eng, 1, 0x00, 0x60, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x61, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x62, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x63, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x64, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x65, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x66, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x67, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x68, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x69, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x6A, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x6B, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x6C, 0x00000000, 0x0000008B);
-	impwrite(eng, 1, 0x00, 0x00, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x01, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x02, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x03, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x04, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x05, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x06, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x07, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x08, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x09, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0A, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0B, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0C, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0D, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0E, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x0F, 0x00000000, 0x00000000);
-	impwrite(eng, 1, 0x00, 0x20, 0x00000000, 0x00000007);
-}
-
-U_BOOT_CMD(
-	phygr,    NETESTCMD_MAX_ARGS, 0,  do_phygread,
-	"Read PHY register.  (phyr mac addr reg)",
-	NULL
-);
-
-U_BOOT_CMD(
-	phygw,    NETESTCMD_MAX_ARGS, 0,  do_phygwrite,
-	"Write PHY register. (phyw mac addr reg data)",
-	NULL
-);
-
-U_BOOT_CMD(
-	phygd,    NETESTCMD_MAX_ARGS, 0,  do_phygdump,
-	"Dump PHY register. (phyd mac addr)",
-	NULL
-);
-
-U_BOOT_CMD(
-	impr,    NETESTCMD_MAX_ARGS, 0,  do_impread,
-	"Read IMP Port register.  (impr mac page offset)",
-	NULL
-);
-U_BOOT_CMD(
-	impw,    NETESTCMD_MAX_ARGS, 0,  do_impwrite,
-	"Write IMP Port register.  (impw mac page offset dw1 dw0)",
-	NULL
-);
-U_BOOT_CMD(
-	setbcm5396,    NETESTCMD_MAX_ARGS, 0,  do_setbcm5396,
-	"Setting BCM5396 register.  (setbcm5396)",
-	NULL
-);
-#endif // defined(PHY_GPIO)
-
diff -Naur u-boot-2019.04/cmd/nettest/comminf.h uboot/cmd/nettest/comminf.h
--- u-boot-2019.04/cmd/nettest/comminf.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/comminf.h	2020-01-14 13:36:49.337961228 -0500
@@ -14,10 +14,7 @@
 
 #include "swfunc.h"
 
-#include "typedef.h"
 #include "mac.h"
-#include "physpecial.h"
-#include "phygpio.h"
 
 //---------------------------------------------------------
 // Print Message
@@ -27,17 +24,17 @@
 #define FP_IO                                    1
 #define STD_OUT                                  2
 
-#define PRINTF(i, ...)                                          \
-   do {                                                         \
-       if (i == STD_OUT) {                                      \
-           fprintf(stdout, __VA_ARGS__);                        \
-           break;                                               \
-       }                                                        \
-       if ( (display_lantest_log_msg != 0) && (i == FP_LOG) ) { \
-           fprintf(stdout, "[Log]:   ");                        \
-           fprintf(stdout, __VA_ARGS__);                        \
-       }                                                        \
-   } while ( 0 );
+#define PRINTF(i, ...)                                                         \
+	do {                                                                   \
+		if (i == STD_OUT) {                                            \
+			fprintf(stdout, __VA_ARGS__);                          \
+			break;                                                 \
+		}                                                              \
+		if ((display_lantest_log_msg != 0) && (i == FP_LOG)) {         \
+			fprintf(stdout, "[Log]:   ");                          \
+			fprintf(stdout, __VA_ARGS__);                          \
+		}                                                              \
+	} while (0);
 
 //---------------------------------------------------------
 // Function
@@ -78,76 +75,51 @@
 //---------------------------------------------------------
 // Default argument
 //---------------------------------------------------------
-#define  DEF_GUSER_DEF_PACKET_VAL                0x66666666     //0xff00ff00, 0xf0f0f0f0, 0xcccccccc, 0x55aa55aa, 0x5a5a5a5a, 0x66666666
-#define  DEF_GIOTIMINGBUND                       5              //0/1/3/5/7
+#define  DEF_GUSER_DEF_PACKET_VAL                0xaaaaaaaa     //0xff00ff00, 0xf0f0f0f0, 0xcccccccc, 0x55aa55aa, 0x5a5a5a5a, 0x66666666
+#define  DEF_GIOTIMINGBUND                       2
 #define  DEF_GPHY_ADR                            0
 #define  DEF_GTESTMODE                           0              //[0]0: no burst mode, 1: 0xff, 2: 0x55, 3: random, 4: ARP, 5: ARP, 6: IO timing, 7: IO timing+IO Strength
 #define  DEF_GLOOP_MAX                           1
-#define  DEF_MAC_LOOP_BACK                       0              //GCtrl bit6
-#define  DEF_SKIP_CHECK_PHY                      0              //GCtrl bit5
-#define  DEF_INTERNAL_LOOP_PHY                   0              //GCtrl bit4
-#define  DEF_INIT_PHY                            1              //GCtrl bit3
-#define  DEF_DIS_RECOVPHY                        0              //GCtrl bit2
-#define  DEF_GCTRL                               (( DEF_MAC_LOOP_BACK << 6 ) | ( DEF_SKIP_CHECK_PHY << 5 ) | ( DEF_INTERNAL_LOOP_PHY << 4 ) | ( DEF_INIT_PHY << 3 ) | ( DEF_DIS_RECOVPHY << 2 ))
-
-#define  SET_1GBPS                               0              // 1G bps
-#define  SET_100MBPS                             1              // 100M bps
-#define  SET_10MBPS                              2              // 10M bps
-#define  SET_1G_100M_10MBPS                      3              // 1G and 100M and 10M bps
-#define  SET_100M_10MBPS                         4              // 100M and 10M bps
-#ifdef Enable_MAC_ExtLoop
-#define  DEF_GSPEED                              SET_1GBPS
-#else
+#define  DEF_GCTRL                               0
+
+#define  SET_1GBPS                               BIT(0)
+#define  SET_100MBPS                             BIT(1)
+#define  SET_10MBPS                              BIT(2)
+#define  SET_1G_100M_10MBPS                      (SET_1GBPS | SET_100MBPS | SET_10MBPS)
+#define  SET_100M_10MBPS                         (SET_100MBPS | SET_10MBPS)
+
 #define  DEF_GSPEED                              SET_1G_100M_10MBPS
-#endif
 #define  DEF_GARPNUMCNT                          0
 
 //---------------------------------------------------------
 // MAC information
 //---------------------------------------------------------
-#define MAC_BASE1                              0x1e660000
-#define MAC_BASE2                              0x1e680000
-#define MAC_BASE3                              0x1e670000
-#define MAC_BASE4                              0x1e690000
+
 #define MDC_Thres                                0x3f
 #define MAC_PHYWr                                0x08000000
 #define MAC_PHYRd                                0x04000000
 
+#ifdef CONFIG_ASPEED_AST2600
+#define MAC_PHYWr_New 	(BIT(31) | BIT(28) | (0x1 << 26)) /* 0x94000000 */
+#define MAC_PHYRd_New 	(BIT(31) | BIT(28) | (0x2 << 26)) /* 0x98000000 */
+#define MAC_PHYBusy_New	BIT(31)
+#else
 #define MAC_PHYWr_New                            0x00009400
 #define MAC_PHYRd_New                            0x00009800
 #define MAC_PHYBusy_New                          0x00008000
-
-#define MAC_PHYWr_AST2600                         0x94000000
-#define MAC_PHYRd_AST2600                         0x98000000
-#define MAC_PHYBusy_AST2600                       0x80000000
-#define MAC_PHYIDLE_AST2600                       0x00010000
-
-//#define MAC_030_def                              0x00001010
-//#define MAC_034_def                              0x00000000
-//#define MAC_038_def                              0x00d22f00 //default 0x22f00
-//#define MAC_038_def                              0x00022f00 //default 0x22f00
-//#define MAC_038_def                              0x00022400 //default 0x22500 (AST2500)
-//#define MAC_040_def                              0x00000000
-
-#ifdef Enable_BufMerge
-    #define MAC_048_def                          0x007702F1 //default 0xf1
-#else
-    #define MAC_048_def                          0x000002F1 //default 0xf1
 #endif
+
+#define MAC_048_def                          0x000002F1 //default 0xf1
 //#define MAC_058_def                              0x00000040 //0x000001c0
 
 //---------------------------------------------------------
 // Data information
 //---------------------------------------------------------
-#if defined(Enable_MAC_ExtLoop) || defined(Enable_MAC_ExtLoop_PakcegMode) || defined(SelectSimpleBoundary) || defined(PHY_SPECIAL)
-      #define ZeroCopy_OFFSET                    0
-#else
-      #define ZeroCopy_OFFSET                    (( eng->run.TM_Burst ) ? 0 : 2)
-#endif
+#define ZeroCopy_OFFSET                    (( eng->run.tm_tx_only ) ? 0 : 2)
 
-//      --------------------------------- DRAM_MapAdr            = TDES_BASE
+//      --------------------------------- DRAM_MapAdr            = tdes_base
 //              | TX descriptor ring    |
-//              ------------------------- DRAM_MapAdr + 0x040000 = RDES_BASE
+//              ------------------------- DRAM_MapAdr + 0x040000 = rdes_base
 //              | RX descriptor ring    |
 //              -------------------------
 //              | Reserved              |
@@ -178,33 +150,21 @@
 //              |   #n, n = DMA_BufNum  |
 //              |                       |
 //      ---------------------------------
-#ifdef Enable_MAC_ExtLoop
-  #define DRAM_OFS_BUF                         0x00000000
-#else
-  #define DRAM_OFS_BUF                         0x04000000
-  // #define DRAM_OFS_BUF                         0x06000000 // in-house setting
-#endif
-
-#define DRAM_OFS_WINDOW                      0x80000000
-#define DRAM_OFS_REMAP                       0x00000000
-
-  #define TDES_BASE1                             ( 0x00000000 + DRAM_OFS_BUF - DRAM_OFS_REMAP + DRAM_OFS_WINDOW )
-#ifdef Enable_MAC_ExtLoop
-  #define RDES_BASE1                             ( 0x00080000 + DRAM_OFS_BUF - DRAM_OFS_REMAP + DRAM_OFS_WINDOW )
-#else
-  #define RDES_BASE1                             ( 0x00040000 + DRAM_OFS_BUF - DRAM_OFS_REMAP + DRAM_OFS_WINDOW )
-#endif
-  #define DMA_BASE                               ( 0x00100000 + DRAM_OFS_BUF - DRAM_OFS_REMAP + DRAM_OFS_WINDOW )
 
-  #define TDES_IniVal                            ( 0xb0000000 + eng->dat.FRAME_LEN_Cur )
-  #define RDES_IniVal                            ( 0x00000fff )
-  #define EOR_IniVal                             ( 0x40008000 )
-  #define HWOwnTx(dat)                           ( dat & 0x80000000      )
-  #define HWOwnRx(dat)                           ((dat & 0x80000000) == 0)
-  #define HWEOR(dat)                             ( dat & 0x40000000      )
+#define BUF_SIZE			0x04000000
+#define TDES_SIZE			0x00040000
+#define RDES_SIZE			0x00040000
+#define RESV_SIZE			0x00000000		/* reserved */
+
+#define TDES_IniVal (0xb0000000 + eng->dat.FRAME_LEN_Cur)
+#define RDES_IniVal (0x00000fff)
+#define EOR_IniVal (0x40000000)
+#define HWOwnTx(dat) (dat & 0x80000000)
+#define HWOwnRx(dat) ((dat & 0x80000000) == 0)
+#define HWEOR(dat) (dat & 0x40000000)
 
-  #define AT_MEMRW_BUF( x )                      ( ( x ) + DRAM_OFS_REMAP - DRAM_OFS_WINDOW )
-  #define AT_BUF_MEMRW( x )                      ( ( x ) - DRAM_OFS_REMAP + DRAM_OFS_WINDOW )
+#define AT_MEMRW_BUF(x) ((x) - ASPEED_DRAM_BASE)
+#define AT_BUF_MEMRW(x) ((x) + ASPEED_DRAM_BASE)
 
 //---------------------------------------------------------
 // Error Flag Bits
@@ -266,70 +226,30 @@
 #define NCSI_Flag_Reset_Channel                       ( 1 << 13 )   // Time out when Reset Channel
 
 //---------------------------------------------------------
-// SCU information
-//---------------------------------------------------------
-#define SMB_BASE				0x1e720000
-#define SCU_BASE				0x1e6e2000
-#define SDR_BASE				0x1e6e0000
-#define WDT_BASE				0x1e785000
-#define TIMER_BASE				0x1e782000
-#define GPIO_BASE				0x1e780000
-
-#define SCU_48h_AST1010				0x00000200
-#define SCU_48h_AST2300				0x00222255
-#define SCU_48h_AST2500				0x00082208
-#define SCU_B8h_AST2500				0x00082208
-#define SCU_BCh_AST2500				0x00082208
-
-//#define SCU_80h                                  0x0000000f     //AST2300[3:0]MAC1~4 PHYLINK
-//#define SCU_88h                                  0xc0000000     //AST2300[31]MAC1 MDIO, [30]MAC1 MDC
-//#define SCU_90h                                  0x00000004     //AST2300[2 ]MAC2 MDC/MDIO
-//#define SCU_74h                                  0x06300000     //AST3000[20]MAC2 MDC/MDIO, [21]MAC2 MII, [25]MAC1 PHYLINK, [26]MAC2 PHYLINK
-
-//---------------------------------------------------------
 // DMA Buffer information
 //---------------------------------------------------------
-#ifdef FPGA
-  #define DRAM_KByteSize			(56 * 1024)
-#else  
-  #define DRAM_KByteSize			(16500)         //16.11328125 K
-#endif
-
+#define DMA_BUF_SIZE				(56 * 1024 * 1024)
+extern uint8_t dma_buf[DMA_BUF_SIZE];
 
-#ifdef Enable_Jumbo
-  #define DMA_PakSize                            ( 10 * 1024 )
-#else
-  #define DMA_PakSize                            ( 2 * 1024 ) // The size of one LAN packet
-#endif
+#define DMA_BASE				((uint32_t)(&dma_buf[0]))
+/* The size of one LAN packet */
+#define DMA_PakSize 				(2 * 1024)
 
 #ifdef SelectSimpleBoundary
-  #define DMA_BufSize                            (     ( ( ( ( eng->dat.Des_Num + 15 ) * DMA_PakSize ) >> 2 ) << 2 ) ) //vary by Des_Num
+#define DMA_BufSize (((((p_eng->dat.Des_Num + 15) * DMA_PakSize) >> 2) << 2))
 #else
-  #define DMA_BufSize                            ( 4 + ( ( ( ( eng->dat.Des_Num + 15 ) * DMA_PakSize ) >> 2 ) << 2 ) ) //vary by Des_Num
+#define DMA_BufSize                                                            \
+	(4 + ((((p_eng->dat.Des_Num + 15) * DMA_PakSize) >> 2) << 2))
 #endif
+#define DMA_BufNum (DMA_BUF_SIZE / (p_eng->dat.DMABuf_Size))
 
-#define DMA_BufNum                               ( ( DRAM_KByteSize * 1024 ) / ( eng->dat.DMABuf_Size ) )                //vary by eng->dat.Des_Num
-#define GET_DMA_BASE_SETUP                       ( DMA_BASE )
-//#define GET_DMA_BASE(x)                          ( DMA_BASE + ( ( ( ( x ) % eng->dat.DMABuf_Num ) + 1 ) * eng->dat.DMABuf_Size ) )//vary by eng->dat.Des_Num
-#define GET_DMA_BASE(x)                          ( DMA_BASE + ( ( ( ( x ) % eng->dat.DMABuf_Num ) + 1 ) * eng->dat.DMABuf_Size ) + ( ( ( x ) % 7 ) * DMA_PakSize ) )//vary by eng->dat.Des_Num
+/* get DMA buffer address according to the loop counter */
+#define GET_DMA_BASE(p_eng, x)                                                 \
+	(DMA_BASE + ((((x) % p_eng->dat.DMABuf_Num)) * p_eng->dat.DMABuf_Size))
 
 #define SEED_START                               8
 #define DATA_SEED(seed)                          ( ( seed ) | (( seed + 1 ) << 16 ) )
 #define DATA_IncVal                              0x00020001
-//#define DATA_IncVal                              0x01000001     //fail
-//#define DATA_IncVal                              0x10000001     //fail
-//#define DATA_IncVal                              0x10000000     //fail
-//#define DATA_IncVal                              0x80000000     //fail
-//#define DATA_IncVal                              0x00000001     //ok
-//#define DATA_IncVal                              0x01000100     //ok
-//#define DATA_IncVal                              0x01010000     //ok
-//#define DATA_IncVal                              0x01010101     //ok
-//#define DATA_IncVal                              0x00000101     //ok
-//#define DATA_IncVal                              0x00001111     //fail
-//#define DATA_IncVal                              0x00000011     //fail
-//#define DATA_IncVal                              0x10100101     //fail
-//#define DATA_IncVal                              0xfeff0201
-//#define DATA_IncVal                              0x00010001
 #define PktByteSize                              ( ( ( ( ZeroCopy_OFFSET + eng->dat.FRAME_LEN_Cur - 1 ) >> 2 ) + 1) << 2 )
 
 //---------------------------------------------------------
@@ -350,65 +270,55 @@
 //#define Delay_PHYRd                              5
 #define Delay_PHYRd                              1         //20150423
 
-//#define Delay_SCU                                11
-#define Delay_SCU                                1         //20150423
 #define Delay_MACRst                             1
 #define Delay_MACDump                            1
 
 //#define Delay_DES                                1
-#ifdef Enable_MAC_ExtLoop_PakcegMode
-  #define Delay_CheckData                        100
-  #define Delay_CheckData_LoopNum                100
-#else
-//  #define Delay_CheckData                        100
-//  #define Delay_CheckData_LoopNum                100
-#endif
 
 //---------------------------------------------------------
 // Time Out
 //---------------------------------------------------------
-#ifdef Enable_MAC_ExtLoop_PakcegMode
-//    #define TIME_OUT_Des_1G                      40000
-//    #define TIME_OUT_Des_100M                    400000
-//    #define TIME_OUT_Des_10M                     2000000
-    #define TIME_OUT_Des_1G                      0
-    #define TIME_OUT_Des_100M                    0
-    #define TIME_OUT_Des_10M                     0
-    #define TIME_OUT_NCSI                        0
-    #define TIME_OUT_PHY_RW                      10000
-    #define TIME_OUT_PHY_Rst                     10000
-#else
-    #define TIME_OUT_Des_1G                      10000     //400
-    #define TIME_OUT_Des_100M                    20000     //4000
-    #define TIME_OUT_Des_10M                     50000     //20000
-    #define TIME_OUT_NCSI                        100000    //40000
-    #define TIME_OUT_PHY_RW                      2000000   //100000
-    #define TIME_OUT_PHY_Rst                     20000     //1000
-#endif
-//#define TIME_OUT_PHY_RW                          10000
-//#define TIME_OUT_PHY_Rst                         10000
-
-////#define TIME_OUT_NCSI                            300000
-//#define TIME_OUT_NCSI                            30000     //20150423
-
-//---------------------------------------------------------
-// Others
-//---------------------------------------------------------
-#define Loop_OverFlow                            0x7fffffff
+#define TIME_OUT_Des_1G                      10000     //400
+#define TIME_OUT_Des_100M                    20000     //4000
+#define TIME_OUT_Des_10M                     50000     //20000
+#define TIME_OUT_NCSI                        100000    //40000
+#define TIME_OUT_PHY_RW                      2000000   //100000
+#define TIME_OUT_PHY_Rst                     20000     //1000
 
 //---------------------------------------------------------
 // Chip memory MAP
 //---------------------------------------------------------
-#define LITTLE_ENDIAN_ADDRESS                    0
-#define BIG_ENDIAN_ADDRESS                       1
-
-typedef struct {
-    uint32_t StartAddr;
-    uint32_t EndAddr;
-}  LittleEndian_Area;
-
-static const LittleEndian_Area LittleEndianArea[] = {{ 0xFFFFFFFF, 0xFFFFFFFF }};
-
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t txdma_en		: 1;	/* bit[0] */
+		uint32_t rxdma_en		: 1;	/* bit[1] */
+		uint32_t txmac_en		: 1;	/* bit[2] */
+		uint32_t rxmac_en		: 1;	/* bit[3] */
+		uint32_t rm_vlan		: 1;	/* bit[4] */
+		uint32_t hptxr_en		: 1;	/* bit[5] */
+		uint32_t phy_link_sts_dtct	: 1;	/* bit[6] */
+		uint32_t enrx_in_halftx		: 1;	/* bit[7] */
+		uint32_t fulldup		: 1;	/* bit[8] */
+		uint32_t gmac_mode		: 1;	/* bit[9] */
+		uint32_t crc_apd		: 1;	/* bit[10] */
+#ifdef CONFIG_ASPEED_AST2600
+		uint32_t reserved_1		: 1;	/* bit[11] */
+#else		
+		uint32_t phy_link_lvl_dtct	: 1;	/* bit[11] */
+#endif		
+		uint32_t rx_runt		: 1;	/* bit[12] */
+		uint32_t jumbo_lf		: 1;	/* bit[13] */
+		uint32_t rx_alladr		: 1;	/* bit[14] */
+		uint32_t rx_ht_en		: 1;	/* bit[15] */
+		uint32_t rx_multipkt_en		: 1;	/* bit[16] */
+		uint32_t rx_broadpkt_en		: 1;	/* bit[17] */
+		uint32_t discard_crcerr		: 1;	/* bit[18] */
+		uint32_t speed_100		: 1;	/* bit[19] */
+		uint32_t reserved_0		: 11;	/* bit[30:20] */
+		uint32_t sw_rst			: 1;	/* bit[31] */
+	}b;
+} mac_cr_t;
 // ========================================================
 // For ncsi.c
 
@@ -476,315 +386,380 @@
 #endif
 
 typedef struct {
-	unsigned char        All_ID                                   ;//__attribute__ ((aligned (4)));
-	unsigned char        Package_ID                               ;//__attribute__ ((aligned (4)));
-	unsigned char        Channel_ID                               ;//__attribute__ ((aligned (4)));
-	uint32_t Capabilities_Flags                       ;//__attribute__ ((aligned (4)));
-	uint32_t Broadcast_Packet_Filter_Capabilities     ;//__attribute__ ((aligned (4)));
-	uint32_t Multicast_Packet_Filter_Capabilities     ;//__attribute__ ((aligned (4)));
-	uint32_t Buffering_Capabilities                   ;//__attribute__ ((aligned (4)));
-	uint32_t AEN_Control_Support                      ;//__attribute__ ((aligned (4)));
-	unsigned char        VLAN_Filter_Count                        ;//__attribute__ ((aligned (4)));
-	unsigned char        Mixed_Filter_Count                       ;//__attribute__ ((aligned (4)));
-	unsigned char        Multicast_Filter_Count                   ;//__attribute__ ((aligned (4)));
-	unsigned char        Unicast_Filter_Count                     ;//__attribute__ ((aligned (4)));
-	unsigned char        VLAN_Mode_Support                        ;//__attribute__ ((aligned (4)));
-	unsigned char        Channel_Count                            ;//__attribute__ ((aligned (4)));
-	uint32_t PCI_DID_VID                              ;//__attribute__ ((aligned (4)));
-	uint32_t ManufacturerID                           ;//__attribute__ ((aligned (4)));
+	unsigned char        All_ID                                   ;
+	unsigned char        Package_ID                               ;
+	unsigned char        Channel_ID                               ;
+	uint32_t Capabilities_Flags                       ;
+	uint32_t Broadcast_Packet_Filter_Capabilities     ;
+	uint32_t Multicast_Packet_Filter_Capabilities     ;
+	uint32_t Buffering_Capabilities                   ;
+	uint32_t AEN_Control_Support                      ;
+	unsigned char        VLAN_Filter_Count                        ;
+	unsigned char        Mixed_Filter_Count                       ;
+	unsigned char        Multicast_Filter_Count                   ;
+	unsigned char        Unicast_Filter_Count                     ;
+	unsigned char        VLAN_Mode_Support                        ;
+	unsigned char        Channel_Count                            ;
+	uint32_t PCI_DID_VID                              ;
+	uint32_t manufacturer_id                           ;
 } NCSI_Capability;
+
 typedef struct {
-#ifdef CONFIG_ASPEED_AST2600
-	uint32_t SCU_FPGASel                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_510                       ;//__attribute__ ((aligned (4)));
-#endif
-	uint32_t MAC_000                       ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_008                       ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_00c                       ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_040                       ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_040_new                   ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_050                       ;//__attribute__ ((aligned (4)));
-	uint32_t MAC_050_Speed                 ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_004                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_004_mix                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_004_rstbit                ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_004_dis                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_004_en                    ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_008                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_00c                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_00c_mix                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_00c_clkbit                ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_00c_dis                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_00c_en                    ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_048                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_048_mix                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_048_default               ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_048_check                 ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_070                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_074                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_074_mix                   ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_07c                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_080                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_088                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_090                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_09c                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_0b8                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_0bc                       ;//__attribute__ ((aligned (4)));
-	uint32_t SCU_0f0                       ;//__attribute__ ((aligned (4)));
-	uint32_t WDT_00c                       ;//__attribute__ ((aligned (4)));
-	uint32_t WDT_02c                       ;//__attribute__ ((aligned (4)));
-	uint32_t WDT_04c                       ;//__attribute__ ((aligned (4)));
-
-	CHAR                 SCU_oldvld                    ;//__attribute__ ((aligned (4)));
-} MAC_Register;
-typedef struct {
-	CHAR                 ASTChipType                   ;//__attribute__ ((aligned (4)));
-	CHAR                 ASTChipName[64]               ;//__attribute__ ((aligned (4)));
-	CHAR                 AST1100                       ;//__attribute__ ((aligned (4)));//Different in phy & dram initiation & dram size & RMII
-	CHAR                 AST2300                       ;//__attribute__ ((aligned (4)));
-	CHAR                 AST2400                       ;//__attribute__ ((aligned (4)));
-	CHAR                 AST1010                       ;//__attribute__ ((aligned (4)));
-	CHAR                 AST2500                       ;//__attribute__ ((aligned (4)));
-	CHAR                 AST2500A1                     ;//__attribute__ ((aligned (4)));
-
-	CHAR                 MAC_Mode                      ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC1_1Gvld                    ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC2_1Gvld                    ;//__attribute__ ((aligned (4)));
-#ifdef CONFIG_ASPEED_AST2600
-	CHAR                 MAC3_1Gvld                    ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC4_1Gvld                    ;//__attribute__ ((aligned (4)));
-#endif
-	CHAR                 MAC1_RMII                     ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC2_RMII                     ;//__attribute__ ((aligned (4)));
-#ifdef CONFIG_ASPEED_AST2600
-	CHAR                 MAC3_RMII                     ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC4_RMII                     ;//__attribute__ ((aligned (4)));
-#endif
-	CHAR                 MAC_atlast_1Gvld              ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC2_vld                      ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC34_vld                     ;//__attribute__ ((aligned (4)));
-
-	CHAR                 MAC_1Gvld                     ;//__attribute__ ((aligned (4)));
-	CHAR                 MAC_RMII                      ;//__attribute__ ((aligned (4)));
-
-	CHAR                 MHCLK_Ratio                   ;//__attribute__ ((aligned (4)));
-
-	uint32_t VGAMode                       ;//__attribute__ ((aligned (4)));
-	char                 VGAModeVld                    ;//__attribute__ ((aligned (4)));
-} MAC_Environment;
-typedef struct {
-	uint32_t GARPNumCnt                    ;//__attribute__ ((aligned (4)));//argv     [6]
-	uint32_t GUserDVal                     ;//__attribute__ ((aligned (4)));//argv[8]
-	BYTE                 GChk_TimingBund               ;//__attribute__ ((aligned (4)));//argv[7]  [5]
-	CHAR                 GPHYADR                       ;//__attribute__ ((aligned (4)));//argv[6]
-	BYTE                 GTestMode                     ;//__attribute__ ((aligned (4)));//argv[5]  [4]
-	CHAR                 GLOOP_Str[32]                 ;//__attribute__ ((aligned (4)));//argv[4]
-	BYTE                 GCtrl                         ;//__attribute__ ((aligned (4)));//argv[3]  [7]
-	BYTE                 GSpeed                        ;//__attribute__ ((aligned (4)));//argv[2]
-	BYTE                 GChannelTolNum                ;//__attribute__ ((aligned (4)));//argv     [3]
-	BYTE                 GPackageTolNum                ;//__attribute__ ((aligned (4)));//argv     [2]
-	BYTE                 GRun_Mode                     ;//__attribute__ ((aligned (4)));//argv[1]  [1]
-
-	CHAR                 GIEEE_sel                     ;//__attribute__ ((aligned (4)));//argv[7]
-	CHAR                 GLOOP_INFINI                  ;//__attribute__ ((aligned (4)));//argv[4]
-	uint32_t GLOOP_MAX                     ;//__attribute__ ((aligned (4)));//argv[4]
-
-	CHAR                 GEn_SkipRxEr                  ;//__attribute__ ((aligned (4)));//GCtrl    [1]
-	CHAR                 GEn_PrintNCSI                 ;//__attribute__ ((aligned (4)));//GCtrl    [0]
-	CHAR                 GEn_RMIIPHY_IN                ;//__attribute__ ((aligned (4)));//GCtrl[9]
-	CHAR                 GEn_RMII_50MOut               ;//__attribute__ ((aligned (4)));//GCtrl[8] [8]
-	CHAR                 GEn_MACLoopback               ;//__attribute__ ((aligned (4)));//GCtrl[7] [7]
-	CHAR                 GEn_FullRange                 ;//__attribute__ ((aligned (4)));//GCtrl[6] [6]
-	CHAR                 GEn_SkipChkPHY                ;//__attribute__ ((aligned (4)));//GCtrl[5]
-	CHAR                 GEn_IntLoopPHY                ;//__attribute__ ((aligned (4)));//GCtrl[4]
-	CHAR                 GEn_InitPHY                   ;//__attribute__ ((aligned (4)));//GCtrl[3]
-	CHAR                 GDis_RecovPHY                 ;//__attribute__ ((aligned (4)));//GCtrl[2]
-	CHAR                 GEn_PHYAdrInv                 ;//__attribute__ ((aligned (4)));//GCtrl[1]
-	CHAR                 GEn_SinglePacket              ;//__attribute__ ((aligned (4)));//GCtrl[0]
-} MAC_Argument;
-typedef struct {
-	CHAR                 MAC_idx                       ;//__attribute__ ((aligned (4)));//GRun_Mode
-	CHAR                 MAC_idx_PHY                   ;//__attribute__ ((aligned (4)));//GRun_Mode
-	uint32_t MAC_BASE                      ;//__attribute__ ((aligned (4)));//GRun_Mode
-
-	CHAR                 Speed_1G                      ;//__attribute__ ((aligned (4)));//GSpeed
-	CHAR                 Speed_org[3]                  ;//__attribute__ ((aligned (4)));//GSpeed
-	CHAR                 Speed_sel[3]                  ;//__attribute__ ((aligned (4)));
-	CHAR                 Speed_idx                     ;//__attribute__ ((aligned (4)));
-
-	CHAR                 TM_Burst                      ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_IEEE                       ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_IOTiming                   ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_IOStrength                 ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_TxDataEn                   ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_RxDataEn                   ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_WaitStart                  ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_DefaultPHY                 ;//__attribute__ ((aligned (4)));//GTestMode
-	CHAR                 TM_NCSI_DiSChannel            ;//__attribute__ ((aligned (4)));//GTestMode
-
-	BYTE                 IO_Bund                       ;//__attribute__ ((aligned (4)));
-	CHAR                 IO_MrgChk                     ;//__attribute__ ((aligned (4)));
-
-	uint32_t TDES_BASE                     ;//__attribute__ ((aligned (4)));
-	uint32_t RDES_BASE                     ;//__attribute__ ((aligned (4)));
-
-	uint32_t NCSI_TxDesBase                ;//__attribute__ ((aligned (4)));
-	uint32_t NCSI_RxDesBase                ;//__attribute__ ((aligned (4)));
-	int                  NCSI_RxTimeOutScale           ;//__attribute__ ((aligned (4)));
-
-	int                  LOOP_MAX                      ;//__attribute__ ((aligned (4)));
-	uint32_t LOOP_CheckNum                 ;//__attribute__ ((aligned (4)));
-	uint32_t CheckBuf_MBSize               ;//__attribute__ ((aligned (4)));
-	uint32_t TIME_OUT_Des                  ;//__attribute__ ((aligned (4)));
-	uint32_t TIME_OUT_Des_PHYRatio         ;//__attribute__ ((aligned (4)));
-
-	int                  Loop_ofcnt                    ;//__attribute__ ((aligned (4)));
-	int                  Loop                          ;//__attribute__ ((aligned (4)));
-	int                  Loop_rl[3]                    ;//__attribute__ ((aligned (4)));
+	mac_cr_t maccr;
+	uint32_t mac_madr;
+	uint32_t mac_ladr;
+	uint32_t mac_fear;
+
+	uint32_t WDT_00c                       ;
+	uint32_t WDT_02c                       ;
+	uint32_t WDT_04c                       ;
+
+	int8_t                 SCU_oldvld;
+} mac_reg_t;
+typedef struct {
+	uint8_t ast2600;
+	uint8_t ast2500;
+	uint8_t mac_num;
+	uint8_t is_new_mdio_reg[4];
+
+	uint8_t is_1g_valid[4];
+	uint8_t at_least_1g_valid;
+	uint8_t MHCLK_Ratio;
+} mac_env_t;
+
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t phy_skip_init	: 1;	/* bit[0] */
+		uint32_t phy_skip_deinit: 1;	/* bit[1] */
+		uint32_t phy_skip_check	: 1;	/* bit[2] */
+		uint32_t reserved_0	: 1;	/* bit[3] */
+		uint32_t phy_int_loopback : 1;	/* bit[4] */
+		uint32_t mac_int_loopback : 1;	/* bit[5] */
+		uint32_t reserved_1	: 2;	/* bit[7:6] */
+		uint32_t rmii_50m_out	: 1;	/* bit[8] */
+		uint32_t rmii_phy_in	: 1;	/* bit[9] */
+		uint32_t inv_rgmii_rxclk: 1;	/* bit[10] */
+		uint32_t reserved_2	: 1;	/* bit[11] */
+		uint32_t single_packet	: 1;	/* bit[12] */
+		uint32_t full_range	: 1;	/* bit[13] */
+		uint32_t reserved_3	: 2;	/* bit[15:14] */
+		uint32_t print_ncsi	: 1;	/* bit[16] */
+		uint32_t skip_rx_err	: 1;	/* bit[17] */
+	} b;
+} mac_arg_ctrl_t;
+typedef struct {
+	uint32_t run_mode;		/* select dedicated or NCSI */
+	uint32_t mac_idx;		/* argv[1] */
+	uint32_t mdio_idx;
+	uint32_t run_speed;		/* argv[2] for dedicated */
+	mac_arg_ctrl_t ctrl;		/* argv[3] for dedicated 
+					   argv[6] for ncsi */
+	uint32_t loop_max;		/* argv[4] for dedicated */
+	uint32_t loop_inf;		/* argv[4] for dedicated */
+
+	uint32_t GPackageTolNum;	/* argv[2] for ncsi */
+	uint32_t GChannelTolNum;	/* argv[3] for ncsi */
+	
+	uint32_t test_mode;		/* argv[5] for dedicated
+					   argv[4] for ncsi */
+
+	uint32_t phy_addr;		/* argv[6] for dedicated */
+	uint32_t delay_scan_range;	/* argv[7] for dedicated
+					   argv[5] for ncsi */	
+	uint32_t ieee_sel;		/* argv[7] for dedicated */
+
+	uint32_t GARPNumCnt;		/* argv[7] for ncsi */
+	uint32_t user_def_val;		/* argv[8] for dedicated */
+} mac_arg_t;
+typedef struct {
+	uint32_t mac_idx;
+	uint32_t mac_base;
+	uint32_t mdio_idx;
+	uint32_t mdio_base;
+	uint32_t is_rgmii;
+	uint32_t ieee_sel;		/* derived from delay_scan_range */
+
+	uint32_t tdes_base;
+	uint32_t rdes_base;
+
+	uint32_t ncsi_tdes_base;
+	uint32_t ncsi_rdes_base;
+
+	uint32_t LOOP_CheckNum                 ;
+	uint32_t CheckBuf_MBSize               ;
+	uint32_t timeout_th;	/* time out threshold (varies with run-speed) */
+
+	uint32_t loop_max;
+	uint32_t loop_of_cnt;
+	uint32_t loop_cnt;
+	uint32_t speed_idx;
+	int                  NCSI_RxTimeOutScale           ;
+
+	uint8_t speed_cfg[3];
+	uint8_t speed_sel[3];
+
+	/* test mode */
+	uint8_t delay_margin;
+	uint8_t tm_tx_only;
+	int8_t                 TM_IEEE                       ;//test_mode
+	int8_t                 TM_IOTiming                   ;//test_mode
+	int8_t                 TM_IOStrength                 ;//test_mode
+	int8_t                 TM_TxDataEn                   ;//test_mode
+	int8_t                 TM_RxDataEn                   ;//test_mode
+	int8_t                 TM_WaitStart                  ;//test_mode
+	int8_t                 TM_DefaultPHY                 ;//test_mode
+	int8_t                 TM_NCSI_DiSChannel            ;//test_mode
+
+	int8_t                 IO_MrgChk                     ;
+
+
 } MAC_Running;
 typedef struct {
-	CHAR                 SA[6]                         ;//__attribute__ ((aligned (4)));
-	CHAR                 NewMDIO                       ;//__attribute__ ((aligned (4))); //start from AST2300
+	int8_t                 SA[6]                         ;	
 } MAC_Information;
 typedef struct {
-	uint32_t PHY_BASE                      ;//__attribute__ ((aligned (4)));
-	int                  loop_phy                      ;//__attribute__ ((aligned (4)));
-	CHAR                 default_phy                   ;//__attribute__ ((aligned (4)));
-	CHAR                 Adr                           ;//__attribute__ ((aligned (4)));
-
-	CHAR                 PHYName[64]                   ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_ID3                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_ID2                       ;//__attribute__ ((aligned (4)));
-
-	uint32_t PHY_00h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_06h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_09h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_0eh                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_10h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_11h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_12h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_14h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_15h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_18h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_19h                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_1ch                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_1eh                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_1fh                       ;//__attribute__ ((aligned (4)));
-	uint32_t PHY_06hA[7]                   ;//__attribute__ ((aligned (4)));
-	BOOLEAN              PHYAdrValid                   ;//__attribute__ ((aligned (4)));
+	uint32_t mdio_base;
+	uint32_t loopback;
+	uint8_t phy_name[64];
+	int8_t                 default_phy                   ;
+	int8_t                 Adr                           ;
+
+	uint32_t PHY_ID3                       ;
+	uint32_t PHY_ID2                       ;
+
+	uint32_t PHY_00h                       ;
+	uint32_t PHY_06h                       ;
+	uint32_t PHY_09h                       ;
+	uint32_t PHY_0eh                       ;
+	uint32_t PHY_10h                       ;
+	uint32_t PHY_11h                       ;
+	uint32_t PHY_12h                       ;
+	uint32_t PHY_14h                       ;
+	uint32_t PHY_15h                       ;
+	uint32_t PHY_18h                       ;
+	uint32_t PHY_19h                       ;
+	uint32_t PHY_1ch                       ;
+	uint32_t PHY_1eh                       ;
+	uint32_t PHY_1fh                       ;
+	uint32_t PHY_06hA[7]                   ;
 
-	uint32_t RMIICK_IOMode                 ;//__attribute__ ((aligned (4)));
+	uint32_t RMIICK_IOMode                 ;
 } MAC_PHY;
-typedef struct {
-	CHAR                 init_done                     ;//__attribute__ ((aligned (4)));
 
-	BYTE                 Dly_MrgEn                     ;//__attribute__ ((aligned (4)));
-	CHAR                 Dly_3Regiser                  ;//__attribute__ ((aligned (4)));
+#ifdef CONFIG_ASPEED_AST2600
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t tx_delay_1		: 6;	/* bit[5:0] */
+		uint32_t tx_delay_2		: 6;	/* bit[11:6] */
+		uint32_t rx_delay_1		: 6;	/* bit[17:12] */
+		uint32_t rx_delay_2		: 6;	/* bit[23:18] */
+		uint32_t rx_clk_inv_1 		: 1;	/* bit[24] */
+		uint32_t rx_clk_inv_2 		: 1;	/* bit[25] */
+		uint32_t rmii_tx_data_at_falling_1 : 1; /* bit[26] */
+		uint32_t rmii_tx_data_at_falling_2 : 1; /* bit[27] */
+		uint32_t rgmiick_pad_dir	: 1;	/* bit[28] */
+		uint32_t rmii_50m_oe_1 		: 1;	/* bit[29] */
+		uint32_t rmii_50m_oe_2		: 1;	/* bit[30] */
+		uint32_t rgmii_125m_o_sel 	: 1;	/* bit[31] */
+	}b;
+} mac_delay_1g_t;
+
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t tx_delay_1		: 6;	/* bit[5:0] */
+		uint32_t tx_delay_2		: 6;	/* bit[11:6] */
+		uint32_t rx_delay_1		: 6;	/* bit[17:12] */
+		uint32_t rx_delay_2		: 6;	/* bit[23:18] */
+		uint32_t rx_clk_inv_1 		: 1;	/* bit[24] */
+		uint32_t rx_clk_inv_2 		: 1;	/* bit[25] */
+		uint32_t reserved_0 		: 6;	/* bit[31:26] */
+	}b;
+} mac_delay_100_10_t;
+#else
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t tx_delay_1		: 6;	/* bit[5:0] */
+		uint32_t tx_delay_2		: 6;	/* bit[11:6] */
+		uint32_t rx_delay_1		: 6;	/* bit[17:12] */
+		uint32_t rx_delay_2		: 6;	/* bit[23:18] */		
+		uint32_t rmii_tx_data_at_falling_1 : 1; /* bit[24] */
+		uint32_t rmii_tx_data_at_falling_2 : 1; /* bit[25] */
+		uint32_t reserved		: 3;	/* bit[28:26] */
+		uint32_t rmii_50m_oe_1 		: 1;	/* bit[29] */
+		uint32_t rmii_50m_oe_2		: 1;	/* bit[30] */
+		uint32_t rgmii_125m_o_sel 	: 1;	/* bit[31] */
+	}b;
+} mac_delay_1g_t;
+
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t tx_delay_1		: 6;	/* bit[5:0] */
+		uint32_t tx_delay_2		: 6;	/* bit[11:6] */
+		uint32_t rx_delay_1		: 6;	/* bit[17:12] */
+		uint32_t rx_delay_2		: 6;	/* bit[23:18] */
+		uint32_t enable 		: 1;	/* bit[24] */
+		uint32_t reserved_0 		: 7;	/* bit[31:25] */
+	}b;
+} mac_delay_100_10_t;
+#endif
+
+typedef struct mac_delay_1g_reg_s {
+	uint32_t addr;
+	int32_t tx_min;
+	int32_t tx_max;
+	int32_t rx_min;
+	int32_t rx_max;
+	int32_t rmii_tx_min;
+	int32_t rmii_tx_max;
+	int32_t rmii_rx_min;
+	int32_t rmii_rx_max;
+	mac_delay_1g_t value;	/* backup register value */
+} mac_delay_1g_reg_t;
+
+typedef struct mac_delay_100_10_reg_s {
+	uint32_t addr;
+	int32_t tx_min;
+	int32_t tx_max;
+	int32_t rx_min;
+	int32_t rx_max;
+	mac_delay_100_10_t value;
+} mac_delay_100_10_reg_t;
 
-	uint32_t Str_reg_idx                   ;//__attribute__ ((aligned (4)));
-	BYTE                 Str_reg_Lbit                  ;//__attribute__ ((aligned (4)));
-	BYTE                 Str_reg_Hbit                  ;//__attribute__ ((aligned (4)));
-	uint32_t Str_reg_value                 ;//__attribute__ ((aligned (4)));
-	uint32_t Str_reg_mask                  ;//__attribute__ ((aligned (4)));
-	BYTE                 Str_max                       ;//__attribute__ ((aligned (4)));
-	BYTE                 Str_shf                       ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stagebit                  ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stage                     ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stage_in                  ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stage_out                 ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_step                      ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_mask_bit_in               ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_mask_bit_out              ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_mask_pos                  ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_shf                    ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_shf                   ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_shf_regH               ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_shf_regH              ;//__attribute__ ((aligned (4)));
-	BYTE                 value_ary[64]                 ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stage_shf_i               ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_stage_shf_o               ;//__attribute__ ((aligned (4)));
-
-	uint32_t Dly_reg_idx                   ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_reg_value                 ;//__attribute__ ((aligned (4)));
-	char                 Dly_reg_name_tx[32]           ;//__attribute__ ((aligned (4)));
-	char                 Dly_reg_name_rx[32]           ;//__attribute__ ((aligned (4)));
-	char                 Dly_reg_name_tx_new[32]       ;//__attribute__ ((aligned (4)));
-	char                 Dly_reg_name_rx_new[32]       ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_in_reg                    ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_reg_idx                ;//__attribute__ ((aligned (4)));
-	SCHAR                Dly_in_min                    ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_max                    ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_out_reg                   ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_reg_idx               ;//__attribute__ ((aligned (4)));
-	SCHAR                Dly_out_min                   ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_max                   ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_in_cval                   ;//__attribute__ ((aligned (4)));
-	SCHAR                Dly_in_str                    ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_end                    ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_out_cval                  ;//__attribute__ ((aligned (4)));
-	SCHAR                Dly_out_str                   ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_end                   ;//__attribute__ ((aligned (4)));
-
-	BYTE                 Str_i                         ;//__attribute__ ((aligned (4)));
-	uint32_t Str_val                       ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in                        ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_in_selval                 ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out                       ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_selval                ;//__attribute__ ((aligned (4)));
-	uint32_t Dly_val                       ;//__attribute__ ((aligned (4)));
-	BYTE                 Dly_out_reg_hit               ;//__attribute__ ((aligned (4)));
-	CHAR                 Dly_result                    ;//__attribute__ ((aligned (4)));
-	CHAR                 dlymap[64][64]                ;//__attribute__ ((aligned (4)));
+#ifdef CONFIG_ASPEED_AST2600
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t mac3_tx_drv		: 2;	/* bit[1:0] */
+		uint32_t mac4_tx_drv		: 2;	/* bit[3:2] */
+		uint32_t reserved_0		: 28;	/* bit[31:4] */
+	}b;
+} mac34_drv_t;
+typedef struct mac34_drv_reg_s {
+	uint32_t addr;
+	uint32_t drv_max;
+	mac34_drv_t value;
+} mac34_drv_reg_t;
+
+#else
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t reserved_0		: 8;	/* bit[7:0] */
+		uint32_t mac1_rmii_tx_drv	: 1;	/* bit[8] */
+		uint32_t mac1_rgmii_tx_drv	: 1;	/* bit[9] */
+		uint32_t mac2_rmii_tx_drv	: 1;	/* bit[10] */
+		uint32_t mac2_rgmii_tx_drv	: 1;	/* bit[11] */
+		uint32_t reserved_1		: 20;	/* bit[31:12] */
+	}b;
+} mac12_drv_t;
+
+typedef struct mac12_drv_reg_s {
+	uint32_t addr;
+	uint32_t drv_max;
+	mac12_drv_t value;
+} mac12_drv_reg_t;
+#endif
+
+typedef struct delay_scan_s {
+	int8_t begin;
+	int8_t end;
+	int8_t step;
+	int8_t orig;
+} delay_scan_t;
+typedef struct {
+	/* driving strength */
+#ifdef CONFIG_ASPEED_AST2600
+	mac34_drv_reg_t mac34_drv_reg;
+#else	
+	mac12_drv_reg_t mac12_drv_reg;
+#endif
+	uint32_t drv_upper_bond;
+	uint32_t drv_lower_bond;
+	uint32_t drv_curr;
+
+	mac_delay_1g_reg_t mac12_1g_delay;
+	mac_delay_1g_reg_t mac34_1g_delay;
+	mac_delay_100_10_reg_t mac12_100m_delay;
+	mac_delay_100_10_reg_t mac34_100m_delay;
+	mac_delay_100_10_reg_t mac12_10m_delay;
+	mac_delay_100_10_reg_t mac34_10m_delay;
+
+	delay_scan_t tx_delay_scan;
+	delay_scan_t rx_delay_scan;	
+
+	char                 Dly_reg_name_tx[32];
+	char                 Dly_reg_name_rx[32];
+	char                 Dly_reg_name_tx_new[32];
+	char                 Dly_reg_name_rx_new[32];
+	uint8_t                 Dly_in_reg_idx;
+	int8_t                Dly_in_min                    ;
+	uint8_t                 Dly_in_max                    ;
+	uint8_t                 Dly_out_reg_idx               ;
+	int8_t                Dly_out_min                   ;
+	uint8_t                 Dly_out_max                   ;	
+	
+	uint8_t                 Dly_in                        ;
+	uint8_t                 Dly_in_selval                 ;
+	uint8_t                 Dly_out                       ;
+	uint8_t                 Dly_out_selval                ;
+	int8_t result;
+	int8_t result_history[128][64];
+	uint32_t init_done;
 } MAC_IO;
 typedef struct {
 #ifdef Enable_ShowBW
 	double               Total_frame_len               ;//__attribute__ ((aligned (8)));
 #endif
-	uint32_t Des_Num                       ;//__attribute__ ((aligned (4)));
-	uint32_t Des_Num_Org                   ;//__attribute__ ((aligned (4)));
-	uint32_t DMABuf_Size                   ;//__attribute__ ((aligned (4)));
-	uint32_t DMABuf_Num                    ;//__attribute__ ((aligned (4)));
-
-	uint32_t *FRAME_LEN                    ;//__attribute__ ((aligned (4)));
-	uint32_t FRAME_LEN_Cur                 ;//__attribute__ ((aligned (4)));
-	uint32_t *wp_lst                       ;//__attribute__ ((aligned (4)));
-	uint32_t wp_fir                        ;//__attribute__ ((aligned (4)));
-
-	uint32_t DMA_Base_Setup                 ;//__attribute__ ((aligned (4)));
-	uint32_t DMA_Base_Tx                  ;//__attribute__ ((aligned (4)));
-	uint32_t DMA_Base_Rx                   ;//__attribute__ ((aligned (4)));
-
-	uint32_t ARP_data[16]                  ;//__attribute__ ((aligned (4)));
-	uint32_t TxDes0DW                      ;//__attribute__ ((aligned (4)));
-	uint32_t RxDes0DW                      ;//__attribute__ ((aligned (4)));
-	uint32_t RxDes3DW                      ;//__attribute__ ((aligned (4)));
-
-	BYTE                 number_chl                    ;//__attribute__ ((aligned (4)));
-	BYTE                 number_pak                    ;//__attribute__ ((aligned (4)));
-	char                 NCSI_RxEr                     ;//__attribute__ ((aligned (4)));
-	uint32_t NCSI_TxDWBUF[512]             ;//__attribute__ ((aligned (4)));
-	uint32_t NCSI_RxDWBUF[512]             ;//__attribute__ ((aligned (4)));
-	char                 NCSI_CommandStr[512]          ;//__attribute__ ((aligned (4)));
-	unsigned char        *NCSI_TxByteBUF               ;//__attribute__ ((aligned (4)));
-	unsigned char        *NCSI_RxByteBUF               ;//__attribute__ ((aligned (4)));
-	unsigned char        NCSI_Payload_Data[16]         ;//__attribute__ ((aligned (4)));
-	uint32_t Payload_Checksum_NCSI         ;//__attribute__ ((aligned (4)));
+	uint32_t Des_Num                       ;
+	uint32_t Des_Num_Org                   ;
+	uint32_t DMABuf_Size                   ;
+	uint32_t DMABuf_Num                    ;
+
+	uint32_t *FRAME_LEN                    ;
+	uint32_t FRAME_LEN_Cur                 ;
+	uint32_t *wp_lst                       ;
+	uint32_t wp_fir                        ;
+
+	uint32_t DMA_Base_Setup                 ;
+	uint32_t DMA_Base_Tx                  ;
+	uint32_t DMA_Base_Rx                   ;
+
+	uint32_t ARP_data[16]                  ;
+	uint32_t TxDes0DW                      ;
+	uint32_t RxDes0DW                      ;
+	uint32_t RxDes3DW                      ;
+
+	uint8_t                 number_chl                    ;
+	uint8_t                 number_pak                    ;
+	char                 NCSI_RxEr                     ;
+	uint32_t NCSI_TxDWBUF[512]             ;
+	uint32_t NCSI_RxDWBUF[512]             ;
+	char                 NCSI_CommandStr[512]          ;
+	unsigned char        *NCSI_TxByteBUF               ;
+	unsigned char        *NCSI_RxByteBUF               ;
+	unsigned char        NCSI_Payload_Data[16]         ;
+	uint32_t Payload_Checksum_NCSI         ;
 } MAC_Data;
 typedef struct {
-	uint32_t Wrn_Flag                      ;//__attribute__ ((aligned (4)));
-	uint32_t Err_Flag                      ;//__attribute__ ((aligned (4)));
-	uint32_t Des_Flag                      ;//__attribute__ ((aligned (4)));
-	uint32_t NCSI_Flag                     ;//__attribute__ ((aligned (4)));
-	uint32_t Bak_Err_Flag                  ;//__attribute__ ((aligned (4)));
-	uint32_t Bak_NCSI_Flag                 ;//__attribute__ ((aligned (4)));
-	CHAR                 Flag_PrintEn                  ;//__attribute__ ((aligned (4)));
-	uint32_t CheckDesFail_DesNum           ;//__attribute__ ((aligned (4)));
-	CHAR                 AllFail                       ;//__attribute__ ((aligned (4)));
+	uint32_t Wrn_Flag                      ;
+	uint32_t Err_Flag                      ;
+	uint32_t Des_Flag                      ;
+	uint32_t NCSI_Flag                     ;
+	uint32_t Bak_Err_Flag                  ;
+	uint32_t Bak_NCSI_Flag                 ;
+	uint32_t CheckDesFail_DesNum           ;
+	uint8_t print_en;
+	uint8_t all_fail;
 } MAC_Flag;
 typedef struct {
-	MAC_Register         reg;
-	MAC_Environment      env;
-	MAC_Argument         arg;
+	mac_reg_t reg;
+	mac_env_t env;
+	mac_arg_t arg;	
 	MAC_Running          run;
 	MAC_Information      inf;
 	MAC_PHY              phy;
@@ -793,11 +768,7 @@
 	MAC_Flag             flg;
 	NCSI_Command_Packet  ncsi_req;
 	NCSI_Response_Packet ncsi_rsp;
-	NCSI_Capability      ncsi_cap;
-
-	PHY_GPIOstr          GPIO;
-	PHY_BCMIMP           BCMIMP;
-	CHAR                 ModeSwitch;
+	NCSI_Capability      ncsi_cap;	
 } MAC_ENGINE;
 typedef void (* PHY_SETTING) (MAC_ENGINE *);
 typedef struct {
@@ -825,13 +796,13 @@
 #endif
 
 #define MODE_DEDICATED                           0x01
-#define MODE_NSCI                                0x02
+#define MODE_NCSI                                0x02
 
-GLOBAL  UCHAR            *mmiobase;
+GLOBAL  uint8_t            *mmiobase;
 GLOBAL  uint32_t ulPCIBaseAddress;
 GLOBAL  uint32_t ulMMIOBaseAddress;
 
-GLOBAL  BYTE             display_lantest_log_msg;
+GLOBAL  uint8_t             display_lantest_log_msg;
 
 // ========================================================
 // For mac.c
@@ -844,92 +815,64 @@
 
 #if defined(MAC_C)
 static  const  char version_name[] = VER_NAME;
-static  const  BYTE IOValue_Array_A0[16] = {8,1, 10,3, 12,5, 14,7, 0,9, 2,11, 4,13, 6,15}; // AST2300-A0
+static  const  uint8_t IOValue_Array_A0[16] = {8,1, 10,3, 12,5, 14,7, 0,9, 2,11, 4,13, 6,15}; // AST2300-A0
 #endif
 
 GLOBAL void    debug_pause (void);
 GLOBAL uint32_t Read_Mem_Dat_NCSI_DD (uint32_t addr);
 GLOBAL uint32_t Read_Mem_Des_NCSI_DD (uint32_t addr);
-GLOBAL uint32_t Read_Mem_Dat_DD (uint32_t addr);
-GLOBAL uint32_t Read_Mem_Des_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_MAC_DD (MAC_ENGINE *eng, uint32_t addr);
-GLOBAL uint32_t Read_Reg_PHY_DD (MAC_ENGINE *eng, uint32_t addr);
-GLOBAL uint32_t Read_Reg_SCU_DD_AST2600 (uint32_t addr);
-GLOBAL uint32_t Read_Reg_SCU_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_WDT_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_SDR_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_SMB_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_TIMER_DD (uint32_t addr);
-GLOBAL uint32_t Read_Reg_GPIO_DD (uint32_t addr);
+
+
+
+
+
+
+
 GLOBAL void Write_Mem_Dat_NCSI_DD (uint32_t addr, uint32_t data);
 GLOBAL void Write_Mem_Des_NCSI_DD (uint32_t addr, uint32_t data);
-GLOBAL void Write_Mem_Dat_DD (uint32_t addr, uint32_t data);
-GLOBAL void Write_Mem_Des_DD (uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_MAC_DD (MAC_ENGINE *eng, uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_PHY_DD (MAC_ENGINE *eng, uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_SCU_DD_AST2600 (uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_SCU_DD (uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_WDT_DD (uint32_t addr, uint32_t data);
+
+
 GLOBAL void Write_Reg_TIMER_DD (uint32_t addr, uint32_t data);
-GLOBAL void Write_Reg_GPIO_DD (uint32_t addr, uint32_t data);
-GLOBAL void    init_iodelay (MAC_ENGINE *eng);
-GLOBAL int     get_iodelay (MAC_ENGINE *eng);
-GLOBAL void    read_scu (MAC_ENGINE *eng);
-GLOBAL void    Setting_scu (MAC_ENGINE *eng);
-GLOBAL void    PrintMode (MAC_ENGINE *eng);
-GLOBAL void    PrintPakNUm (MAC_ENGINE *eng);
-GLOBAL void    PrintChlNUm (MAC_ENGINE *eng);
+
+
+
+
+
+
 GLOBAL void    PrintTest (MAC_ENGINE *eng);
 GLOBAL void    PrintIOTimingBund (MAC_ENGINE *eng);
-GLOBAL void    PrintSpeed (MAC_ENGINE *eng);
-GLOBAL void    PrintCtrl (MAC_ENGINE *eng);
-GLOBAL void    PrintLoop (MAC_ENGINE *eng);
+
+
+
 GLOBAL void    PrintPHYAdr (MAC_ENGINE *eng);
-GLOBAL void    Finish_Close (MAC_ENGINE *eng);
-GLOBAL void    Calculate_LOOP_CheckNum (MAC_ENGINE *eng);
-GLOBAL char    Finish_Check (MAC_ENGINE *eng, int value);
-GLOBAL void    init_scu1 (MAC_ENGINE *eng);
-GLOBAL void    init_scu_macio (MAC_ENGINE *eng);
-GLOBAL void    init_scu_macrst (MAC_ENGINE *eng);
-GLOBAL void    init_scu_macdis (MAC_ENGINE *eng);
-GLOBAL void    init_scu_macen (MAC_ENGINE *eng);
+
+
+
+
+
 GLOBAL void    setup_arp (MAC_ENGINE *eng);
 GLOBAL void    TestingSetup (MAC_ENGINE *eng);
-GLOBAL void    init_scu2 (MAC_ENGINE *eng);
-GLOBAL void    init_scu3 (MAC_ENGINE *eng);
-GLOBAL void    get_mac_info (MAC_ENGINE *eng);
+
+
+
 GLOBAL void    init_mac (MAC_ENGINE *eng);
 GLOBAL char TestingLoop (MAC_ENGINE *eng, uint32_t loop_checknum);
-GLOBAL void    PrintIO_Line_LOG (MAC_ENGINE *eng);
+
 GLOBAL void    init_phy (MAC_ENGINE *eng, PHY_ENGINE *phyeng);
-GLOBAL BOOLEAN find_phyadr (MAC_ENGINE *eng);
-GLOBAL void phy_write (MAC_ENGINE *eng, int adr, uint32_t data);
-GLOBAL uint32_t phy_read (MAC_ENGINE *eng, int adr);
+
+
 GLOBAL void    phy_sel (MAC_ENGINE *eng, PHY_ENGINE *phyeng);
 GLOBAL void    recov_phy (MAC_ENGINE *eng, PHY_ENGINE *phyeng);
 GLOBAL int     FindErr (MAC_ENGINE *eng, int value);
 GLOBAL int     FindErr_Des (MAC_ENGINE *eng, int value);
-GLOBAL void    PrintIO_Header (MAC_ENGINE *eng, BYTE option);
-GLOBAL void    Print_Header (MAC_ENGINE *eng, BYTE option);
-GLOBAL void    PrintIO_LineS (MAC_ENGINE *eng, BYTE option);
-GLOBAL void    PrintIO_Line (MAC_ENGINE *eng, BYTE option);
-GLOBAL void    FPri_ErrFlag (MAC_ENGINE *eng, BYTE option);
+GLOBAL void    PrintIO_Header (MAC_ENGINE *eng, uint8_t option);
 
-GLOBAL void init_hwtimer( void );
-GLOBAL void delay_hwtimer(uint16_t msec);
 
-#ifdef SUPPORT_PHY_LAN9303
-// ========================================================
-// For LAN9303.c
-#undef GLOBAL
-#ifdef LAN9303_C
-#define GLOBAL
-#else
-#define GLOBAL    extern
-#endif
 
-GLOBAL void LAN9303(int num, int phy_adr, int speed, int int_loopback);
-#endif // SUPPORT_PHY_LAN9303
+GLOBAL void    FPri_ErrFlag (MAC_ENGINE *eng, uint8_t option);
+
+GLOBAL void init_hwtimer( void );
+GLOBAL void delay_hwtimer(uint16_t msec);
 
 // ========================================================
 // For PHYGPIO.c
@@ -940,11 +883,6 @@
 #define GLOBAL    extern
 #endif
 
-#if defined(PHY_GPIO)
-GLOBAL void    phy_gpio_init( MAC_ENGINE *eng );
-GLOBAL void    phy_gpio_write( MAC_ENGINE *eng, int regadr, int wrdata );
-GLOBAL uint32_t phy_gpio_read( MAC_ENGINE *eng, int regadr );
-#endif
 
 // ========================================================
 // For PHYSPECIAL.c
@@ -955,16 +893,5 @@
 #define GLOBAL    extern
 #endif
 
-#ifdef PHY_SPECIAL
-GLOBAL void    special_PHY_init (MAC_ENGINE *eng);
-GLOBAL void    special_PHY_MDIO_init (MAC_ENGINE *eng);
-GLOBAL void    special_PHY_buf_init (MAC_ENGINE *eng);
-GLOBAL void    special_PHY_recov (MAC_ENGINE *eng);
-GLOBAL void    special_PHY_reg_init (MAC_ENGINE *eng);
-GLOBAL void    special_PHY_debug (MAC_ENGINE *eng);
-GLOBAL uint32_t special_PHY_FRAME_LEN (MAC_ENGINE *eng);
-GLOBAL uint32_t *special_PHY_txpkt_ptr (MAC_ENGINE *eng);
-GLOBAL uint32_t *special_PHY_rxpkt_ptr (MAC_ENGINE *eng);
-#endif
 
 #endif // End COMMINF_H
diff -Naur u-boot-2019.04/cmd/nettest/def_spi.h uboot/cmd/nettest/def_spi.h
--- u-boot-2019.04/cmd/nettest/def_spi.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/def_spi.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,36 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef DEF_SPI_H
-#define DEF_SPI_H
-
-#include "typedef.h"
-#include "swfunc.h"
-
-typedef struct _DEVICE_PCI_INFO
-{
-    uint16_t    usVendorID;
-    uint16_t    usDeviceID;
-    uint32_t ulPCIConfigurationBaseAddress;
-    uint32_t ulPhysicalBaseAddress;
-    uint32_t ulMMIOBaseAddress;
-    uint16_t    usRelocateIO;
-} DEVICE_PCI_INFO;
-
-//VIDEO Engine Info
-typedef struct _VIDEO_ENGINE_INFO {
-    uint16_t             iEngVersion;
-    DEVICE_PCI_INFO    VGAPCIInfo;
-} VIDEO_ENGINE_INFO;
-
-BOOLEAN  GetDevicePCIInfo (VIDEO_ENGINE_INFO *VideoEngineInfo);
-
-#endif // DEF_SPI_H
diff -Naur u-boot-2019.04/cmd/nettest/io.c uboot/cmd/nettest/io.c
--- u-boot-2019.04/cmd/nettest/io.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/io.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,67 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#define IO_C
-
-#include "swfunc.h"
-
-#include "comminf.h"
-#include <command.h>
-#include <common.h>
-#include <malloc.h>
-#include <net.h>
-#include <post.h>
-
-#include "io.h"
-#include "typedef.h"
-
-//------------------------------------------------------------
-// General Access API
-//------------------------------------------------------------
-BYTE Check_BEorLN(uint32_t chkaddr)
-{
-	BYTE ret = BIG_ENDIAN_ADDRESS;
-        BYTE i = 0;
-
-        do {
-                if (LittleEndianArea[i].StartAddr ==
-                    LittleEndianArea[i].EndAddr)
-                        break;
-
-                if ((LittleEndianArea[i].StartAddr <= chkaddr) &&
-                    (LittleEndianArea[i].EndAddr >= chkaddr)) {
-                        ret = LITTLE_ENDIAN_ADDRESS;
-                        break;
-                }
-                i++;
-        } while (1);
-
-        return ret;
-}
-
-void WriteSOC_DD(uint32_t addr, uint32_t data)
-{
-	if (Check_BEorLN(addr) == BIG_ENDIAN_ADDRESS)
-		*(volatile uint32_t *)(addr) = cpu_to_le32(data);
-	else
-		*(volatile uint32_t *)(addr) = data;
-}
-
-//------------------------------------------------------------
-uint32_t ReadSOC_DD(uint32_t addr)
-{
-	if (Check_BEorLN(addr) == BIG_ENDIAN_ADDRESS)
-		return le32_to_cpu(*(volatile uint32_t *)(addr));
-	else
-		return (*(volatile uint32_t *)(addr));
-
-	return 0;
-}
diff -Naur u-boot-2019.04/cmd/nettest/io.h uboot/cmd/nettest/io.h
--- u-boot-2019.04/cmd/nettest/io.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/io.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,26 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef IO_H
-#define IO_H
-
-#include "swfunc.h"
-
-//
-// Macro
-//
-#define ob(p,d)	outp(p,d)
-#define ib(p) inp(p)
-
-
-void WriteSOC_DD(uint32_t addr, uint32_t data);
-uint32_t ReadSOC_DD(uint32_t addr);
-#endif
diff -Naur u-boot-2019.04/cmd/nettest/lan9303.c uboot/cmd/nettest/lan9303.c
--- u-boot-2019.04/cmd/nettest/lan9303.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/lan9303.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,528 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#define LAN9303_C
-
-#include "comminf.h"
-#include "io.h"
-#include "mac.h"
-#include "swfunc.h"
-
-#ifdef SUPPORT_PHY_LAN9303
-//#define LAN9303M
-#define I2C_Debug           0
-#define Print_DWRW          0
-#define Print_PHYRW         0
-#define I2C_TIMEOUT         10000000
-
-typedef struct {
-	uint32_t devbase;
-	uint32_t busnum;
-	uint32_t byte;
-} LAN9303_Data;
-
-//------------------------------------------------------------
-// Basic
-//------------------------------------------------------------
-void actime(uint32_t ac1, uint32_t ac2, uint32_t *fact, uint32_t *ckh,
-	    uint32_t *ckl)
-{
-	static int      divcnt;
-
-        ac1 = ac1 * 50 + 1;
-        ac2 = ac2 * 50 + 1;
-
-        divcnt = 0;
-        while (ac1 > 8 || ac2 > 8) {
-                divcnt++;
-                ac1 >>= 1;
-                ac2 >>= 1;
-        }
-
-        if (ac1 < 2  ) ac1  = 2;
-        if (ac2 < 2  ) ac2  = 2;
-        if (ac1 > ac2) ac2  = 1;
-        else           ac1 += 1;
-
-#ifdef PRINT_MSG
-        printf("Divcnt = %d, ckdiv = %d, ckh = %d, ckl = %d\n",(1<<divcnt)*(ac1+ac2),divcnt,ac1-1,ac2-1);
-        printf("CKH = %d us, CKL = %d us\n",(1<<divcnt)*ac1/50,(1<<divcnt)*ac2/50);
-#endif
-
-        *fact = divcnt;
-        *ckh  = ac1 - 1;
-        *ckl  = ac2 - 1;
-}
-
-//------------------------------------------------------------
-uint32_t PollStatus(LAN9303_Data *eng)
-{
-	static uint32_t status;
-	static uint32_t cnt = 0;
-
-	do {
-                status = ReadSOC_DD( eng->devbase + 0x14 ) & 0xff;
-
-                if ( ++cnt > I2C_TIMEOUT ) {
-                        printf("\nWait1 Timeout at bus %d!\n", eng->busnum);
-                        printf("Status 14 = %08x\n", ReadSOC_DD( eng->devbase + 0x14 ));
-                        exit(0);
-                }
-        } while (status != 0);
-
-        cnt = 0;
-        do {
-                status = ReadSOC_DD( eng->devbase + 0x10 );
-                if ( ++cnt > I2C_TIMEOUT ) {
-                        printf("\nWait2 Timeout at bus %d!\n", eng->busnum);
-                        printf("Status 14 = %08x\n", ReadSOC_DD( eng->devbase + 0x14 ));
-                        exit(0);
-                }
-        } while (status == 0);
-
-        WriteSOC_DD( eng->devbase + 0x10, status );
-
-        return(status);
-}
-
-
-//------------------------------------------------------------
-uint32_t writeb(LAN9303_Data *eng, uint32_t start, uint32_t data, uint32_t stop)
-{
-        WriteSOC_DD( eng->devbase + 0x20, data);
-        WriteSOC_DD( eng->devbase + 0x14, 0x02 | start | (stop << 5) );
-        return( PollStatus( eng ) );
-}
-
-//------------------------------------------------------------
-uint32_t readb(LAN9303_Data *eng, uint32_t last, uint32_t stop)
-{
-        static uint32_t data;
-
-        WriteSOC_DD( eng->devbase + 0x14, 0x08 | (last << 4) | (stop << 5) );
-        data = PollStatus( eng );
-
-        if (data & 0x4) {
-                data = ReadSOC_DD( eng->devbase + 0x20 );
-                return(data >> 8);
-        }
-        else {
-                return(-1);
-        }
-}
-
-//------------------------------------------------------------
-void Initial(LAN9303_Data *eng, uint32_t base, uint32_t ckh, uint32_t ckl)
-{
-	static uint32_t ackh;
-	static uint32_t ackl;
-	static uint32_t divx;
-
-	actime(ckh, ckl, &divx, &ackh, &ackl);
-        WriteSOC_DD(base + 0x00, 0x1);
-        if (ReadSOC_DD(base + 0x00) != 0x1) {
-                printf("Controller initial fail : %x\n",base);
-                exit(0);
-        }
-        WriteSOC_DD(base + 0x04, 0x77700360 | (ackh << 16) | (ackl << 12) | divx);
-        WriteSOC_DD(base + 0x08, 0x0);
-        WriteSOC_DD(base + 0x0c, 0x0);
-        WriteSOC_DD(base + 0x10, 0xffffffff);
-        WriteSOC_DD(base + 0x14, 0x00);
-        WriteSOC_DD(base + 0x1C, 0xff0000);
-        WriteSOC_DD(base + 0x20, 0x00);
-}
-
-//------------------------------------------------------------
-void print_status(uint32_t status) 
-{
-	if (status & 0x02)
-		printf("Device NAK\n");
-	if (status & 0x08)
-		printf("Arbitration Loss\n");
-	if (status & 0x10)
-		printf("STOP\n");
-	if (status & 0x20)
-		printf("Abnormal STOP\n");
-	if (status & 0x40)
-		printf("SCL Low timeout\n");
-}
-
-//------------------------------------------------------------
-void readme()
-{
-#ifdef LAN9303M
-        printf("LAN9303M [bus] [vir_PHY_adr] [speed] [func]\n");
-#else
-        printf("LAN9303 [bus] [vir_PHY_adr] [speed] [func]\n" );
-#endif
-        printf("[bus]         | 1~14: I2C bus number\n"       );
-        printf("[vir_PHY_adr] | 0~1: virtual PHY address\n"   );
-        printf("[speed]       | 1: 100M\n"                    );
-        printf("              | 2: 10 M\n"                    );
-        printf("[func]        | 0: external loopback\n"       );
-        printf("              | 1: internal loopback\n"       );
-}
-
-//------------------------------------------------------------
-void quit(LAN9303_Data *eng)
-{
-        WriteSOC_DD( eng->devbase + 0x14, 0x20 );
-        PollStatus( eng );
-        readme();
-}
-
-//------------------------------------------------------------
-// Double-Word Read/Write
-//------------------------------------------------------------
-uint32_t I2C_DWRead(LAN9303_Data *eng, uint32_t adr)
-{
-	static uint32_t status;
-	static uint32_t data_rd;
-	static uint32_t byte;
-	int i;
-
-	Initial( eng, eng->devbase, 10, 10 );
-
-        if ( Print_DWRW )
-            printf("RAdr %02x: ", adr);
-
-        status = writeb( eng, 1, LAN9303_I2C_ADR, 0 );
-        if ( I2C_Debug )
-            printf("R1W[%02x]%02x ", status, LAN9303_I2C_ADR);
-
-        if ( status != 0x1 ) {
-                print_status(status);
-                quit( eng );
-                exit(0);
-        }
-
-        status = writeb( eng, 0, adr, 0 );
-        if ( I2C_Debug )
-            printf("R2W[%02x]%02x ", status, adr);
-        if ( !(status & 0x1) ) {
-                print_status(status);
-                quit( eng );
-                exit(0);
-        }
-
-        status = writeb( eng, 1, LAN9303_I2C_ADR | 0x1, 0 );
-        if ( I2C_Debug )
-            printf("R3W[%02x]%02x ", status, LAN9303_I2C_ADR | 0x1);
-        if ( status != 0x1 ) {
-                print_status(status);
-                quit( eng );
-                exit(0);
-        }
-
-        if ( I2C_Debug )
-            printf("R4");
-
-        data_rd = 0;
-        for (i = 24; i >= 0; i-=8) {
-                if (i == 0) eng->byte = readb( eng, 1, 1 );
-                else        eng->byte = readb( eng, 0, 0 );
-
-                if ( I2C_Debug )
-                    printf("%02x ", eng->byte);
-                data_rd = data_rd | (eng->byte << i);
-        }
-
-        if ( Print_DWRW )
-            printf("%08x\n", data_rd);
-
-        return (data_rd);
-}
-
-//------------------------------------------------------------
-void I2C_DWWrite(LAN9303_Data *eng, uint32_t adr, uint32_t dwdata)
-{
-	static uint32_t status;
-	uint32_t endx;
-	int i;
-
-	Initial( eng, eng->devbase, 10, 10 );
-        if ( Print_DWRW )
-            printf("WAdr %02x: ", adr);
-
-        status = writeb( eng, 1, LAN9303_I2C_ADR, 0 );
-        if ( I2C_Debug )
-            printf("W1[%02x]%02x ", status, LAN9303_I2C_ADR);
-        if ( status != 0x1 ) {
-                print_status(status);
-                quit( eng );
-                exit(0);
-        }
-        status = writeb( eng, 0, adr, 0 );
-        if ( I2C_Debug )
-            printf("W2[%02x]%02x ", status, adr);
-        if ( !(status & 0x1) ) {
-                print_status(status);
-                quit( eng );
-                exit(0);
-        }
-
-        if (I2C_Debug)
-            printf("W3");
-        endx = 0;
-        for (i = 24; i >= 0; i-=8) {
-                if (i == 0)
-                    endx = 1;
-                eng->byte   = (dwdata >> i) & 0xff;
-                status = writeb( eng, 0, eng->byte, endx);
-
-            if (I2C_Debug)
-                printf("[%02x]%02x ", status, eng->byte);
-                if (!(status & 0x1)) {
-                        print_status(status);
-                        quit( eng );
-                        exit(0);
-                }
-        }
-
-        if ( Print_DWRW ) printf("%08x\n", dwdata);
-}
-
-//------------------------------------------------------------
-// PHY Read/Write
-//------------------------------------------------------------
-uint32_t LAN9303_PHY_Read(LAN9303_Data *eng, uint32_t phy_adr, uint32_t reg_adr)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng, 0x2a, ((phy_adr & 0x1f) << 11) | ((reg_adr & 0x1f) << 6));//[0A8h]PMI_ACCESS
-        do {
-            data_rd = I2C_DWRead( eng, 0x2a );
-        } while(data_rd & 0x00000001);//[0A8h]PMI_ACCESS
-
-        data_rd = I2C_DWRead( eng, 0x29 );//[0A4h]PMI_DATA
-        if ( Print_PHYRW )
-            printf("PHY:%2d, Reg:%2d, Data:%08x\n", phy_adr, reg_adr, data_rd);
-
-        return(data_rd);
-}
-
-//------------------------------------------------------------
-void LAN9303_PHY_Write(LAN9303_Data *eng, uint32_t phy_adr, uint32_t reg_adr, uint32_t data_wr)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng, 0x29, data_wr );//[0A4h]PMI_DATA
-
-        I2C_DWWrite( eng, 0x2a, ((phy_adr & 0x1f) << 11) | ((reg_adr & 0x1f) << 6) | 0x2 );//[0A8h]PMI_ACCESS
-        do {
-            data_rd = I2C_DWRead( eng, 0x2a );
-        } while( data_rd & 0x00000001 );//[0A8h]PMI_ACCESS
-}
-
-//------------------------------------------------------------
-uint32_t LAN9303_PHY_Read_WD(LAN9303_Data *eng, uint32_t data_ctl)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng, 0x2a, data_ctl );//[0A8h]PMI_ACCESS
-        do {
-            data_rd = I2C_DWRead( eng, 0x2a );
-        } while(data_rd & 0x00000001);//[0A8h]PMI_ACCESS
-
-        data_rd = I2C_DWRead( eng, 0x29 );//[0A4h]PMI_DATA
-        if ( Print_PHYRW )
-            printf("WD Data:%08x\n", data_ctl);
-
-        return(data_rd);
-}
-
-//------------------------------------------------------------
-void LAN9303_PHY_Write_WD(LAN9303_Data *eng, uint32_t data_ctl, uint32_t data_wr)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng,  0x29, data_wr  ); //[0A4h]PMI_DATA
-        I2C_DWWrite( eng,  0x2a, data_ctl ); //[0A8h]PMI_ACCESS
-        do {
-            data_rd = I2C_DWRead( eng, 0x2a );
-        } while(data_rd & 0x00000001); //[0A8h]PMI_ACCESS
-}
-
-//------------------------------------------------------------
-// Virtual PHY Read/Write
-//------------------------------------------------------------
-uint32_t LAN9303_VirPHY_Read(LAN9303_Data *eng, uint32_t reg_adr)
-{
-	static uint32_t data_rd;
-
-	data_rd = I2C_DWRead( eng, 0x70 + reg_adr );//[1C0h]
-        if ( Print_PHYRW )
-            printf("VirPHY Reg:%2d, Data:%08x\n", reg_adr, data_rd);
-
-        return(data_rd);
-}
-
-//------------------------------------------------------------
-void LAN9303_VirPHY_Write(LAN9303_Data *eng, uint32_t reg_adr, uint32_t data_wr)
-{
-        I2C_DWWrite( eng, 0x70+reg_adr, data_wr );//[1C0h]
-}
-
-//------------------------------------------------------------
-void LAN9303_VirPHY_RW(LAN9303_Data *eng, uint32_t reg_adr, uint32_t data_clr, uint32_t data_set)
-{
-        I2C_DWWrite( eng, 0x70+reg_adr, (LAN9303_VirPHY_Read( eng, reg_adr ) & (~data_clr)) | data_set );//[1C0h]
-}
-
-//------------------------------------------------------------
-// PHY Read/Write
-//------------------------------------------------------------
-uint32_t LAN9303_Read(LAN9303_Data *eng, uint32_t adr)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng, 0x6c, 0xc00f0000 | adr & 0xffff );//[1B0h]SWITCH_CSR_CMD
-        do {
-            data_rd = I2C_DWRead( eng, 0x6c );
-        } while( data_rd & 0x80000000 );//[1B0h]SWITCH_CSR_CMD
-
-        return( I2C_DWRead( eng, 0x6b ) );//[1ACh]SWITCH_CSR_DATA
-}
-
-//------------------------------------------------------------
-void LAN9303_Write(LAN9303_Data *eng, uint32_t adr, uint32_t data)
-{
-	static uint32_t data_rd;
-
-	I2C_DWWrite( eng, 0x6b, data );//[1ACh]SWITCH_CSR_DATA
-        I2C_DWWrite( eng, 0x6c, 0x800f0000 | adr & 0xffff );//[1B0h]SWITCH_CSR_CMD
-
-        do {
-            data_rd = I2C_DWRead( eng, 0x6c );
-        } while( data_rd & 0x80000000 );//[1B0h]SWITCH_CSR_CMD
-}
-
-//------------------------------------------------------------
-void LAN9303(int num, int phy_adr, int speed, int int_loopback)
-{
-	static uint32_t data_rd;
-	LAN9303_Data LAN9303_ENG;
-	LAN9303_Data *eng;
-
-	eng = &LAN9303_ENG;
-    //------------------------------------------------------------
-    // I2C Initial
-    //------------------------------------------------------------
-        eng->busnum = num;
-        if (eng->busnum <= 7) eng->devbase = 0x1E78A000 + ( eng->busnum    * 0x40);
-        else                  eng->devbase = 0x1E78A300 + ((eng->busnum-8) * 0x40);
-        Initial( eng, eng->devbase, 10, 10 );
-
-    //------------------------------------------------------------
-    // LAN9303 Register Setting
-    //------------------------------------------------------------
-    printf("----> Start\n");
-        if (int_loopback == 0) {
-            //Force Speed & external loopback
-                if (speed == 1) { //100M
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x2300 );      //adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x2300 );      //adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x2300 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x2300 );
-                }
-                else {
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x0100 );      //adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x0100 );      //adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x0100 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x0100 );
-                }
-
-                LAN9303_Write( eng, 0x180c, 0x00000001 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000010 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x00000002 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000011 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x00000003 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000012 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-#ifdef LAN9303M
-                LAN9303_Write( eng, 0x180c, 0x00022001 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000000 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x00024002 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000001 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x0002a003 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000002 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-#else
-                LAN9303_Write( eng, 0x180c, 0x0002a001 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000000 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x0000a002 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000001 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-
-                LAN9303_Write( eng, 0x180c, 0x00022003 ); // SWE_VLAN_WR_DATA
-                LAN9303_Write( eng, 0x180b, 0x00000002 ); // SWE_VLAN_CMD
-                do {data_rd = LAN9303_Read( eng, 0x1810 );} while(data_rd & 0x1);
-#endif
-                LAN9303_Write( eng, 0x1840, 0x00000007);
-        }
-        else if ( int_loopback == 1 ) {
-            //Force Speed & internal loopback
-                if ( speed == 1 ) {
-                    //100M
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x6300 ); // adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x6300 ); // adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x6300 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x6300 );
-                }
-                else {
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x4100 ); // adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x4100 ); // adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x4100 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x4100 );
-                }
-        }
-        else {
-            //Force Speed
-                if (speed == 1) {
-                    //100M
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x2300 ); // adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x2300 ); // adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x2300 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x2300 );
-                }
-                else {
-                        LAN9303_VirPHY_RW( eng,  0, 0xffff, 0x0100 ); // adr clr set //VPHY_BASIC_CTRL
-                        LAN9303_VirPHY_RW( eng, 11, 0xffff, 0x0100 ); // adr clr set //P1_MII_BASIC_CONTROL
-                        LAN9303_PHY_Write( eng, phy_adr + 1, 0, 0x0100 );
-                        LAN9303_PHY_Write( eng, phy_adr + 2, 0, 0x0100 );
-                }
-#ifdef LAN9303M
-#else
-                if (int_loopback == 3) {
-                    //[LAN9303]IEEE measurement
-                        data_rd = LAN9303_PHY_Read( eng, phy_adr+1, 27 );//PHY_SPECIAL_CONTROL_STAT_IND_x
-                        LAN9303_PHY_Write( eng,phy_adr+1, 27, (data_rd & 0x9fff) | 0x8000 );//PHY_SPECIAL_CONTROL_STAT_IND_x
-
-                        data_rd = LAN9303_PHY_Read( eng, phy_adr+2, 27 );//PHY_SPECIAL_CONTROL_STAT_IND_x
-                        LAN9303_PHY_Write( eng,phy_adr+2, 27, (data_rd & 0x9fff) | 0x8000 );//PHY_SPECIAL_CONTROL_STAT_IND_x
-                }
-#endif
-        } // End if (int_loopback == 0)
-} // End void LAN9303(int num, int phy_adr, int speed, int int_loopback)
-#endif // SUPPORT_PHY_LAN9303
-
diff -Naur u-boot-2019.04/cmd/nettest/mac_api.h uboot/cmd/nettest/mac_api.h
--- u-boot-2019.04/cmd/nettest/mac_api.h	1969-12-31 19:00:00.000000000 -0500
+++ uboot/cmd/nettest/mac_api.h	2020-01-14 13:36:49.337961228 -0500
@@ -0,0 +1,15 @@
+uint32_t mac_reg_read(MAC_ENGINE *p_eng, uint32_t addr);
+void mac_reg_write(MAC_ENGINE *p_eng, uint32_t addr, uint32_t data);
+void mac_set_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d);
+void mac_get_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d);
+void mac_set_driving_strength(MAC_ENGINE *p_eng, uint32_t strength);
+uint32_t mac_get_driving_strength(MAC_ENGINE *p_eng);
+void mac_set_rmii_50m_output_enable(MAC_ENGINE *p_eng);
+int mac_set_scan_boundary(MAC_ENGINE *p_eng);
+void mac_set_addr(MAC_ENGINE *p_eng);
+void mac_set_interal_loopback(MAC_ENGINE *p_eng);
+
+void PrintIO_Line(MAC_ENGINE *p_eng, uint8_t option);
+void PrintIO_LineS(MAC_ENGINE *p_eng, uint8_t option);
+void FPri_End(MAC_ENGINE *eng, uint8_t option);
+void FPri_RegValue(MAC_ENGINE *eng, uint8_t option);
\ No newline at end of file
diff -Naur u-boot-2019.04/cmd/nettest/mac.c uboot/cmd/nettest/mac.c
--- u-boot-2019.04/cmd/nettest/mac.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/mac.c	2020-01-14 13:36:49.337961228 -0500
@@ -24,11 +24,10 @@
 #include "swfunc.h"
 
 #include "comminf.h"
-#include "stduboot.h"
 #include <command.h>
 #include <common.h>
 #include <malloc.h>
-
+#include "mem_io.h"
 // -------------------------------------------------------------
 const uint32_t ARP_org_data[16] = {
     0xffffffff,
@@ -52,138 +51,44 @@
 uint32_t Read_Mem_Dat_NCSI_DD(uint32_t addr)
 {
 #ifdef MAC_DEBUG_MEMRW_Dat
-	printf("[MEMRd-Dat] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( ReadSOC_DD(addr) ) );
+	printf("[MEMRd-Dat] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( readl(addr) ) );
 #endif
-	return ( SWAP_4B_LEDN_MEM( ReadSOC_DD(addr) ) );
+	return ( SWAP_4B_LEDN_MEM( readl(addr) ) );
 }
 
 uint32_t Read_Mem_Des_NCSI_DD(uint32_t addr)
 {
 #ifdef MAC_DEBUG_MEMRW_Des
 	printf("[MEMRd-Des] %08x = %08x\n", addr,
-	       SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	       SWAP_4B_LEDN_MEM(readl(addr)));
 #endif
-	return (SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	return (SWAP_4B_LEDN_MEM(readl(addr)));
 }
 
 uint32_t Read_Mem_Dat_DD(uint32_t addr)
 {
 #ifdef MAC_DEBUG_MEMRW_Dat
 	printf("[MEMRd-Dat] %08x = %08x\n", addr,
-	       SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	       SWAP_4B_LEDN_MEM(readl(addr)));
 #endif
-	return (SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	return (SWAP_4B_LEDN_MEM(readl(addr)));
 }
 
 uint32_t Read_Mem_Des_DD(uint32_t addr)
 {
 #ifdef MAC_DEBUG_MEMRW_Des
 	printf("[MEMRd-Des] %08x = %08x\n", addr,
-	       SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	       SWAP_4B_LEDN_MEM(readl(addr)));
 #endif
-	return (SWAP_4B_LEDN_MEM(ReadSOC_DD(addr)));
+	return (SWAP_4B_LEDN_MEM(readl(addr)));
 }
 
 //------------------------------------------------------------
 // Read Register
 //------------------------------------------------------------
-uint32_t Read_Reg_MAC_DD(MAC_ENGINE *eng, uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_MAC
-	printf("[RegRd-MAC] %08x = %08x\n", eng->run.MAC_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(eng->run.MAC_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(eng->run.MAC_BASE + addr)));
-}
-
-uint32_t Read_Reg_PHY_DD(MAC_ENGINE *eng, uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_PHY
-	printf("[RegRd-PHY] %08x = %08x\n", eng->phy.PHY_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(eng->phy.PHY_BASE + addr)));
-#endif
-#ifdef CONFIG_ASPEED_AST2600
-	if (addr == 0x60) {
-		if (eng->env.MAC_RMII)
-			return (SWAP_4B_LEDN_REG(ReadSOC_DD(0x1e650008)));
-		else
-			return (SWAP_4B_LEDN_REG(ReadSOC_DD(0x1e650000)));
-	} else {
-		if (eng->env.MAC_RMII)
-			return (SWAP_4B_LEDN_REG(ReadSOC_DD(0x1e65000c)));
-		else
-			return (SWAP_4B_LEDN_REG(ReadSOC_DD(0x1e650004)));
-	}
-#else
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(eng->phy.PHY_BASE + addr)));
-#endif
-}
-
-uint32_t Read_Reg_SCU_DD_AST2600(uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_SCU
-	printf("[RegRd-SCU] %08x = %08x\n", SCU_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(SCU_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(SCU_BASE + addr)));
-}
-
-uint32_t Read_Reg_SCU_DD(uint32_t addr)
-{
-#ifdef CONFIG_ASPEED_AST2600
-	return (0);
-#else
-#ifdef MAC_DEBUG_REGRW_SCU
-	printf("[RegRd-SCU] %08x = %08x\n", SCU_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(SCU_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(SCU_BASE + addr)));
-#endif
-}
-
-uint32_t Read_Reg_WDT_DD(uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_WDT
-	printf("[RegRd-WDT] %08x = %08x\n", WDT_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(WDT_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(WDT_BASE + addr)));
-}
-
-uint32_t Read_Reg_SDR_DD(uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_SDR
-	printf("[RegRd-SDR] %08x = %08x\n", SDR_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(SDR_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(SDR_BASE + addr)));
-}
-
-uint32_t Read_Reg_SMB_DD(uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_SMB
-	printf("[RegRd-SMB] %08x = %08x\n", SMB_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(SMB_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(SMB_BASE + addr)));
-}
-
-uint32_t Read_Reg_TIMER_DD(uint32_t addr)
-{
-#ifdef MAC_DEBUG_REGRW_TIMER
-	printf("[RegRd-TIMER] %08x = %08x\n", TIMER_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(TIMER_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(TIMER_BASE + addr)));
-}
-
-uint32_t Read_Reg_GPIO_DD(uint32_t addr)
+uint32_t mac_reg_read(MAC_ENGINE *p_eng, uint32_t addr)
 {
-#ifdef MAC_DEBUG_REGRW_GPIO
-	printf("[RegRd-GPIO] %08x = %08x\n", GPIO_BASE + addr,
-	       SWAP_4B_LEDN_REG(ReadSOC_DD(GPIO_BASE + addr)));
-#endif
-	return (SWAP_4B_LEDN_REG(ReadSOC_DD(GPIO_BASE + addr)));
+	return readl(p_eng->run.mac_base + addr);
 }
 
 //------------------------------------------------------------
@@ -193,90 +98,36 @@
 #ifdef MAC_DEBUG_MEMRW_Dat
 	printf("[MEMWr-Dat] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( data ) );
 #endif
-	WriteSOC_DD( addr, SWAP_4B_LEDN_MEM( data ) );
+	writel(data, addr);
 }
 void Write_Mem_Des_NCSI_DD (uint32_t addr, uint32_t data) {
 #ifdef MAC_DEBUG_MEMRW_Des
 	printf("[MEMWr-Des] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( data ) );
 #endif
-	WriteSOC_DD( addr, SWAP_4B_LEDN_MEM( data ) );
+	writel(data, addr);
 }
 void Write_Mem_Dat_DD (uint32_t addr, uint32_t data) {
 #ifdef MAC_DEBUG_MEMRW_Dat
 	printf("[MEMWr-Dat] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( data ) );
 #endif
-	WriteSOC_DD( addr, SWAP_4B_LEDN_MEM( data ) );
+	writel(data, addr);
 }
 void Write_Mem_Des_DD (uint32_t addr, uint32_t data) {
 #ifdef MAC_DEBUG_MEMRW_Des
 	printf("[MEMWr-Des] %08x = %08x\n", addr, SWAP_4B_LEDN_MEM( data ) );
 #endif
-	WriteSOC_DD( addr, SWAP_4B_LEDN_MEM( data ) );
+	writel(data, addr);
 }
 
 //------------------------------------------------------------
 // Write Register
 //------------------------------------------------------------
-void Write_Reg_MAC_DD (MAC_ENGINE *eng, uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_MAC
-	printf("[RegWr-MAC] %08x = %08x\n", eng->run.MAC_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( eng->run.MAC_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-}
-void Write_Reg_PHY_DD (MAC_ENGINE *eng, uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_PHY
-	printf("[RegWr-PHY] %08x = %08x\n", eng->phy.PHY_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-#ifdef CONFIG_ASPEED_AST2600
-	if (addr == 0x60) {
-		if (eng->env.MAC_RMII)
-			WriteSOC_DD( 0x1e650008, SWAP_4B_LEDN_REG( data ) );
-		else
-			WriteSOC_DD( 0x1e650000, SWAP_4B_LEDN_REG( data ) );
-	} else {
-		if (eng->env.MAC_RMII)
-			WriteSOC_DD( 0x1e65000c, SWAP_4B_LEDN_REG( data ) );
-		else
-			WriteSOC_DD( 0x1e650004, SWAP_4B_LEDN_REG( data ) );
-	}
-#else
-	WriteSOC_DD( eng->phy.PHY_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-#endif
-}
-void Write_Reg_SCU_DD_AST2600 (uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_SCU
-	printf("[RegWr-SCU] %08x = %08x\n", SCU_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( SCU_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-}
-void Write_Reg_SCU_DD (uint32_t addr, uint32_t data) {
-#ifdef CONFIG_ASPEED_AST2600
-#else
-#ifdef MAC_DEBUG_REGRW_SCU
-	printf("[RegWr-SCU] %08x = %08x\n", SCU_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( SCU_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-#endif
-}
-void Write_Reg_WDT_DD (uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_WDT
-	printf("[RegWr-WDT] %08x = %08x\n", WDT_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( WDT_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-}
-void Write_Reg_TIMER_DD (uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_TIMER
-	printf("[RegWr-TIMER] %08x = %08x\n", TIMER_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( TIMER_BASE + addr, SWAP_4B_LEDN_REG( data ) );
-}
-void Write_Reg_GPIO_DD (uint32_t addr, uint32_t data) {
-#ifdef MAC_DEBUG_REGRW_GPIO
-	printf("[RegWr-GPIO]%08x: %08x\n", GPIO_BASE + addr, SWAP_4B_LEDN_REG( data ));
-#endif
-	WriteSOC_DD( GPIO_BASE + addr, SWAP_4B_LEDN_REG( data ) );
+void mac_reg_write(MAC_ENGINE *p_eng, uint32_t addr, uint32_t data)
+{
+	writel(data, p_eng->run.mac_base + addr);
 }
 
+
 //------------------------------------------------------------
 // Others
 //------------------------------------------------------------
@@ -287,598 +138,757 @@
 }
 
 //------------------------------------------------------------
-void dump_mac_ROreg (MAC_ENGINE *eng) {
-#ifdef Delay_MACDump
-	DELAY( Delay_MACDump );
-#endif
+void dump_mac_ROreg(MAC_ENGINE *p_eng) 
+{	
+	int i = 0xa0;
+
+	printf("\nMAC%d base 0x%08x", p_eng->run.mac_idx, p_eng->run.mac_base);
+	printf("\n%02x:", i);
+	for (i = 0xa0; i <= 0xc8; i += 4) {
+		printf("%08x ", mac_reg_read(p_eng, i));
+		if ((i & 0xf) == 0xc)
+			printf("\n%02x:", i + 4);
+	}
 	printf("\n");
-	printf("[MAC-H] ROReg A0h~ACh: %08x %08x %08x %08x\n", Read_Reg_MAC_DD( eng, 0xA0 ), Read_Reg_MAC_DD( eng, 0xA4 ), Read_Reg_MAC_DD( eng, 0xA8 ), Read_Reg_MAC_DD( eng, 0xAC ));
-	printf("[MAC-H] ROReg B0h~BCh: %08x %08x %08x %08x\n", Read_Reg_MAC_DD( eng, 0xB0 ), Read_Reg_MAC_DD( eng, 0xB4 ), Read_Reg_MAC_DD( eng, 0xB8 ), Read_Reg_MAC_DD( eng, 0xBC ));
-	printf("[MAC-H] ROReg C0h~C8h: %08x %08x %08x      \n", Read_Reg_MAC_DD( eng, 0xC0 ), Read_Reg_MAC_DD( eng, 0xC4 ), Read_Reg_MAC_DD( eng, 0xC8 ));
 }
 
 //------------------------------------------------------------
 // IO delay
 //------------------------------------------------------------
-void init_iodelay (MAC_ENGINE *eng) 
+static void get_mac_1g_delay_1(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
 {
-	int        index;
+	int tx_d, rx_d;
+	mac_delay_1g_t reg;
 
-	nt_log_func_name();
-
-	if ( eng->env.AST2500A1 && ( !eng->env.MAC_RMII ) )
-		eng->io.Dly_3Regiser = 1;
-	else
-		eng->io.Dly_3Regiser = 0;
-	//------------------------------
-	// IO Strength Max.
-	//------------------------------
-	//------------------------------
-	// [IO]setup Str_reg_idx
-	// [IO]setup Str_reg_value
-	// [IO]setup Str_reg_mask
-	// [IO]setup Str_max
-	// [IO]setup Str_shf
-	//------------------------------
-	// Get bit (shift) of IO driving strength register
-	eng->io.Str_reg_idx   = 0x90;
-	eng->io.Str_reg_Lbit  =  8;
-	eng->io.Str_reg_Hbit  = 11;
-	eng->io.Str_reg_value = ( eng->reg.SCU_090 >> eng->io.Str_reg_Lbit ) & 0xf;
-	eng->io.Str_reg_mask  = ( eng->reg.SCU_090 & 0xfffff0ff );
-	eng->io.Str_max       = 1;//0~1
-	if ( eng->env.MAC_RMII ) {
-		switch ( eng->run.MAC_idx ) {
-			case 0  : eng->io.Str_shf =  9; break;
-			case 1  : eng->io.Str_shf = 11; break;
-		}
-	}
-	else {//AST2500 RGMII only support high drive RGMIITXCK
-		if ( eng->run.TM_IOStrength )
-			printf("The RGMII driving strength testing v1.0\n");
-		switch ( eng->run.MAC_idx ) {
-			case 0  : eng->io.Str_shf =  8; break;
-			case 1  : eng->io.Str_shf = 10; break;
-		}
+	reg.w = readl(addr);
+	tx_d = reg.b.tx_delay_1;
+	rx_d = reg.b.rx_delay_1;	
+#ifdef CONFIG_ASPEED_AST2600
+	if (reg.b.rx_clk_inv_1 == 1) {
+		rx_d = (-1) * rx_d;
 	}
+#endif
+	*p_tx_d = tx_d;
+	*p_rx_d = rx_d;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-	if ( !eng->run.TM_IOStrength )
-		eng->io.Str_max = 0;
+static void get_mac_1g_delay_2(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	int tx_d, rx_d;
+	mac_delay_1g_t reg;
 
-	//------------------------------
-	// IO Delay Stage/Step
-	//------------------------------
-	//------------------------------
-	// [IO]setup Dly_stagebit
-	// [IO]setup Dly_stage_in
-	// [IO]setup Dly_stage_out
-	// [IO]setup Dly_step
-	// [IO]setup Dly_mask_bit_in
-	// [IO]setup Dly_mask_bit_out
-	//------------------------------
-	eng->io.Dly_stage_shf_i = (eng->arg.GEn_FullRange) ? 0 : AST2500_IOStageShiftBit_In ;
-	eng->io.Dly_stage_shf_o = (eng->arg.GEn_FullRange) ? 0 : AST2500_IOStageShiftBit_Out;
+	reg.w = readl(addr);
+	tx_d = reg.b.tx_delay_2;
+	rx_d = reg.b.rx_delay_2;	
+#ifdef CONFIG_ASPEED_AST2600
+	if (reg.b.rx_clk_inv_2 == 1) {
+		rx_d = (-1) * rx_d;
+	}
+#endif
+	*p_tx_d = tx_d;
+	*p_rx_d = rx_d;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-	eng->io.Dly_stagebit  = 6;
-	eng->io.Dly_stage     =   ( 1 << eng->io.Dly_stagebit );
-	eng->io.Dly_stage_in  = ( eng->io.Dly_stage >> eng->io.Dly_stage_shf_i );
-	eng->io.Dly_stage_out = ( eng->io.Dly_stage >> eng->io.Dly_stage_shf_o );
-	eng->io.Dly_step      = AST2500_IOStageStep;
-
-	eng->io.Dly_mask_bit_in = eng->io.Dly_stage - 1;
-	if ( eng->env.MAC_RMII )
-		eng->io.Dly_mask_bit_out = 1;
-	else
-		eng->io.Dly_mask_bit_out = eng->io.Dly_mask_bit_in;
+static void get_mac_100_10_delay_1(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	int tx_d, rx_d;
+	mac_delay_100_10_t reg;
 
-	//------------------------------
-	// IO-Delay Register Bit Position
-	//------------------------------
-	//------------------------------
-	// [IO]setup Dly_out_shf
-	// [IO]setup Dly_in_shf
-	// [IO]setup Dly_in_shf_regH
-	// [IO]setup Dly_out_shf_regH
-	//------------------------------
-	if ( eng->env.MAC_RMII ) {
-		switch ( eng->run.MAC_idx ) {
-			case 0  : eng->io.Dly_out_shf = 24; eng->io.Dly_in_shf = 12; break;
-			case 1  : eng->io.Dly_out_shf = 25; eng->io.Dly_in_shf = 18; break;
-		}
+	reg.w = readl(addr);
+	tx_d = reg.b.tx_delay_1;
+	rx_d = reg.b.rx_delay_1;	
+#ifdef CONFIG_ASPEED_AST2600
+	if (reg.b.rx_clk_inv_1 == 1) {
+		rx_d = (-1) * rx_d;
 	}
-	else {
-		switch ( eng->run.MAC_idx ) {
-			case 0  : eng->io.Dly_out_shf =  0; eng->io.Dly_in_shf  = 12; break;
-			case 1  : eng->io.Dly_out_shf =  6; eng->io.Dly_in_shf  = 18; break;
-		}
-	} // End if ( eng->env.MAC_RMII )
-
-	eng->io.Dly_in_shf_regH  = eng->io.Dly_in_shf  + eng->io.Dly_stagebit - 1;
-	eng->io.Dly_out_shf_regH = eng->io.Dly_out_shf + eng->io.Dly_stagebit - 1;
+#endif
+	*p_tx_d = tx_d;
+	*p_rx_d = rx_d;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-	//------------------------------
-	// [IO]setup Dly_mask_pos
-	// [Reg]setup SCU_048_mix
-	//------------------------------
-	eng->io.Dly_mask_pos = ( eng->io.Dly_mask_bit_in  << eng->io.Dly_in_shf  )
-	                     | ( eng->io.Dly_mask_bit_out << eng->io.Dly_out_shf );
-	eng->reg.SCU_048_mix = eng->reg.SCU_048_mix | ( eng->reg.SCU_048_check & ( ~eng->io.Dly_mask_pos ) );
+static void get_mac_100_10_delay_2(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	int tx_d, rx_d;
+	mac_delay_100_10_t reg;
 
-	//------------------------------
-	// [IO]setup value_ary
-	//------------------------------
-	if ( eng->env.AST2300 && (eng->reg.SCU_07c == 0x01000003) ) {
-		//AST2300-A0
-		for (index = 0; index < 16; index++) {
-			eng->io.value_ary[ index ] = IOValue_Array_A0[ index ];
-		}
-	}
-	else {
-		for (index = 0; index < eng->io.Dly_stage; index++)
-			eng->io.value_ary[ index ] = index;
+	reg.w = readl(addr);
+	tx_d = reg.b.tx_delay_2;
+	rx_d = reg.b.rx_delay_2;	
+#ifdef CONFIG_ASPEED_AST2600
+	if (reg.b.rx_clk_inv_2 == 1) {
+		rx_d = (-1) * rx_d;
 	}
+#endif
+	*p_tx_d = tx_d;
+	*p_rx_d = rx_d;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-	eng->io.init_done = 1;
+static void get_mac_rmii_delay_1(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	mac_delay_1g_t reg;
+	
+	reg.w = readl(addr);
+	*p_rx_d = reg.b.rx_delay_1;
+	*p_tx_d = reg.b.rmii_tx_data_at_falling_1;
+
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       *p_rx_d, *p_tx_d);
 }
+static void get_mac_rmii_delay_2(uint32_t addr, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	mac_delay_1g_t reg;
+	
+	reg.w = readl(addr);
+	*p_rx_d = reg.b.rx_delay_2;
+	*p_tx_d = reg.b.rmii_tx_data_at_falling_2;
 
-//------------------------------------------------------------
-int get_iodelay (MAC_ENGINE *eng) {
-	int        index;
-	int        index_max;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       *p_rx_d, *p_tx_d);
+}
 
-	nt_log_func_name();
+static 
+void get_mac1_1g_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_1g_delay_1(p_eng->io.mac12_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac1_100m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_1(p_eng->io.mac12_100m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac1_10m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_1(p_eng->io.mac12_10m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac2_1g_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_1g_delay_2(p_eng->io.mac12_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac2_100m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_2(p_eng->io.mac12_100m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac2_10m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_2(p_eng->io.mac12_10m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac3_1g_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_1g_delay_1(p_eng->io.mac34_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac3_100m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_1(p_eng->io.mac34_100m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac3_10m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_1(p_eng->io.mac34_10m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac4_1g_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_1g_delay_2(p_eng->io.mac34_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac4_100m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_2(p_eng->io.mac34_100m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac4_10m_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_100_10_delay_2(p_eng->io.mac34_10m_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac1_rmii_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_rmii_delay_1(p_eng->io.mac12_1g_delay.addr, p_rx_d, p_tx_d);	
+}
+static
+void get_mac2_rmii_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_rmii_delay_2(p_eng->io.mac12_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac3_rmii_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_rmii_delay_1(p_eng->io.mac34_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_mac4_rmii_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	get_mac_rmii_delay_2(p_eng->io.mac34_1g_delay.addr, p_rx_d, p_tx_d);
+}
+static
+void get_dummy_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	debug("%s\n", __func__);
+}
 
-	//------------------------------
-	// IO Delay Register Setting
-	//------------------------------
-	//------------------------------
-	// [IO]setup Dly_reg_idx
-	// [IO]setup Dly_reg_value
-	//------------------------------
-	switch (eng->run.Speed_idx) {
-	case 0:
-		eng->io.Dly_reg_idx = 0x48;
-		eng->io.Dly_reg_value = eng->reg.SCU_048;
-		break;
-	case 1:
-		eng->io.Dly_reg_idx = 0xb8;
-		eng->io.Dly_reg_value = eng->reg.SCU_0b8;
-		break;
-	case 2:
-		eng->io.Dly_reg_idx = 0xbc;
-		eng->io.Dly_reg_value = eng->reg.SCU_0bc;
-		break;
+/**
+ * @brief function pointer table to get current delay setting
+ * 
+ * get_delay_func_tbl[rmii/rgmii][mac_idx][speed_idx 1g/100m/10m]
+*/
+typedef void (*pfn_get_delay) (MAC_ENGINE *, int32_t *, int32_t *);
+pfn_get_delay get_delay_func_tbl[2][4][3] = {
+	{
+		{get_mac1_rmii_delay, get_dummy_delay, get_dummy_delay},
+		{get_mac2_rmii_delay, get_dummy_delay, get_dummy_delay},
+#if defined(CONFIG_ASPEED_AST2600)
+		{get_mac3_rmii_delay, get_dummy_delay, get_dummy_delay},
+		{get_mac4_rmii_delay, get_dummy_delay, get_dummy_delay},
+#else
+		{get_dummy_delay, get_dummy_delay, get_dummy_delay},
+		{get_dummy_delay, get_dummy_delay, get_dummy_delay},
+#endif		
+	},
+	{
+		{get_mac1_1g_delay, get_mac1_100m_delay, get_mac1_10m_delay},
+		{get_mac2_1g_delay, get_mac2_100m_delay, get_mac2_10m_delay},
+#if defined(CONFIG_ASPEED_AST2600)		
+		{get_mac3_1g_delay, get_mac3_100m_delay, get_mac3_10m_delay},
+		{get_mac4_1g_delay, get_mac4_100m_delay, get_mac4_10m_delay},
+#else
+		{get_dummy_delay, get_dummy_delay, get_dummy_delay},
+		{get_dummy_delay, get_dummy_delay, get_dummy_delay},
+#endif		
+	}
+};
+void mac_get_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+#if 1
+	uint32_t rgmii = (uint32_t)p_eng->run.is_rgmii;
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	uint32_t speed_idx = p_eng->run.speed_idx;
+
+	get_delay_func_tbl[rgmii][mac_idx][speed_idx] (p_eng, p_rx_d, p_tx_d);
+#else
+	/* for test */
+	uint32_t rgmii;
+	uint32_t mac_idx;
+	uint32_t speed_idx;
+	for (rgmii = 0; rgmii < 2; rgmii++)
+		for (mac_idx = 0; mac_idx < 4; mac_idx++)
+			for (speed_idx = 0; speed_idx < 3; speed_idx++)
+				get_delay_func_tbl[rgmii][mac_idx][speed_idx](
+				    p_eng, p_rx_d, p_tx_d);
+#endif	
+}
+
+void mac_get_max_available_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	uint32_t rgmii = (uint32_t)p_eng->run.is_rgmii;
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	int32_t tx_max, rx_max;
+
+	if (rgmii) {
+		if (mac_idx > 1) {
+			tx_max = p_eng->io.mac34_1g_delay.tx_max;
+			rx_max = p_eng->io.mac34_1g_delay.rx_max;
+		} else {
+			tx_max = p_eng->io.mac12_1g_delay.tx_max;
+			rx_max = p_eng->io.mac12_1g_delay.rx_max;
+		}
+	} else {
+		if (mac_idx > 1) {
+			tx_max = p_eng->io.mac34_1g_delay.rmii_tx_max;
+			rx_max = p_eng->io.mac34_1g_delay.rmii_rx_max;
+		} else {
+			tx_max = p_eng->io.mac12_1g_delay.rmii_tx_max;
+			rx_max = p_eng->io.mac12_1g_delay.rmii_rx_max;
+		}
+	}
+	*p_tx_d = tx_max;
+	*p_rx_d = rx_max;
+}
+
+void mac_get_min_available_delay(MAC_ENGINE *p_eng, int32_t *p_rx_d, int32_t *p_tx_d)
+{
+	uint32_t rgmii = (uint32_t)p_eng->run.is_rgmii;
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	int32_t tx_min, rx_min;
+
+	if (rgmii) {
+		if (mac_idx > 1) {
+			tx_min = p_eng->io.mac34_1g_delay.tx_min;
+			rx_min = p_eng->io.mac34_1g_delay.rx_min;
+		} else {
+			tx_min = p_eng->io.mac12_1g_delay.tx_min;
+			rx_min = p_eng->io.mac12_1g_delay.rx_min;
+		}
+	} else {
+		if (mac_idx > 1) {
+			tx_min = p_eng->io.mac34_1g_delay.rmii_tx_min;
+			rx_min = p_eng->io.mac34_1g_delay.rmii_rx_min;
+		} else {
+			tx_min = p_eng->io.mac12_1g_delay.rmii_tx_min;
+			rx_min = p_eng->io.mac12_1g_delay.rmii_rx_min;
+		}
 	}
+	*p_tx_d = tx_min;
+	*p_rx_d = rx_min;
+}
 
-	//------------------------------
-	// [IO]setup Dly_reg_name_tx
-	// [IO]setup Dly_reg_name_rx
-	// [IO]setup Dly_reg_name_tx_new
-	// [IO]setup Dly_reg_name_rx_new
-	//------------------------------
-	if ( eng->env.MAC_RMII )
-		sprintf( eng->io.Dly_reg_name_tx, "Tx:SCU%2X[   %2d]=",  eng->io.Dly_reg_idx,                           eng->io.Dly_out_shf );
-	else
-		sprintf( eng->io.Dly_reg_name_tx, "Tx:SCU%2X[%2d:%2d]=", eng->io.Dly_reg_idx, eng->io.Dly_out_shf_regH, eng->io.Dly_out_shf );
-	sprintf( eng->io.Dly_reg_name_rx, "Rx:SCU%2X[%2d:%2d]=", eng->io.Dly_reg_idx, eng->io.Dly_in_shf_regH,  eng->io.Dly_in_shf );
+static void set_mac_1g_delay_1(uint32_t addr, int32_t rx_d, int32_t tx_d)
+{
+	mac_delay_1g_t reg;
 
-	if (eng->env.MAC_RMII)
-		sprintf(eng->io.Dly_reg_name_tx_new,
-			"Tx[   %2d]=", eng->io.Dly_out_shf);
-	else
-		sprintf(eng->io.Dly_reg_name_tx_new,
-			"Tx[%2d:%2d]=", eng->io.Dly_out_shf_regH,
-			eng->io.Dly_out_shf);
-	sprintf(eng->io.Dly_reg_name_rx_new,
-		"Rx[%2d:%2d]=", eng->io.Dly_in_shf_regH, eng->io.Dly_in_shf);
+	reg.w = readl(addr);
+#ifdef CONFIG_ASPEED_AST2600
+	if (rx_d < 0) {
+		reg.b.rx_clk_inv_1 = 1;
+		rx_d = abs(rx_d);
+	}
+#endif
+	reg.b.rx_delay_1 = rx_d;
+	reg.b.tx_delay_1 = tx_d;
+	writel(reg.w, addr);
 
-	//------------------------------
-	// [IO]setup Dly_in_reg
-	// [IO]setup Dly_out_reg
-	//------------------------------
-	// Get current clock delay value of TX(out) and RX(in) in the SCU48 register
-	// and setting test range
-	eng->io.Dly_in_reg  = ( eng->io.Dly_reg_value >> eng->io.Dly_in_shf  ) & eng->io.Dly_mask_bit_in;
-	eng->io.Dly_out_reg = ( eng->io.Dly_reg_value >> eng->io.Dly_out_shf ) & eng->io.Dly_mask_bit_out;
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-	//------------------------------
-	// [IO]setup Dly_in_reg_idx
-	// [IO]setup Dly_in_min
-	// [IO]setup Dly_in_max
-	// [IO]setup Dly_out_reg_idx
-	// [IO]setup Dly_out_min
-	// [IO]setup Dly_out_max
-	//------------------------------
-	// Find the coordinate in X-Y axis
-	index_max = ( eng->io.Dly_stage_in << eng->io.Dly_stage_shf_i );
-	for ( index = 0; index < index_max; index++ )
-		if ( eng->io.Dly_in_reg == eng->io.value_ary[ index ] ) {
-			eng->io.Dly_in_reg_idx = index;
-			eng->io.Dly_in_min     = index - ( eng->run.IO_Bund >> 1 );
-			eng->io.Dly_in_max     = index + ( eng->run.IO_Bund >> 1 );
-			break;
-		}
-
-	index_max = ( eng->io.Dly_stage_out << eng->io.Dly_stage_shf_o );
-	for ( index = 0; index < index_max; index++ )
-		if ( eng->io.Dly_out_reg == eng->io.value_ary[ index ] ) {
-			eng->io.Dly_out_reg_idx = index;
-			if ( eng->env.MAC_RMII ) {
-				eng->io.Dly_out_min = index;
-				eng->io.Dly_out_max = index;
-			}
-			else {
-				eng->io.Dly_out_min = index - ( eng->run.IO_Bund >> 1 );
-				eng->io.Dly_out_max = index + ( eng->run.IO_Bund >> 1 );
-			}
-			break;
-		}
+static void set_mac_1g_delay_2(uint32_t addr, int32_t rx_d, int32_t tx_d)
+{
+	mac_delay_1g_t reg;
 
-	if ( eng->run.IO_MrgChk ) {
-		if ( eng->io.Dly_in_reg_idx >= eng->io.Dly_stage_in )
-			return( ( eng->flg.Err_Flag = eng->flg.Err_Flag | Err_Flag_IOMarginOUF ) );
-		if ( eng->io.Dly_out_reg_idx >= eng->io.Dly_stage_out )
-			return( ( eng->flg.Err_Flag = eng->flg.Err_Flag | Err_Flag_IOMarginOUF ) );
-#ifdef Enable_No_IOBoundary
-		if ( eng->io.Dly_in_min  <  0                     ) { eng->flg.Wrn_Flag = eng->flg.Wrn_Flag | Wrn_Flag_IOMarginOUF; eng->io.Dly_in_min  = 0                     ;}
-		if ( eng->io.Dly_in_max  >= eng->io.Dly_stage_in  ) { eng->flg.Wrn_Flag = eng->flg.Wrn_Flag | Wrn_Flag_IOMarginOUF; eng->io.Dly_in_max  = eng->io.Dly_stage_in-1;}
+	reg.w = readl(addr);
+#ifdef CONFIG_ASPEED_AST2600
+	if (rx_d < 0) {
+		reg.b.rx_clk_inv_2 = 1;
+		rx_d = abs(rx_d);
+	}
+#endif
+	reg.b.rx_delay_2 = rx_d;
+	reg.b.tx_delay_2 = tx_d;
+	writel(reg.w, addr);
 
-		if ( eng->io.Dly_out_min <  0                     ) { eng->flg.Wrn_Flag = eng->flg.Wrn_Flag | Wrn_Flag_IOMarginOUF; eng->io.Dly_out_min = 0                      ;}
-		if ( eng->io.Dly_out_max >= eng->io.Dly_stage_out ) { eng->flg.Wrn_Flag = eng->flg.Wrn_Flag | Wrn_Flag_IOMarginOUF; eng->io.Dly_out_max = eng->io.Dly_stage_out-1;}
-#else
-		if ( ( eng->io.Dly_in_min < 0 ) || ( eng->io.Dly_in_max >= eng->io.Dly_stage_in ) )
-			return( ( eng->flg.Err_Flag = eng->flg.Err_Flag | Err_Flag_IOMarginOUF ) );
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
-		if ( ( eng->io.Dly_out_min < 0 ) || ( eng->io.Dly_out_max >= eng->io.Dly_stage_out ) )
-			return( ( eng->flg.Err_Flag = eng->flg.Err_Flag | Err_Flag_IOMarginOUF ) );
-#endif
-	}
+static void set_mac_100_10_delay_1(uint32_t addr, int32_t rx_d, int32_t tx_d)
+{
+	mac_delay_100_10_t reg;
 
-	//------------------------------
-	// IO Delay Testing Boundary
-	//------------------------------
-	//------------------------------
-	// [IO]setup Dly_in_cval
-	// [IO]setup Dly_out_cval
-	// [IO]setup Dly_in_str
-	// [IO]setup Dly_in_end
-	// [IO]setup Dly_out_str
-	// [IO]setup Dly_out_end
-	//------------------------------
-	// Get the range for testmargin block
-	if ( eng->run.TM_IOTiming ) {
-		eng->io.Dly_in_cval  = eng->io.Dly_step;
-		eng->io.Dly_out_cval = eng->io.Dly_step;
-		eng->io.Dly_in_str   = 0;
-		eng->io.Dly_in_end   = eng->io.Dly_stage_in-1;
-		eng->io.Dly_out_str  = 0;
-		if ( eng->env.MAC_RMII )
-			eng->io.Dly_out_end  = 1;
-		else
-			eng->io.Dly_out_end  = eng->io.Dly_stage_out-1;
+	reg.w = readl(addr);
+#ifdef CONFIG_ASPEED_AST2600
+	if (rx_d < 0) {
+		reg.b.rx_clk_inv_1 = 1;
+		rx_d = abs(rx_d);
 	}
-	else if ( eng->run.IO_Bund ) {
-		eng->io.Dly_in_cval  = eng->io.Dly_step;
-		eng->io.Dly_out_cval = eng->io.Dly_step;
-		eng->io.Dly_in_str   = eng->io.Dly_in_min;
-		eng->io.Dly_in_end   = eng->io.Dly_in_max;
-		eng->io.Dly_out_str  = eng->io.Dly_out_min;
-		eng->io.Dly_out_end  = eng->io.Dly_out_max;
+#endif
+	reg.b.rx_delay_1 = rx_d;
+	reg.b.tx_delay_1 = tx_d;
+	writel(reg.w, addr);
+
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
+
+static void set_mac_100_10_delay_2(uint32_t addr, int32_t rx_d, int32_t tx_d)
+{
+	mac_delay_100_10_t reg;
+
+	reg.w = readl(addr);
+#ifdef CONFIG_ASPEED_AST2600
+	if (rx_d < 0) {
+		reg.b.rx_clk_inv_2 = 1;
+		rx_d = abs(rx_d);
 	}
-	else {
-		eng->io.Dly_in_cval  = 1;
-		eng->io.Dly_out_cval = 1;
-		eng->io.Dly_in_str   = 0;
-		eng->io.Dly_in_end   = 0;
-		eng->io.Dly_out_str  = 0;
-		eng->io.Dly_out_end  = 0;
-	} // End if ( eng->run.TM_IOTiming )
+#endif
+	reg.b.rx_delay_2 = rx_d;
+	reg.b.tx_delay_2 = tx_d;
+	writel(reg.w, addr);
 
-	return(0);
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
 }
 
-//------------------------------------------------------------
-// SCU
-//------------------------------------------------------------
-void recov_scu (MAC_ENGINE *eng) {
-	nt_log_func_name();
+static void set_mac_rmii_delay_1(uint32_t addr, int32_t rx_d, int32_t tx_d)
+{
+	mac_delay_1g_t reg;
 
-	//MAC
-//	Write_Reg_MAC_DD( eng, 0x08, eng->reg.MAC_008 );
-//	Write_Reg_MAC_DD( eng, 0x0c, eng->reg.MAC_00c );
-//	Write_Reg_MAC_DD( eng, 0x40, eng->reg.MAC_040 );
-
-	//SCU
-//	Write_Reg_SCU_DD( 0x004, eng->reg.SCU_004 );
-	Write_Reg_SCU_DD( 0x008, eng->reg.SCU_008 );
-//	Write_Reg_SCU_DD( 0x00c, eng->reg.SCU_00c );
-	Write_Reg_SCU_DD( 0x048, eng->reg.SCU_048 );
-//#if defined(SLT_UBOOT) || defined(Enable_MAC_ExtLoop)
-//#else
-//	Write_Reg_SCU_DD( 0x07c, (~eng->reg.SCU_070) );
-//	Write_Reg_SCU_DD( 0x070, eng->reg.SCU_070  );
-//#endif
-	Write_Reg_SCU_DD( 0x074, eng->reg.SCU_074 );
-	Write_Reg_SCU_DD( 0x080, eng->reg.SCU_080 );
-	Write_Reg_SCU_DD( 0x088, eng->reg.SCU_088 );
-	Write_Reg_SCU_DD( 0x090, eng->reg.SCU_090 );
-	Write_Reg_SCU_DD( 0x0b8, eng->reg.SCU_0b8 );
-	Write_Reg_SCU_DD( 0x0bc, eng->reg.SCU_0bc );
-} // End void recov_scu (MAC_ENGINE *eng)
+	reg.w = readl(addr);
+	reg.b.rmii_tx_data_at_falling_1 = tx_d;
+	reg.b.rx_delay_1 = rx_d;
+	writel(reg.w, addr);
 
-//------------------------------------------------------------
-void read_scu (MAC_ENGINE *eng) 
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
+
+static void set_mac_rmii_delay_2(uint32_t addr, int32_t rx_d, int32_t tx_d)
 {
-	nt_log_func_name();
+	mac_delay_1g_t reg;
 
-	if ( !eng->reg.SCU_oldvld ) {
-		//SCU
-		eng->reg.SCU_004 = Read_Reg_SCU_DD( 0x004 );
-		eng->reg.SCU_008 = Read_Reg_SCU_DD( 0x008 );
-		eng->reg.SCU_00c = Read_Reg_SCU_DD( 0x00c );
-		eng->reg.SCU_048 = Read_Reg_SCU_DD( 0x048 );
-		eng->reg.SCU_070 = Read_Reg_SCU_DD( 0x070 );
-		eng->reg.SCU_074 = Read_Reg_SCU_DD( 0x074 );
-		eng->reg.SCU_07c = Read_Reg_SCU_DD( 0x07c );
-		eng->reg.SCU_080 = Read_Reg_SCU_DD( 0x080 );
-		eng->reg.SCU_088 = Read_Reg_SCU_DD( 0x088 );
-		eng->reg.SCU_090 = Read_Reg_SCU_DD( 0x090 );
-		eng->reg.SCU_09c = Read_Reg_SCU_DD( 0x09c );
-		eng->reg.SCU_0b8 = Read_Reg_SCU_DD( 0x0b8 );
-		eng->reg.SCU_0bc = Read_Reg_SCU_DD( 0x0bc );
-		eng->reg.SCU_0f0 = Read_Reg_SCU_DD( 0x0f0 );
-
-		//WDT
-		eng->reg.WDT_00c = Read_Reg_WDT_DD( 0x00c );
-		eng->reg.WDT_02c = Read_Reg_WDT_DD( 0x02c );
-		eng->reg.WDT_04c = Read_Reg_WDT_DD( 0x04c );
+	reg.w = readl(addr);
+	reg.b.rmii_tx_data_at_falling_2 = tx_d;
+	reg.b.rx_delay_2 = rx_d;
+	writel(reg.w, addr);
 
-		eng->reg.SCU_oldvld = 1;
-	} // End if ( !eng->reg.SCU_oldvld )
+	debug("%s:[%08x] %08x, rx_d=%d, tx_d=%d\n", __func__, addr, reg.w,
+	       rx_d, tx_d);
+}
 
 
-#ifdef CONFIG_ASPEED_AST2600
-	eng->reg.SCU_048 = 0x00082208;
-	eng->reg.SCU_0b8 = 0x00082208;
-	eng->reg.SCU_0bc = 0x00082208;
-	eng->reg.SCU_07c = 0x04000000;//ASTChipName
-
-	eng->reg.SCU_FPGASel = Read_Reg_SCU_DD_AST2600( 0x10c ) & 0x0fffffff;
-	eng->reg.SCU_070     = Read_Reg_SCU_DD_AST2600( 0x500 ) & 0x000000c0;
-	eng->reg.SCU_510     = Read_Reg_SCU_DD_AST2600( 0x510 ) & 0x00000003;
-
-	Write_Reg_SCU_DD_AST2600( 0x000 , 0x1688a8a8 );
-	Write_Reg_SCU_DD_AST2600( 0x010 , 0x1688a8a8 );
-//(clock enable) --------------------
-	Write_Reg_SCU_DD_AST2600( 0x084 , 0x00300000 );
-	Write_Reg_SCU_DD_AST2600( 0x094 , 0x00300000 );
-//(Reset) --------------------
-	Write_Reg_SCU_DD_AST2600( 0x040 , 0x00001800 );
-//	Write_Reg_SCU_DD_AST2600( 0x050 , 0x00001800 );//Old
-	Write_Reg_SCU_DD_AST2600( 0x050 , 0x00300000 );//New
-//PMI --------------------
-//	Write_Reg_SCU_DD_AST2600( 0x054 , 0x00002000 );//Old
-	Write_Reg_SCU_DD_AST2600( 0x054 , 0x00000008 );//New
-//(RGMII) --------------------
-/*	Write_Reg_SCU_DD_AST2600( 0x500 , 0x000000c0 );
-	Write_Reg_SCU_DD_AST2600( 0x510 , 0x00000003 );
-*/
-//(RMII) --------------------
-/*
-	Write_Reg_SCU_DD_AST2600( 0x504 , 0x000000c0 );
-	Write_Reg_SCU_DD_AST2600( 0x514 , 0x00000003 );
-*/
-//(Reset) --------------------
-	Write_Reg_SCU_DD_AST2600( 0x044 , 0x00001800 );
-//	Write_Reg_SCU_DD_AST2600( 0x054 , 0x00001800 );//Old
-	Write_Reg_SCU_DD_AST2600( 0x054 , 0x00300000 );//New
-#endif
-} // End read_scu(MAC_ENGINE *eng)
+static void set_mac1_1g_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_1g_delay_1(p_eng->io.mac12_1g_delay.addr, rx_d, tx_d);
+}
+static void set_mac1_100m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_1(p_eng->io.mac12_100m_delay.addr, rx_d, tx_d);
+}
+static void set_mac1_10m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_1(p_eng->io.mac12_10m_delay.addr, rx_d, tx_d);
+}
+static void set_mac2_1g_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_1g_delay_2(p_eng->io.mac12_1g_delay.addr, rx_d, tx_d);
+}
+static void set_mac2_100m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_2(p_eng->io.mac12_100m_delay.addr, rx_d, tx_d);
+}
+static void set_mac2_10m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_2(p_eng->io.mac12_10m_delay.addr, rx_d, tx_d);
+}
+static void set_mac3_1g_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_1g_delay_1(p_eng->io.mac34_1g_delay.addr, rx_d, tx_d);
+}
+static void set_mac3_100m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_1(p_eng->io.mac34_100m_delay.addr, rx_d, tx_d);
+}
+static void set_mac3_10m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_1(p_eng->io.mac34_10m_delay.addr, rx_d, tx_d);
+}
+static void set_mac4_1g_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_1g_delay_2(p_eng->io.mac34_1g_delay.addr, rx_d, tx_d);
+}
+static void set_mac4_100m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_2(p_eng->io.mac34_100m_delay.addr, rx_d, tx_d);
+}
+static void set_mac4_10m_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_100_10_delay_2(p_eng->io.mac34_10m_delay.addr, rx_d, tx_d);
+}
+static void set_mac1_rmii_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_rmii_delay_1(p_eng->io.mac12_1g_delay.addr, rx_d, tx_d);
+}
+static void set_mac2_rmii_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_rmii_delay_2(p_eng->io.mac12_1g_delay.addr, rx_d, tx_d);
+}
 
-//------------------------------------------------------------
-void Setting_scu (MAC_ENGINE *eng) 
+static void set_mac3_rmii_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
 {
-	nt_log_func_name();
+	set_mac_rmii_delay_1(p_eng->io.mac34_1g_delay.addr, rx_d, tx_d);
+}
 
-	//------------------------------
-	// [WDT]Disable Timer
-	//------------------------------
-	if ( eng->env.AST2400 ) {
-		Write_Reg_SCU_DD( 0x9c, eng->reg.SCU_09c & 0xffffff9f ); //[5:6]Watchdog Reset for MAC
+static void set_mac4_rmii_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	set_mac_rmii_delay_2(p_eng->io.mac34_1g_delay.addr, rx_d, tx_d);
+}
+
+void set_dummy_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	printf("%s: %d, %d\n", __func__, rx_d, tx_d);
+}
+
+/**
+ * @brief function pointer table for delay setting
+ * 
+ * set_delay_func_tbl[rmii/rgmii][mac_idx][speed_idx 1g/100m/10m]
+*/
+typedef void (*pfn_set_delay) (MAC_ENGINE *, int32_t, int32_t);
+pfn_set_delay set_delay_func_tbl[2][4][3] = {
+	{
+		{set_mac1_rmii_delay, set_dummy_delay, set_dummy_delay},
+		{set_mac2_rmii_delay, set_dummy_delay, set_dummy_delay},
+#if defined(CONFIG_ASPEED_AST2600)
+		{set_mac3_rmii_delay, set_dummy_delay, set_dummy_delay},
+		{set_mac4_rmii_delay, set_dummy_delay, set_dummy_delay},
+#else
+		{set_dummy_delay, set_dummy_delay, set_dummy_delay},
+		{set_dummy_delay, set_dummy_delay, set_dummy_delay},
+#endif		
+	},
+	{
+		{set_mac1_1g_delay, set_mac1_100m_delay, set_mac1_10m_delay},
+		{set_mac2_1g_delay, set_mac2_100m_delay, set_mac2_10m_delay},
+#if defined(CONFIG_ASPEED_AST2600)		
+		{set_mac3_1g_delay, set_mac3_100m_delay, set_mac3_10m_delay},
+		{set_mac4_1g_delay, set_mac4_100m_delay, set_mac4_10m_delay},
+#else
+		{set_dummy_delay, set_dummy_delay, set_dummy_delay},
+		{set_dummy_delay, set_dummy_delay, set_dummy_delay},
+#endif		
 	}
+};
 
-	Write_Reg_WDT_DD( 0x00c, eng->reg.WDT_00c & 0xfffffffc );
-	Write_Reg_WDT_DD( 0x02c, eng->reg.WDT_02c & 0xfffffffc );
-	Write_Reg_WDT_DD( 0x04c, eng->reg.WDT_04c & 0xfffffffc );
+void mac_set_delay(MAC_ENGINE *p_eng, int32_t rx_d, int32_t tx_d)
+{
+	uint32_t rgmii = (uint32_t)p_eng->run.is_rgmii;
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	uint32_t speed_idx = p_eng->run.speed_idx;	
 
-	Write_Reg_WDT_DD( 0x01c, Read_Reg_WDT_DD( 0x01c ) & 0xffffff9f );
-	Write_Reg_WDT_DD( 0x03c, Read_Reg_WDT_DD( 0x03c ) & 0xffffff9f );
-	Write_Reg_WDT_DD( 0x05c, Read_Reg_WDT_DD( 0x05c ) & 0xffffff9f );
+	set_delay_func_tbl[rgmii][mac_idx][speed_idx] (p_eng, rx_d, tx_d);
 }
 
-//------------------------------------------------------------
-void init_scu1 (MAC_ENGINE *eng) 
+uint32_t mac_get_driving_strength(MAC_ENGINE *p_eng)
 {
-	nt_log_func_name();
+#ifdef CONFIG_ASPEED_AST2600
+	mac34_drv_t reg;
+	
+	reg.w = readl(p_eng->io.mac34_drv_reg.addr);
+	/* ast2600 : only MAC#3 & MAC#4 have driving strength setting */
+	if (p_eng->run.mac_idx == 2) {
+		return (reg.b.mac3_tx_drv);
+	} else if (p_eng->run.mac_idx == 3) {
+		return (reg.b.mac4_tx_drv);
+	} else {
+		return 0;
+	}
+#else
+	mac12_drv_t reg;
 
-	if ( eng->ModeSwitch == MODE_DEDICATED )
-		init_scu_macio ( eng );
+	reg.w = readl(p_eng->io.mac12_drv_reg.addr);
+	
+	if (p_eng->run.mac_idx == 0) {
+		return (reg.b.mac1_tx_drv);
+	} else if (p_eng->run.mac_idx == 1) {
+		return (reg.b.mac2_tx_drv);
+	} else {
+		return 0;
+	}
+#endif		
+}
+void mac_set_driving_strength(MAC_ENGINE *p_eng, uint32_t strength)
+{
+#ifdef CONFIG_ASPEED_AST2600
+	mac34_drv_t reg;
 
-#ifdef Enable_BufMerge
-	if ( eng->env.AST2300 ) {
-		Write_Reg_SCU_DD( 0xf0, 0x66559959 );//MAC buffer merge
+	if (strength > p_eng->io.mac34_drv_reg.drv_max) {
+		printf("invalid driving strength value\n");
+		return;
 	}
-#endif
-} // End void init_scu1 (MAC_ENGINE *eng)
 
-//------------------------------------------------------------
-void init_scu_macio (MAC_ENGINE *eng) {
-	nt_log_func_name();
-//------------------------------
-// MDC/MDIO, LINK
-//------------------------------
-	if ( eng->env.AST2300 ) {
-		switch ( eng->run.MAC_idx_PHY ) {
-  #if defined(PHY_GPIO)
-			case 0  : Write_Reg_SCU_DD( 0x88, (eng->reg.SCU_088 & 0x3fffffff)              ); break;//[31]MAC1 MDIO, [30]MAC1 MDC
-			case 1  : Write_Reg_SCU_DD( 0x90, (eng->reg.SCU_090 & 0xfffffffb)              ); break;//[2 ]MAC2 MDC/MDIO
-  #else
-			case 0  : Write_Reg_SCU_DD( 0x88, (eng->reg.SCU_088 & 0x3fffffff) | 0xc0000000 ); break;//[31]MAC1 MDIO, [30]MAC1 MDC
-			case 1  : Write_Reg_SCU_DD( 0x90, (eng->reg.SCU_090 & 0xfffffffb) | 0x00000004 ); break;//[2 ]MAC2 MDC/MDIO
-  #endif
-			default : break;
-		}
-//		Write_Reg_SCU_DD( 0x80, (eng->reg.SCU_080 & 0xfffffff0) | 0x0000000f );//MAC1LINK/MAC2LINK
+	/**
+	 * read->modify->write for driving strength control register 
+	 * ast2600 : only MAC#3 & MAC#4 have driving strength setting
+	 */
+	reg.w = readl(p_eng->io.mac34_drv_reg.addr);
+
+	/* ast2600 : only MAC#3 & MAC#4 have driving strength setting */
+	if (p_eng->run.mac_idx == 2) {
+		reg.b.mac3_tx_drv = strength;
+	} else if (p_eng->run.mac_idx == 3) {
+		reg.b.mac4_tx_drv = strength;
 	}
-	else {
-		switch ( eng->run.MAC_idx_PHY ) {
-//			case 0  :
-//				eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xfdffffff) | 0x02000000;//[25]MAC1 PHYLINK
-//				break;
-			case 1  :
-  #if defined(PHY_GPIO)
-//				eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xfbefffff) | 0x04000000;//[26]MAC2 PHYLINK, [20]MAC2 MDC/MDIO
-				eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xffefffff)             ;//[26]MAC2 PHYLINK, [20]MAC2 MDC/MDIO
-  #else
-//				eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xfbefffff) | 0x04100000;//[26]MAC2 PHYLINK, [20]MAC2 MDC/MDIO
-				eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xffefffff) | 0x00100000;//[26]MAC2 PHYLINK, [20]MAC2 MDC/MDIO
-  #endif
-				break;
-			default : 
-				break;
-		} // End switch ( eng->run.MAC_idx_PHY )
-		//------------------------------
-		// MAC2 MII Interface
-		//------------------------------
-		switch ( eng->run.MAC_idx ) {
-			case 1  :
-				if ( eng->env.MAC2_RMII )
-					eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xffdfffff)             ;//[21]MAC2 MII
-				else
-					eng->reg.SCU_074_mix = (eng->reg.SCU_074_mix & 0xffdfffff) | 0x00200000;//[21]MAC2 MII
-			default :
-				break;
-		} // End switch ( eng->run.MAC_idx )
-		Write_Reg_SCU_DD( 0x74, eng->reg.SCU_074_mix);
-	} // End if ( eng->env.AST2300 )
-} // End void init_scu_macio (MAC_ENGINE *eng)
 
-//------------------------------------------------------------
-void init_scu_macrst (MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
+	writel(reg.w, p_eng->io.mac34_drv_reg.addr);
+#else
+	mac12_drv_t reg;
 
-	Write_Reg_SCU_DD( 0x04, eng->reg.SCU_004_dis );//Rst
-#ifdef Delay_SCU
-	DELAY( Delay_SCU );
+	if (strength > p_eng->io.mac12_drv_reg.drv_max) {
+		printf("invalid driving strength value\n");
+		return;
+	}
+
+	/* read->modify->write for driving strength control register */
+	reg.w = readl(p_eng->io.mac12_drv_reg.addr);
+	if (p_eng->run.is_rgmii) {
+		if (p_eng->run.mac_idx == 0) {
+			reg.b.mac1_rgmii_tx_drv =
+			    strength;
+		} else if (p_eng->run.mac_idx == 2) {
+			reg.b.mac2_rgmii_tx_drv =
+			    strength;
+		}
+	} else {
+		if (p_eng->run.mac_idx == 0) {
+			reg.b.mac1_rmii_tx_drv =
+			    strength;
+		} else if (p_eng->run.mac_idx == 1) {
+			reg.b.mac2_rmii_tx_drv =
+			    strength;
+		}
+	}
+	writel(reg.w, p_eng->io.mac12_drv_reg.addr);
 #endif
-	Write_Reg_SCU_DD( 0x04, eng->reg.SCU_004_en );//Enable Engine
-} // End void init_scu_macrst (MAC_ENGINE *eng)
+}
 
-//------------------------------------------------------------
-void init_scu_macdis (MAC_ENGINE *eng) 
+void mac_set_rmii_50m_output_enable(MAC_ENGINE *p_eng)
 {
-	nt_log_func_name();
+	uint32_t addr;
+	mac_delay_1g_t value;
 
-	Write_Reg_SCU_DD( 0x04, eng->reg.SCU_004_dis );//Rst
-	Read_Reg_SCU_DD( 0x04 );//delay
+	if (p_eng->run.mac_idx > 1) {
+		addr = p_eng->io.mac34_1g_delay.addr;
+	} else {
+		addr = p_eng->io.mac12_1g_delay.addr;
+	}
 
-	Write_Reg_SCU_DD( 0x0c, eng->reg.SCU_00c_dis );//Clock
-	Read_Reg_SCU_DD( 0x0c );//delay
-} // End void init_scu_macdis (MAC_ENGINE *eng)
+	value.w = readl(addr);
+	if (p_eng->run.mac_idx & BIT(0)) {
+		value.b.rmii_50m_oe_2 = 1;
+	} else {
+		value.b.rmii_50m_oe_1 = 1;
+	}
+	writel(value.w, addr);
+}
 
 //------------------------------------------------------------
-void init_scu_macen (MAC_ENGINE *eng) 
+int mac_set_scan_boundary(MAC_ENGINE *p_eng)
 {
+	int32_t rx_cur, tx_cur;
+	int32_t rx_min, rx_max, tx_min, tx_max;
+	int32_t rx_scaling, tx_scaling;
 
 	nt_log_func_name();
 
-	Read_Reg_SCU_DD( 0x0c );//delay
-	Write_Reg_SCU_DD( 0x0c, eng->reg.SCU_00c_en );//Clock
-	Read_Reg_SCU_DD( 0x0c );//delay
+	/* get current delay setting */
+	mac_get_delay(p_eng, &rx_cur, &tx_cur);
+	
+	/* get physical boundaries */
+	mac_get_max_available_delay(p_eng, &rx_max, &tx_max);
+	mac_get_min_available_delay(p_eng, &rx_min, &tx_min);
 
-	Read_Reg_SCU_DD( 0x04 );//delay
-	Write_Reg_SCU_DD( 0x04, eng->reg.SCU_004_en );//Enable Engine
-	Read_Reg_SCU_DD( 0x04 );//delay
-} // End void init_scu_macen (MAC_ENGINE *eng)
-
-//------------------------------------------------------------
-void init_scu2 (MAC_ENGINE *eng) 
-{
-#ifdef SCU_74h
-  	nt_log_func_name();
-
-	Write_Reg_SCU_DD( 0x74, eng->reg.SCU_074 | SCU_74h );//PinMux
-  #ifdef Delay_SCU
-	DELAY( Delay_SCU );
-  #endif
-#endif
-} // End void init_scu2 (MAC_ENGINE *eng)
+	if ((p_eng->run.is_rgmii) && (p_eng->arg.ctrl.b.inv_rgmii_rxclk)) {
+		rx_max = (rx_max > 0) ? 0 : rx_max;
+	} else {
+		rx_min = (rx_min < 0) ? 0 : rx_min;
+	}
 
-//------------------------------------------------------------
-void init_scu3 (MAC_ENGINE *eng) 
-{
-#ifdef SCU_74h
-  	nt_log_func_name();
+	if (p_eng->run.TM_IOTiming) {
+		if (p_eng->arg.ctrl.b.full_range) {
+			tx_scaling = 0;
+			rx_scaling = 0;
+		} else {
+			/* down-scaling to save test time */
+			tx_scaling = TX_DELAY_SCALING;
+			rx_scaling = RX_DELAY_SCALING;
+		}
+		p_eng->io.rx_delay_scan.step = 1;
+		p_eng->io.tx_delay_scan.step = 1;
+		p_eng->io.rx_delay_scan.begin = rx_min >> rx_scaling;
+		p_eng->io.rx_delay_scan.end = rx_max >> rx_scaling;
+		p_eng->io.tx_delay_scan.begin = tx_min >> tx_scaling;
+		p_eng->io.tx_delay_scan.end = tx_max >> tx_scaling;
+	} else if (p_eng->run.delay_margin) {
+		p_eng->io.rx_delay_scan.step = 1;
+		p_eng->io.tx_delay_scan.step = 1;
+		p_eng->io.rx_delay_scan.begin = rx_cur - p_eng->run.delay_margin;
+		p_eng->io.rx_delay_scan.end = rx_cur + p_eng->run.delay_margin;
+		p_eng->io.tx_delay_scan.begin = tx_cur - p_eng->run.delay_margin;
+		p_eng->io.tx_delay_scan.end = tx_cur + p_eng->run.delay_margin;
+	} else {
+		p_eng->io.rx_delay_scan.step = 1;
+		p_eng->io.tx_delay_scan.step = 1;
+		p_eng->io.rx_delay_scan.begin = 0;
+		p_eng->io.rx_delay_scan.end = 0;
+		p_eng->io.tx_delay_scan.begin = 0;
+		p_eng->io.tx_delay_scan.end = 0;
+	}
+
+	/* backup current setting as the original for plotting result */
+	p_eng->io.rx_delay_scan.orig = rx_cur;
+	p_eng->io.tx_delay_scan.orig = tx_cur;
+
+	/* check if setting is legal or not */
+	if (p_eng->io.rx_delay_scan.begin < rx_min)
+		p_eng->io.rx_delay_scan.begin = rx_min;
+
+	if (p_eng->io.tx_delay_scan.begin < tx_min)
+		p_eng->io.tx_delay_scan.begin = tx_min;
+
+	if (p_eng->io.rx_delay_scan.end > rx_max)
+		p_eng->io.rx_delay_scan.end = rx_max;
+
+	if (p_eng->io.tx_delay_scan.end > tx_max)
+		p_eng->io.tx_delay_scan.end = tx_max;
+
+	if (p_eng->io.rx_delay_scan.begin > p_eng->io.rx_delay_scan.end)
+		p_eng->io.rx_delay_scan.begin = p_eng->io.rx_delay_scan.end;
+
+	if (p_eng->io.tx_delay_scan.begin > p_eng->io.tx_delay_scan.end)
+		p_eng->io.tx_delay_scan.begin = p_eng->io.tx_delay_scan.end;
+
+	if (p_eng->run.IO_MrgChk) {
+		if ((p_eng->io.rx_delay_scan.orig <
+		     p_eng->io.rx_delay_scan.begin) ||
+		    (p_eng->io.rx_delay_scan.orig >
+		     p_eng->io.rx_delay_scan.end)) {
+			printf("Warning: current delay is not in the "
+			       "scan-range\n");
+			printf("RX delay scan range:%d ~ %d, curr:%d\n",
+			       p_eng->io.rx_delay_scan.begin,
+			       p_eng->io.rx_delay_scan.end,
+			       p_eng->io.rx_delay_scan.orig);
+			printf("TX delay scan range:%d ~ %d, curr:%d\n",
+			       p_eng->io.tx_delay_scan.begin,
+			       p_eng->io.tx_delay_scan.end,
+			       p_eng->io.tx_delay_scan.orig);
+		}
+	}
 
-	Write_Reg_SCU_DD( 0x74, eng->reg.SCU_074 | (SCU_74h & 0xffefffff) );//PinMux
-  #ifdef Delay_SCU
-	DELAY( Delay_SCU );
-  #endif
-#endif
-} // End void init_scu3 (MAC_ENGINE *eng)
+	return (0);
+}
 
 //------------------------------------------------------------
 // MAC
 //------------------------------------------------------------
-void get_mac_info (MAC_ENGINE *eng) 
+void mac_set_addr(MAC_ENGINE *p_eng)
 {
-	nt_log_func_name();
+	nt_log_func_name();	
+	
+	uint32_t madr = p_eng->reg.mac_madr;
+	uint32_t ladr = p_eng->reg.mac_ladr;
 
-	//------------------------------
-	// [Inf]setup SA
-	//------------------------------
-	eng->reg.MAC_008 = Read_Reg_MAC_DD( eng, 0x08 );
-	eng->reg.MAC_00c = Read_Reg_MAC_DD( eng, 0x0c );
-	if (  (( eng->reg.MAC_008 == 0x0000 ) && ( eng->reg.MAC_00c == 0x00000000 ))
-	   || (( eng->reg.MAC_008 == 0xffff ) && ( eng->reg.MAC_00c == 0xffffffff ))
-	   )
-	{
-//		eng->reg.MAC_008 = 0x00000057;//MSB(0x00)
-//		eng->reg.MAC_00c = 0x89568838;//LSB(0x38)
-		eng->reg.MAC_008 = 0x0000000a;//MSB(0x00)
-		eng->reg.MAC_00c = 0xf7837dd4;//LSB(0xd4)
-	}
-
-#if defined( MELLANOX_CONNECTX_4 )
-	eng->reg.MAC_008 = 0x00000000;//MSB(0x00)  20170523
-	eng->reg.MAC_00c = 0x00000000;//LSB(0xd4)	20170523
-
-	Write_Reg_MAC_DD( eng, 0x08, eng->reg.MAC_008 ); // 20170523
-	Write_Reg_MAC_DD( eng, 0x0c, eng->reg.MAC_00c ); // 20170523
-#endif
-
-	eng->inf.SA[ 0 ] = ( eng->reg.MAC_008 >>  8 ) & 0xff;//MSB
-	eng->inf.SA[ 1 ] = ( eng->reg.MAC_008       ) & 0xff;
-	eng->inf.SA[ 2 ] = ( eng->reg.MAC_00c >> 24 ) & 0xff;
-	eng->inf.SA[ 3 ] = ( eng->reg.MAC_00c >> 16 ) & 0xff;
-	eng->inf.SA[ 4 ] = ( eng->reg.MAC_00c >>  8 ) & 0xff;
-	eng->inf.SA[ 5 ] = ( eng->reg.MAC_00c       ) & 0xff;//LSB
+	if (((madr == 0x0000) && (ladr == 0x00000000)) ||
+	    ((madr == 0xffff) && (ladr == 0xffffffff))) {
+		/* FIXME: shall use random gen */    
+		madr = 0x0000000a;
+		ladr = 0xf7837dd4;
+	}
 
-	//------------------------------
-	// [Reg]setup MAC_040_new
-	//------------------------------
-	eng->reg.MAC_040 = Read_Reg_MAC_DD( eng, 0x40 );
-	if ( eng->arg.GEn_MACLoopback )
-		eng->reg.MAC_040_new = eng->reg.MAC_040 | 0x40000000;
-	else
-		eng->reg.MAC_040_new = eng->reg.MAC_040;
+	p_eng->inf.SA[0] = (madr >> 8) & 0xff; // MSB
+	p_eng->inf.SA[1] = (madr >> 0) & 0xff;
+	p_eng->inf.SA[2] = (ladr >> 24) & 0xff;
+	p_eng->inf.SA[3] = (ladr >> 16) & 0xff;
+	p_eng->inf.SA[4] = (ladr >> 8) & 0xff;
+	p_eng->inf.SA[5] = (ladr >> 0) & 0xff; // LSB	
+}
 
-  #ifdef MAC_040_def
-	Write_Reg_MAC_DD( eng, 0x40, eng->reg.MAC_040_new | MAC_040_def );
-  #else
-	Write_Reg_MAC_DD( eng, 0x40, eng->reg.MAC_040_new );
-  #endif
+void mac_set_interal_loopback(MAC_ENGINE *p_eng)
+{
+	uint32_t reg = mac_reg_read(p_eng, 0x40);
+	mac_reg_write(p_eng, 0x40, reg | BIT(30)); 
 }
 
 //------------------------------------------------------------
@@ -886,218 +896,218 @@
 {
 	nt_log_func_name();
 
+	mac_cr_t maccr;	
+
 #ifdef Enable_MAC_SWRst
-	Write_Reg_MAC_DD( eng, 0x50, 0x80000000 | eng->reg.MAC_050_Speed );
+	maccr.w = 0;
+	maccr.b.sw_rst = 1;
+	mac_reg_write(eng, 0x50, maccr.w);
 
-	while (0x80000000 & Read_Reg_MAC_DD( eng, 0x50 )) {
-//printf(".");
-  #ifdef Delay_MACRst
-		DELAY( Delay_MACRst );
-  #endif
-	}
-  #ifdef Delay_MACRst
-	DELAY( Delay_MACRst );
-  #endif
+	do {
+		DELAY(Delay_MACRst);
+		maccr.w = mac_reg_read(eng, 0x50);
+	} while(maccr.b.sw_rst);
 #endif
 
-//	Write_Reg_MAC_DD( eng, 0x20, ( eng->run.TDES_BASE + CPU_BUS_ADDR_SDRAM_OFFSET ) ); // 20130730
-//	Write_Reg_MAC_DD( eng, 0x24, ( eng->run.RDES_BASE + CPU_BUS_ADDR_SDRAM_OFFSET ) ); // 20130730
-	Write_Reg_MAC_DD( eng, 0x20, AT_MEMRW_BUF( eng->run.TDES_BASE ) ); // 20130730
-	Write_Reg_MAC_DD( eng, 0x24, AT_MEMRW_BUF( eng->run.RDES_BASE ) ); // 20130730
+	mac_reg_write(eng, 0x20, eng->run.tdes_base - ASPEED_DRAM_BASE);
+	mac_reg_write(eng, 0x24, eng->run.rdes_base - ASPEED_DRAM_BASE);
 
-	Write_Reg_MAC_DD( eng, 0x08, eng->reg.MAC_008 );
-	Write_Reg_MAC_DD( eng, 0x0c, eng->reg.MAC_00c );
+	mac_reg_write(eng, 0x08, eng->reg.mac_madr);
+	mac_reg_write(eng, 0x0c, eng->reg.mac_ladr);
 
 #ifdef MAC_030_def
-	Write_Reg_MAC_DD( eng, 0x30, MAC_030_def );//Int Thr/Cnt
+	mac_reg_write( eng, 0x30, MAC_030_def );//Int Thr/Cnt
 #endif
 #ifdef MAC_034_def
-	Write_Reg_MAC_DD( eng, 0x34, MAC_034_def );//Poll Cnt
+	mac_reg_write( eng, 0x34, MAC_034_def );//Poll Cnt
 #endif
 #ifdef MAC_038_def
-	Write_Reg_MAC_DD( eng, 0x38, MAC_038_def );
+	mac_reg_write( eng, 0x38, MAC_038_def );
 #endif
 #ifdef MAC_048_def
-	Write_Reg_MAC_DD( eng, 0x48, MAC_048_def );
+	mac_reg_write( eng, 0x48, MAC_048_def );
 #endif
 #ifdef MAC_058_def
-	Write_Reg_MAC_DD( eng, 0x58, MAC_058_def );
+	mac_reg_write( eng, 0x58, MAC_058_def );
 #endif
 
-	if ( eng->ModeSwitch == MODE_NSCI )
-		Write_Reg_MAC_DD( eng, 0x4c, NCSI_RxDMA_PakSize );
+	if ( eng->arg.run_mode == MODE_NCSI )
+		mac_reg_write( eng, 0x4c, NCSI_RxDMA_PakSize );
 	else
-		Write_Reg_MAC_DD( eng, 0x4c, DMA_PakSize );
+		mac_reg_write( eng, 0x4c, DMA_PakSize );
 
-	Write_Reg_MAC_DD( eng, 0x50, eng->reg.MAC_050_Speed );
-#ifdef Delay_MACRst
+	maccr.b.txdma_en = 1;
+	maccr.b.rxdma_en = 1;
+	maccr.b.txmac_en = 1;
+	maccr.b.rxmac_en = 1;
+	maccr.b.fulldup = 1;
+	maccr.b.crc_apd = 1;
+
+	if (eng->run.speed_sel[0]) {
+		maccr.b.gmac_mode = 1;
+	} else if (eng->run.speed_sel[1]) {
+		maccr.b.speed_100 = 1;
+	}
+
+	if (eng->arg.run_mode == MODE_NCSI) {
+		maccr.b.rx_broadpkt_en = 1;
+		maccr.b.speed_100 = 1;
+	}
+	else {
+		maccr.b.rx_alladr = 1;
+#ifdef Enable_Runt
+		maccr.b.rx_runt = 1;
 #endif
-	DELAY( Delay_MACRst );
+	}
+	mac_reg_write(eng, 0x50, maccr.w);
+	DELAY(Delay_MACRst);
 } // End void init_mac (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
 // Basic
 //------------------------------------------------------------
-void FPri_RegValue (MAC_ENGINE *eng, BYTE option) 
+void FPri_RegValue (MAC_ENGINE *eng, uint8_t option) 
 {
 	nt_log_func_name();
 
-	PRINTF( option, "[SDR] Date:%08x\n", Read_Reg_SDR_DD( 0x88 ) );
-	PRINTF( option, "[SDR]  80:%08x %08x %08x %08x\n", Read_Reg_SDR_DD( 0x80 ), Read_Reg_SDR_DD( 0x84 ), Read_Reg_SDR_DD( 0x88 ), Read_Reg_SDR_DD( 0x8c ) );
+	PRINTF( option, "[SRAM] Date:%08x\n", SRAM_RD( 0x88 ) );
+	PRINTF( option, "[SRAM]  80:%08x %08x %08x %08x\n", SRAM_RD( 0x80 ), SRAM_RD( 0x84 ), SRAM_RD( 0x88 ), SRAM_RD( 0x8c ) );
+	
+	PRINTF( option, "[SCU]  a0:%08x  a4:%08x  b8:%08x  bc:%08x\n", SCU_RD( 0x0a0 ), SCU_RD( 0x0a4 ), SCU_RD( 0x0b8 ), SCU_RD( 0x0bc ));
 
-	PRINTF( option, "[SCU]  04:%08x  08:%08x  0c:%08x\n",           eng->reg.SCU_004, eng->reg.SCU_008, eng->reg.SCU_00c );
-	PRINTF( option, "[SCU]  1c:%08x  2c:%08x  48:%08x  4c:%08x\n", Read_Reg_SCU_DD( 0x01c ), Read_Reg_SCU_DD( 0x02c ), eng->reg.SCU_048, Read_Reg_SCU_DD( 0x04c ) );
-	PRINTF( option, "[SCU]  70:%08x  74:%08x  7c:%08x  f0:%08x\n", eng->reg.SCU_070, eng->reg.SCU_074, eng->reg.SCU_07c, eng->reg.SCU_0f0 );
-	PRINTF( option, "[SCU]  80:%08x  88:%08x  90:%08x  9c:%08x\n", eng->reg.SCU_080, eng->reg.SCU_088, eng->reg.SCU_090, eng->reg.SCU_09c );
-	PRINTF( option, "[SCU]  a0:%08x  a4:%08x  b8:%08x  bc:%08x\n", Read_Reg_SCU_DD( 0x0a0 ), Read_Reg_SCU_DD( 0x0a4 ), eng->reg.SCU_0b8, eng->reg.SCU_0bc );
-
-	PRINTF( option, "[SCU] 13c:%08x 140:%08x 144:%08x 1dc:%08x\n", Read_Reg_SCU_DD( 0x13c ), Read_Reg_SCU_DD( 0x140 ), Read_Reg_SCU_DD( 0x144 ), Read_Reg_SCU_DD( 0x1dc ) );
+	PRINTF( option, "[SCU] 13c:%08x 140:%08x 144:%08x 1dc:%08x\n", SCU_RD( 0x13c ), SCU_RD( 0x140 ), SCU_RD( 0x144 ), SCU_RD( 0x1dc ) );
 	PRINTF( option, "[WDT]  0c:%08x  2c:%08x  4c:%08x\n", eng->reg.WDT_00c, eng->reg.WDT_02c, eng->reg.WDT_04c );
-	PRINTF( option, "[MAC]  08:%08x  0c:%08x\n", eng->reg.MAC_008, eng->reg.MAC_00c );
-	PRINTF( option, "[MAC]  A0|%08x %08x %08x %08x\n", Read_Reg_MAC_DD( eng, 0xa0 ), Read_Reg_MAC_DD( eng, 0xa4 ), Read_Reg_MAC_DD( eng, 0xa8 ), Read_Reg_MAC_DD( eng, 0xac ) );
-	PRINTF( option, "[MAC]  B0|%08x %08x %08x %08x\n", Read_Reg_MAC_DD( eng, 0xb0 ), Read_Reg_MAC_DD( eng, 0xb4 ), Read_Reg_MAC_DD( eng, 0xb8 ), Read_Reg_MAC_DD( eng, 0xbc ) );
-	PRINTF( option, "[MAC]  C0|%08x %08x %08x\n",       Read_Reg_MAC_DD( eng, 0xc0 ), Read_Reg_MAC_DD( eng, 0xc4 ), Read_Reg_MAC_DD( eng, 0xc8 ) );
+	PRINTF( option, "[MAC]  A0|%08x %08x %08x %08x\n", mac_reg_read( eng, 0xa0 ), mac_reg_read( eng, 0xa4 ), mac_reg_read( eng, 0xa8 ), mac_reg_read( eng, 0xac ) );
+	PRINTF( option, "[MAC]  B0|%08x %08x %08x %08x\n", mac_reg_read( eng, 0xb0 ), mac_reg_read( eng, 0xb4 ), mac_reg_read( eng, 0xb8 ), mac_reg_read( eng, 0xbc ) );
+	PRINTF( option, "[MAC]  C0|%08x %08x %08x\n",       mac_reg_read( eng, 0xc0 ), mac_reg_read( eng, 0xc4 ), mac_reg_read( eng, 0xc8 ) );
 
-} // End void FPri_RegValue (MAC_ENGINE *eng, BYTE *fp)
+} // End void FPri_RegValue (MAC_ENGINE *eng, uint8_t *fp)
 
 //------------------------------------------------------------
-void FPri_End (MAC_ENGINE *eng, BYTE option) 
+void FPri_End (MAC_ENGINE *eng, uint8_t option) 
 {
 	nt_log_func_name();
-	if ( eng->env.MAC_RMII && ( eng->phy.RMIICK_IOMode != 0 ) && eng->run.IO_MrgChk && eng->flg.AllFail ) {
-		if ( eng->arg.GEn_RMIIPHY_IN == 0 ) {
+	if ((0 == eng->run.is_rgmii) && ( eng->phy.RMIICK_IOMode != 0 ) && eng->run.IO_MrgChk && eng->flg.all_fail ) {
+		if ( eng->arg.ctrl.b.rmii_phy_in == 0 ) {
 			PRINTF( option, "\n\n\n\n\n\n[Info] The PHY's RMII reference clock pin is setting to the OUTPUT mode now.\n" );
-			PRINTF( option, "       Maybe you can run the INPUT mode command \"mactest  %d %d %d %d %d %d %d\".\n\n\n\n", eng->arg.GRun_Mode, eng->arg.GSpeed, (eng->arg.GCtrl | 0x80), eng->arg.GLOOP_MAX, eng->arg.GTestMode, eng->arg.GPHYADR, eng->arg.GChk_TimingBund );
+			PRINTF( option, "       Maybe you can run the INPUT mode command \"mactest  %d %d %d %d %d %d %d\".\n\n\n\n", eng->arg.mac_idx, eng->arg.run_speed, (eng->arg.ctrl.w | 0x80), eng->arg.loop_max, eng->arg.test_mode, eng->arg.phy_addr, eng->arg.delay_scan_range );
 		}
 		else {
 			PRINTF( option, "\n\n\n\n\n\n[Info] The PHY's RMII reference clock pin is setting to the INPUT mode now.\n" );
-			PRINTF( option, "       Maybe you can run the OUTPUT mode command \"mactest  %d %d %d %d %d %d %d\".\n\n\n\n", eng->arg.GRun_Mode, eng->arg.GSpeed, (eng->arg.GCtrl & 0x7f), eng->arg.GLOOP_MAX, eng->arg.GTestMode, eng->arg.GPHYADR, eng->arg.GChk_TimingBund );
+			PRINTF( option, "       Maybe you can run the OUTPUT mode command \"mactest  %d %d %d %d %d %d %d\".\n\n\n\n", eng->arg.mac_idx, eng->arg.run_speed, (eng->arg.ctrl.w & 0x7f), eng->arg.loop_max, eng->arg.test_mode, eng->arg.phy_addr, eng->arg.delay_scan_range );
 		}
-	} // End if ( eng->env.MAC_RMII && ( eng->phy.RMIICK_IOMode != 0 ) && eng->run.IO_MrgChk && eng->flg.AllFail )
+	} // End if ( eng->env.MAC_RMII && ( eng->phy.RMIICK_IOMode != 0 ) && eng->run.IO_MrgChk && eng->flg.all_fail )
 
-	if ( !eng->run.TM_RxDataEn ) {
-	}
-	else if ( eng->flg.Err_Flag ) {
-		PRINTF( option, "                    \n----> fail !!!\n" );
-	}
-	else {
-		PRINTF( option, "                    \n----> All Pass !!!\n" );
+	if (!eng->run.TM_RxDataEn) {
+	} else if (eng->flg.Err_Flag) {
+		PRINTF(option, "                    \n----> fail !!!\n");
+	} else {
+		PRINTF(option, "                    \n----> All Pass !!!\n");
 	}
 
 	//------------------------------
 	//[Warning] PHY Address
 	//------------------------------
-	if ( eng->ModeSwitch == MODE_DEDICATED ) {
-		if ( eng->arg.GPHYADR != eng->phy.Adr )
-			PRINTF( option, "\n[Warning] PHY Address change from %d to %d !!!\n", eng->arg.GPHYADR, eng->phy.Adr );
-	}
-
-	if ( eng->env.AST2300 ) {
-		//------------------------------
-		//[Warning] IO Strength
-		//------------------------------
-		if ( eng->io.init_done && eng->io.Str_reg_value ) {
-			PRINTF( option, "\n[Warning] SCU%02X[%2d:%2d] == 0x%02x is not the suggestion value 0.\n", eng->io.Str_reg_idx, eng->io.Str_reg_Hbit, eng->io.Str_reg_Lbit, eng->io.Str_reg_value );
-			PRINTF( option, "          This change at this platform must been proven again by the ASPEED.\n" );
-		}
-
-		//------------------------------
-		//[Warning] IO Timing
- 		//------------------------------
-		if ( ( eng->reg.SCU_048_check != eng->reg.SCU_048_default ) ) {
-			PRINTF( option, "\n[Warning] SCU48 == 0x%08x is not the suggestion value 0x%08x.\n", eng->reg.SCU_048, eng->reg.SCU_048_default );
-			PRINTF( option, "          This change at this platform must been proven again by the ASPEED.\n" );
-		}
-		if ( eng->env.AST2500A1 ) {
-			if ( ( eng->reg.SCU_0b8 != SCU_B8h_AST2500 ) ) {
-				PRINTF( option, "\n[Warning] SCUB8 == 0x%08x is not the suggestion value 0x%08x.\n", eng->reg.SCU_0b8, SCU_B8h_AST2500 );
-				PRINTF( option, "          This change at this platform must been proven again by the ASPEED.\n" );
-			}
-			if ( ( eng->reg.SCU_0bc != SCU_BCh_AST2500 ) ) {
-				PRINTF( option, "\n[Warning] SCUBC == 0x%08x is not the suggestion value 0x%08x.\n", eng->reg.SCU_0bc, SCU_BCh_AST2500 );
-				PRINTF( option, "          This change at this platform must been proven again by the ASPEED.\n" );
-			}
-		}
-	} // End if ( eng->env.AST2300 )
+	if ( eng->arg.run_mode == MODE_DEDICATED ) {
+		if ( eng->arg.phy_addr != eng->phy.Adr )
+			PRINTF( option, "\n[Warning] PHY Address change from %d to %d !!!\n", eng->arg.phy_addr, eng->phy.Adr );
+	}
+
+	//------------------------------
+	//[Warning] IO Strength
+	//------------------------------
+#ifdef CONFIG_ASPEED_AST2600
+	if (eng->io.init_done && (eng->io.mac34_drv_reg.value.w != 0xa)) {
+		PRINTF(option,
+		       "\n[Warning] [%08X] 0x%08x is not the suggestion value "
+		       "0xa.\n",
+		       eng->io.mac34_drv_reg.addr,
+		       eng->io.mac34_drv_reg.value.w);
+#else
+	if (eng->io.init_done && eng->io.mac12_drv_reg.value.w) {
+		PRINTF(option,
+		       "\n[Warning] [%08X] 0x%08x is not the suggestion value "
+		       "0.\n",
+		       eng->io.mac12_drv_reg.addr,
+		       eng->io.mac12_drv_reg.value.w);
+#endif	
+		PRINTF(option, "          This change at this platform must "
+			       "been proven again by the ASPEED.\n");
+	}
 
-	if ( eng->ModeSwitch == MODE_NSCI ) {
-		PRINTF( option, "\n[Arg] %d %d %d %d %d %d %d (%s){%d}\n", eng->arg.GRun_Mode, eng->arg.GPackageTolNum, eng->arg.GChannelTolNum, eng->arg.GTestMode, eng->arg.GChk_TimingBund, eng->arg.GCtrl, eng->arg.GARPNumCnt, eng->env.ASTChipName, TIME_OUT_NCSI );
+	//------------------------------
+	//[Warning] IO Timing
+	//------------------------------
+	if ( eng->arg.run_mode == MODE_NCSI ) {
+		PRINTF( option, "\n[Arg] %d %d %d %d %d %d %d {%d}\n", eng->arg.mac_idx, eng->arg.GPackageTolNum, eng->arg.GChannelTolNum, eng->arg.test_mode, eng->arg.delay_scan_range, eng->arg.ctrl.w, eng->arg.GARPNumCnt, TIME_OUT_NCSI );
 
 		switch ( eng->ncsi_cap.PCI_DID_VID ) {
-			case PCI_DID_VID_Intel_82574L             : { PRINTF( option, "[NC]%08x %08x: Intel 82574L       \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82575_10d6         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82575_10a7         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82575_10a9         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_10c9         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_10e6         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_10e7         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_10e8         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_1518         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_1526         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_150a         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82576_150d         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82599_10fb         : { PRINTF( option, "[NC]%08x %08x: Intel 82599        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_82599_1557         : { PRINTF( option, "[NC]%08x %08x: Intel 82599        \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_I210_1533          : { PRINTF( option, "[NC]%08x %08x: Intel I210         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_I210_1537          : { PRINTF( option, "[NC]%08x %08x: Intel I210         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_I350_1521          : { PRINTF( option, "[NC]%08x %08x: Intel I350         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_I350_1523          : { PRINTF( option, "[NC]%08x %08x: Intel I350         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_X540               : { PRINTF( option, "[NC]%08x %08x: Intel X540         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_X550               : { PRINTF( option, "[NC]%08x %08x: Intel X550         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_Broadwell_DE       : { PRINTF( option, "[NC]%08x %08x: Intel Broadwell-DE \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Intel_X722_37d0          : { PRINTF( option, "[NC]%08x %08x: Intel X722         \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM5718         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5718   \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM5719         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5719   \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM5720         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5720   \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM5725         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5725   \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM57810S       : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM57810S \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_Cumulus         : { PRINTF( option, "[NC]%08x %08x: Broadcom Cumulus   \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM57302        : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM57302  \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Broadcom_BCM957452       : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM957452 \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Mellanox_ConnectX_3_1003 : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-3\n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Mellanox_ConnectX_3_1007 : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-3\n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			case PCI_DID_VID_Mellanox_ConnectX_4      : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-4\n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82574L             : { PRINTF( option, "[NC]%08x %08x: Intel 82574L       \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82575_10d6         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82575_10a7         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82575_10a9         : { PRINTF( option, "[NC]%08x %08x: Intel 82575        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_10c9         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_10e6         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_10e7         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_10e8         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_1518         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_1526         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_150a         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82576_150d         : { PRINTF( option, "[NC]%08x %08x: Intel 82576        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82599_10fb         : { PRINTF( option, "[NC]%08x %08x: Intel 82599        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_82599_1557         : { PRINTF( option, "[NC]%08x %08x: Intel 82599        \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_I210_1533          : { PRINTF( option, "[NC]%08x %08x: Intel I210         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_I210_1537          : { PRINTF( option, "[NC]%08x %08x: Intel I210         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_I350_1521          : { PRINTF( option, "[NC]%08x %08x: Intel I350         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_I350_1523          : { PRINTF( option, "[NC]%08x %08x: Intel I350         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_X540               : { PRINTF( option, "[NC]%08x %08x: Intel X540         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_X550               : { PRINTF( option, "[NC]%08x %08x: Intel X550         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_Broadwell_DE       : { PRINTF( option, "[NC]%08x %08x: Intel Broadwell-DE \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Intel_X722_37d0          : { PRINTF( option, "[NC]%08x %08x: Intel X722         \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM5718         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5718   \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM5719         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5719   \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM5720         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5720   \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM5725         : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM5725   \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM57810S       : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM57810S \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_Cumulus         : { PRINTF( option, "[NC]%08x %08x: Broadcom Cumulus   \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM57302        : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM57302  \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Broadcom_BCM957452       : { PRINTF( option, "[NC]%08x %08x: Broadcom BCM957452 \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Mellanox_ConnectX_3_1003 : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-3\n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Mellanox_ConnectX_3_1007 : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-3\n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			case PCI_DID_VID_Mellanox_ConnectX_4      : { PRINTF( option, "[NC]%08x %08x: Mellanox ConnectX-4\n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
 			default:
-			switch ( eng->ncsi_cap.ManufacturerID ) {
-				case ManufacturerID_Intel    : { PRINTF( option, "[NC]%08x %08x: Intel              \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-				case ManufacturerID_Broadcom : { PRINTF( option, "[NC]%08x %08x: Broadcom           \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-				case ManufacturerID_Mellanox : { PRINTF( option, "[NC]%08x %08x: Mellanox           \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-				case ManufacturerID_Mellanox1: { PRINTF( option, "[NC]%08x %08x: Mellanox           \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-				case ManufacturerID_Emulex   : { PRINTF( option, "[NC]%08x %08x: Emulex             \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-				default                      : { PRINTF( option, "[NC]%08x %08x                     \n", eng->ncsi_cap.ManufacturerID, eng->ncsi_cap.PCI_DID_VID ); break; }
-			} // End switch ( eng->ncsi_cap.ManufacturerID )
+			switch ( eng->ncsi_cap.manufacturer_id ) {
+				case ManufacturerID_Intel    : { PRINTF( option, "[NC]%08x %08x: Intel              \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+				case ManufacturerID_Broadcom : { PRINTF( option, "[NC]%08x %08x: Broadcom           \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+				case ManufacturerID_Mellanox : { PRINTF( option, "[NC]%08x %08x: Mellanox           \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+				case ManufacturerID_Mellanox1: { PRINTF( option, "[NC]%08x %08x: Mellanox           \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+				case ManufacturerID_Emulex   : { PRINTF( option, "[NC]%08x %08x: Emulex             \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+				default                      : { PRINTF( option, "[NC]%08x %08x                     \n", eng->ncsi_cap.manufacturer_id, eng->ncsi_cap.PCI_DID_VID ); break; }
+			} // End switch ( eng->ncsi_cap.manufacturer_id )
 		} // End switch ( eng->ncsi_cap.PCI_DID_VID )
 	}
 	else {
-		if (eng->arg.GLOOP_INFINI) {
-			PRINTF( option, "\n[Arg] %d %d %d # %d %d %d %x (%s){%d x:%d %d %d}[%d %d %d] %d\n"  , eng->arg.GRun_Mode, eng->arg.GSpeed, eng->arg.GCtrl,                     eng->arg.GTestMode, eng->arg.GPHYADR, eng->arg.GChk_TimingBund, eng->arg.GUserDVal, eng->env.ASTChipName, eng->run.TIME_OUT_Des_PHYRatio, TIME_OUT_Des_1G, TIME_OUT_Des_100M, TIME_OUT_Des_10M, eng->run.Loop_rl[0], eng->run.Loop_rl[1], eng->run.Loop_rl[2], eng->dat.Des_Num );
-		}
-		else {
-			PRINTF( option, "\n[Arg] %d %d %d %d %d %d %d %x (%s){%d x:%d %d %d}[%d %d %d] %d\n", eng->arg.GRun_Mode, eng->arg.GSpeed, eng->arg.GCtrl, eng->arg.GLOOP_MAX, eng->arg.GTestMode, eng->arg.GPHYADR, eng->arg.GChk_TimingBund, eng->arg.GUserDVal, eng->env.ASTChipName, eng->run.TIME_OUT_Des_PHYRatio, TIME_OUT_Des_1G, TIME_OUT_Des_100M, TIME_OUT_Des_10M, eng->run.Loop_rl[0], eng->run.Loop_rl[1], eng->run.Loop_rl[2], eng->dat.Des_Num );
-		}
+		PRINTF( option, "[PHY] Adr:%d ID2:%04x ID3:%04x (%s)\n", eng->phy.Adr, eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
+	} // End if ( eng->arg.run_mode == MODE_NCSI )
 
-		PRINTF( option, "[PHY] Adr:%d ID2:%04x ID3:%04x (%s)\n", eng->phy.Adr, eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName );
-	} // End if ( eng->ModeSwitch == MODE_NSCI )
 
-#ifdef SUPPORT_PHY_LAN9303
-	PRINTF ( option, "[Ver II] %s (for LAN9303 with I2C%d)\n", version_name, LAN9303_I2C_BUSNUM );
-#else
 	PRINTF( option, "[Ver II] %s\n", version_name );
-#endif
-} // End void FPri_End (MAC_ENGINE *eng, BYTE option)
+} // End void FPri_End (MAC_ENGINE *eng, uint8_t option)
 
 //------------------------------------------------------------
-void FPri_ErrFlag (MAC_ENGINE *eng, BYTE option) 
+void FPri_ErrFlag (MAC_ENGINE *eng, uint8_t option) 
 {
 	nt_log_func_name();
-	if ( eng->flg.Flag_PrintEn ) {
+	if ( eng->flg.print_en ) {
 		if ( eng->flg.Wrn_Flag ) {
 			if ( eng->flg.Wrn_Flag & Wrn_Flag_IOMarginOUF ) {
-				PRINTF( option, "[Warning] IO timing testing range out of boundary\n" );
-				if ( eng->env.MAC_RMII ) {
+				PRINTF(option, "[Warning] IO timing testing "
+					       "range out of boundary\n");
+
+				if (0 == eng->run.is_rgmii) {
 					PRINTF( option, "      (reg:%d,%d) %dx1(%d~%d,%d)\n", eng->io.Dly_in_reg_idx,
 											      eng->io.Dly_out_reg_idx,
-											      eng->run.IO_Bund,
+											      eng->run.delay_margin,
 											      eng->io.Dly_in_min,
 											      eng->io.Dly_in_max,
 											      eng->io.Dly_out_min );
@@ -1105,8 +1115,8 @@
 				else {
 					PRINTF( option, "      (reg:%d,%d) %dx%d(%d~%d,%d~%d)\n", eng->io.Dly_in_reg_idx,
 												  eng->io.Dly_out_reg_idx,
-												  eng->run.IO_Bund,
-												  eng->run.IO_Bund,
+												  eng->run.delay_margin,
+												  eng->run.delay_margin,
 												  eng->io.Dly_in_min,
 												  eng->io.Dly_in_max,
 												  eng->io.Dly_out_min,
@@ -1144,7 +1154,7 @@
 
 			if ( eng->flg.Err_Flag & Err_Flag_MHCLK_Ratio             ) {
 				PRINTF( option, "[Err] Error setting of MAC AHB bus clock (SCU08[18:16])      \n" );
-				if ( eng->env.MAC_atlast_1Gvld )
+				if ( eng->env.at_least_1g_valid )
 					{ PRINTF( option, "      SCU08[18:16] == 0x%01x is not the suggestion value 2.\n", eng->env.MHCLK_Ratio ); }
 				else
 					{ PRINTF( option, "      SCU08[18:16] == 0x%01x is not the suggestion value 4.\n", eng->env.MHCLK_Ratio ); }
@@ -1152,10 +1162,10 @@
 
 			if ( eng->flg.Err_Flag & Err_Flag_IOMarginOUF ) {
 				PRINTF( option, "[Err] IO timing testing range out of boundary\n");
-				if ( eng->env.MAC_RMII ) {
+				if (0 == eng->run.is_rgmii) {
 					PRINTF( option, "      (reg:%d,%d) %dx1(%d~%d,%d)\n", eng->io.Dly_in_reg_idx,
 											      eng->io.Dly_out_reg_idx,
-											      eng->run.IO_Bund,
+											      eng->run.delay_margin,
 											      eng->io.Dly_in_min,
 											      eng->io.Dly_in_max,
 											      eng->io.Dly_out_min );
@@ -1163,8 +1173,8 @@
 				else {
 					PRINTF( option, "      (reg:%d,%d) %dx%d(%d~%d,%d~%d)\n", eng->io.Dly_in_reg_idx,
 												  eng->io.Dly_out_reg_idx,
-												  eng->run.IO_Bund,
-												  eng->run.IO_Bund,
+												  eng->run.delay_margin,
+												  eng->run.delay_margin,
 												  eng->io.Dly_in_min,
 												  eng->io.Dly_in_max,
 												  eng->io.Dly_out_min,
@@ -1187,30 +1197,18 @@
 
 			if ( eng->flg.Err_Flag & Err_Flag_MACMode ) {
 				PRINTF( option, "[Err] MAC interface mode mismatch\n" );
-
-				if ( eng->env.AST2300 ) {
-					switch ( eng->env.MAC_Mode ) {
-						case 0 : { PRINTF( option, "      SCU70h[7:6] == 0: [MAC#1] RMII   [MAC#2] RMII \n" ); break; }
-						case 1 : { PRINTF( option, "      SCU70h[7:6] == 1: [MAC#1] RGMII  [MAC#2] RMII \n" ); break; }
-						case 2 : { PRINTF( option, "      SCU70h[7:6] == 2: [MAC#1] RMII   [MAC#2] RGMII\n" ); break; }
-						case 3 : { PRINTF( option, "      SCU70h[7:6] == 3: [MAC#1] RGMII  [MAC#2] RGMII\n" ); break; }
+				for (int i = 0; i < 4; i++) {
+					if (eng->env.is_1g_valid[i]) {
+						PRINTF(option,
+						       "[MAC%d] is RGMII\n", i);
+					} else {
+						PRINTF(option,
+						       "[MAC%d] RMII\n", i);
 					}
 				}
-				else {
-					switch ( eng->env.MAC_Mode ) {
-						case 0 : { PRINTF( option, "      SCU70h[8:6] == 000: [MAC#1] GMII               \n" ); break; }
-						case 1 : { PRINTF( option, "      SCU70h[8:6] == 001: [MAC#1] MII    [MAC#2] MII \n" ); break; }
-						case 2 : { PRINTF( option, "      SCU70h[8:6] == 010: [MAC#1] RMII   [MAC#2] MII \n" ); break; }
-						case 3 : { PRINTF( option, "      SCU70h[8:6] == 011: [MAC#1] MII                \n" ); break; }
-						case 4 : { PRINTF( option, "      SCU70h[8:6] == 100: [MAC#1] RMII               \n" ); break; }
-						case 5 : { PRINTF( option, "      SCU70h[8:6] == 101: Reserved                   \n" ); break; }
-						case 6 : { PRINTF( option, "      SCU70h[8:6] == 110: [MAC#1] RMII   [MAC#2] RMII\n" ); break; }
-						case 7 : { PRINTF( option, "      SCU70h[8:6] == 111: Disable MAC                \n" ); break; }
-					}
-				} // End if ( eng->env.AST2300 )
 			} // End if ( eng->flg.Err_Flag & Err_Flag_MACMode )
 
-			if ( eng->ModeSwitch == MODE_NSCI ) {
+			if ( eng->arg.run_mode == MODE_NCSI ) {
 				if ( eng->flg.Err_Flag & Err_Flag_NCSI_LinkFail ) {
 					PRINTF( option, "[Err] NCSI packet retry number over flows when find channel\n" );
 
@@ -1231,125 +1229,34 @@
 
 				if ( eng->flg.Err_Flag & Err_Flag_NCSI_Channel_Num ) { PRINTF( option, "[NCSI] Channel number expected: %d, real: %d\n", eng->arg.GChannelTolNum, eng->dat.number_chl ); }
 				if ( eng->flg.Err_Flag & Err_Flag_NCSI_Package_Num ) { PRINTF( option, "[NCSI] Peckage number expected: %d, real: %d\n", eng->arg.GPackageTolNum, eng->dat.number_pak ); }
-			} // End if ( eng->ModeSwitch == MODE_NSCI )
+			} // End if ( eng->arg.run_mode == MODE_NCSI )
 		} // End if ( eng->flg.Err_Flag )
-	} // End if ( eng->flg.Flag_PrintEn )
-} // End void FPri_ErrFlag (MAC_ENGINE *eng, BYTE option)
+	} // End if ( eng->flg.print_en )
+} // End void FPri_ErrFlag (MAC_ENGINE *eng, uint8_t option)
 
 //------------------------------------------------------------
-void Finish_Close (MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-#ifdef Enable_RecovSCU
-	if ( eng->reg.SCU_oldvld )
-		recov_scu( eng );
-#endif
-
-} // End void Finish_Close (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
-char Finish_Check (MAC_ENGINE *eng, int value) 
+int FindErr (MAC_ENGINE *p_eng, int value) 
 {
-#if defined(CONFIG_ASPEED_AST2500)
-	uint32_t   reg;
-	BYTE    shift_value = 0;
-#endif
-	nt_log_func_name();
-
-#ifdef Disable_VGA
-	if ( eng->env.VGAModeVld ) {
-		outp(0x3d4, 0x17);
-		outp(0x3d5, eng->env.VGAMode);
-	}
-#endif
-
-	if ( eng->ModeSwitch ==  MODE_DEDICATED ) {
-		if ( eng->dat.FRAME_LEN )
-			free( eng->dat.FRAME_LEN );
-
-		if ( eng->dat.wp_lst )
-			free( eng->dat.wp_lst );
-	}
-
-	eng->flg.Err_Flag = eng->flg.Err_Flag | value;
-
-	if ( DbgPrn_ErrFlg )
-		printf("\nErr_Flag: [%08x]\n", eng->flg.Err_Flag);
-
-	if ( !eng->run.TM_Burst )
-		FPri_ErrFlag( eng, FP_LOG );
-
-	if ( eng->run.TM_IOTiming )
-		FPri_ErrFlag( eng, FP_IO );
-
-	FPri_ErrFlag( eng, STD_OUT );
-
-	if ( !eng->run.TM_Burst )
-		FPri_End( eng, FP_LOG );
-
-	if ( eng->run.TM_IOTiming )
-		FPri_End( eng, FP_IO );
-
-	FPri_End( eng, STD_OUT );
-
-
-	if ( !eng->run.TM_Burst )
-		FPri_RegValue( eng, FP_LOG );
-	if ( eng->run.TM_IOTiming )
-		FPri_RegValue( eng, FP_IO  );
-#ifdef PHY_SPECIAL
-	if ( !eng->run.TM_Burst )
-		special_PHY_debug( eng );
-#endif
-
-	Finish_Close( eng );
+	p_eng->flg.Err_Flag = p_eng->flg.Err_Flag | value;
 
-#if defined(CONFIG_ASPEED_AST2500)
-	reg = Read_Reg_SCU_DD( 0x40 );
-	if ( eng->ModeSwitch == MODE_DEDICATED )
-		shift_value = 18 + eng->run.MAC_idx;
-	else
-		shift_value = 16 + eng->run.MAC_idx;
-#endif
-
-	if ( eng->flg.Err_Flag )
-	{
-		// Fail
-#if defined(CONFIG_ASPEED_AST2500)
-		reg = reg & ~( 1 << shift_value );
-		Write_Reg_SCU_DD( 0x40, reg );
-#endif
-		return( 1 );
-	}
-	else
-	{
-		// PASS
-#if defined(CONFIG_ASPEED_AST2500)
-		reg |= ( 1 << shift_value );
-		Write_Reg_SCU_DD( 0x40, reg );
-#endif
-		return( 0 );
-	}
-} // End char Finish_Check (MAC_ENGINE *eng, int value)
-
-//------------------------------------------------------------
-int FindErr (MAC_ENGINE *eng, int value) {
-	eng->flg.Err_Flag = eng->flg.Err_Flag | value;
-
-	if ( DbgPrn_ErrFlg )
-		printf("\nErr_Flag: [%08x]\n", eng->flg.Err_Flag);
+	if (DbgPrn_ErrFlg)
+		printf("\nErr_Flag: [%08x]\n", p_eng->flg.Err_Flag);
 
-	return(1);
+	return (1);
 }
 
 //------------------------------------------------------------
-int FindErr_Des (MAC_ENGINE *eng, int value) {
-	eng->flg.Err_Flag = eng->flg.Err_Flag | Err_Flag_Check_Des;
-	eng->flg.Des_Flag = eng->flg.Des_Flag | value;
-	if ( DbgPrn_ErrFlg )
-		printf("\nErr_Flag: [%08x] Des_Flag: [%08x]\n", eng->flg.Err_Flag, eng->flg.Des_Flag);
+int FindErr_Des (MAC_ENGINE *p_eng, int value) 
+{
+	p_eng->flg.Err_Flag = p_eng->flg.Err_Flag | Err_Flag_Check_Des;
+	p_eng->flg.Des_Flag = p_eng->flg.Des_Flag | value;
+	if (DbgPrn_ErrFlg)
+		printf("\nErr_Flag: [%08x] Des_Flag: [%08x]\n",
+		       p_eng->flg.Err_Flag, p_eng->flg.Des_Flag);
 
-	return(1);
+	return (1);
 }
 
 //------------------------------------------------------------
@@ -1359,31 +1266,33 @@
 {
 	nt_log_func_name();
 
-	eng->reg.MAC_000 = Read_Reg_MAC_DD( eng, 0x00 );//Interrupt Status
+	uint32_t mac_00;
+
+	mac_00 = mac_reg_read(eng, 0x00);
 #ifdef CheckRxbufUNAVA
-	if ( eng->reg.MAC_000 & 0x00000004 ) {
-		PRINTF( FP_LOG, "[%sIntStatus] Receiving buffer unavailable               : %08x [loop[%d]:%d]\n", type, eng->reg.MAC_000, eng->run.Loop_ofcnt, eng->run.Loop );
+	if (mac_00 & BIT(2)) {
+		PRINTF( FP_LOG, "[%sIntStatus] Receiving buffer unavailable               : %08x [loop[%d]:%d]\n", type, mac_00, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		FindErr( eng, Err_Flag_RXBUF_UNAVA );
 	}
 #endif
 
 #ifdef CheckRPktLost
-	if ( eng->reg.MAC_000 & 0x00000008 ) {
-		PRINTF( FP_LOG, "[%sIntStatus] Received packet lost due to RX FIFO full   : %08x [loop[%d]:%d]\n", type, eng->reg.MAC_000, eng->run.Loop_ofcnt, eng->run.Loop );
+	if (mac_00 & BIT(3)) {
+		PRINTF( FP_LOG, "[%sIntStatus] Received packet lost due to RX FIFO full   : %08x [loop[%d]:%d]\n", type, mac_00, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		FindErr( eng, Err_Flag_RPKT_LOST );
 	}
 #endif
 
 #ifdef CheckNPTxbufUNAVA
-	if ( eng->reg.MAC_000 & 0x00000040 ) {
-		PRINTF( FP_LOG, "[%sIntStatus] Normal priority transmit buffer unavailable: %08x [loop[%d]:%d]\n", type, eng->reg.MAC_000, eng->run.Loop_ofcnt, eng->run.Loop );
+	if (mac_00 & BIT(6) ) {
+		PRINTF( FP_LOG, "[%sIntStatus] Normal priority transmit buffer unavailable: %08x [loop[%d]:%d]\n", type, mac_00, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		FindErr( eng, Err_Flag_NPTXBUF_UNAVA );
 	}
 #endif
 
 #ifdef CheckTPktLost
-	if ( eng->reg.MAC_000 & 0x00000080 ) {
-		PRINTF( FP_LOG, "[%sIntStatus] Packets transmitted to Ethernet lost       : %08x [loop[%d]:%d]\n", type, eng->reg.MAC_000, eng->run.Loop_ofcnt, eng->run.Loop );
+	if (mac_00 & BIT(7)) {
+		PRINTF( FP_LOG, "[%sIntStatus] Packets transmitted to Ethernet lost       : %08x [loop[%d]:%d]\n", type, mac_00, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		FindErr( eng, Err_Flag_TPKT_LOST );
 	}
 #endif
@@ -1420,7 +1329,7 @@
 				eng->dat.FRAME_LEN[ des_num ] = RAND_SIZE_MIN + ( rand() % ( RAND_SIZE_MAX - RAND_SIZE_MIN + 1 ) );
 
 			if ( DbgPrn_FRAME_LEN )
-				PRINTF( FP_LOG, "[setup_framesize] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN[ des_num ], des_num, eng->run.Loop_ofcnt, eng->run.Loop );
+				PRINTF( FP_LOG, "[setup_framesize] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN[ des_num ], des_num, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		}
 	}
 	else {
@@ -1430,18 +1339,12 @@
 				eng->dat.FRAME_LEN[ des_num ] = FRAME_LENH;
 			else
 				eng->dat.FRAME_LEN[ des_num ] = FRAME_LENL;
-#elif defined(PHY_SPECIAL)
-			eng->dat.FRAME_LEN[ des_num ] = special_PHY_FRAME_LEN( eng );
 #else
-			if ( eng->run.TM_Burst ) {
+			if ( eng->run.tm_tx_only ) {
 				if ( eng->run.TM_IEEE )
 					eng->dat.FRAME_LEN[ des_num ] = 1514;
-				else
-  #ifdef ENABLE_ARP_2_WOL
-					eng->dat.FRAME_LEN[ des_num ] = 164;
-  #else
-					eng->dat.FRAME_LEN[ des_num ] = 60;
-  #endif
+				else  
+					eng->dat.FRAME_LEN[ des_num ] = 60;  
 			}
 			else {
   #ifdef SelectLengthInc
@@ -1452,10 +1355,10 @@
 				else
 					eng->dat.FRAME_LEN[ des_num ] = FRAME_LENL;
   #endif
-			} // End if ( eng->run.TM_Burst )
+			} // End if ( eng->run.tm_tx_only )
 #endif
 			if ( DbgPrn_FRAME_LEN )
-				PRINTF( FP_LOG, "[setup_framesize] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN[ des_num ], des_num, eng->run.Loop_ofcnt, eng->run.Loop );
+				PRINTF( FP_LOG, "[setup_framesize] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN[ des_num ], des_num, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
 		} // End for (des_num = 0; des_num < eng->dat.Des_Num; des_num++)
 	} // End if ( ENABLE_RAND_SIZE )
@@ -1493,70 +1396,51 @@
 	int        i;
 
 	nt_log_func_name();
-	for (i = 0; i < 16; i++ )
-		eng->dat.ARP_data[ i ] = ARP_org_data[ i ];
+	for (i = 0; i < 16; i++)
+		eng->dat.ARP_data[i] = ARP_org_data[i];
+
+	eng->dat.ARP_data[1] = 0x0000ffff | (eng->inf.SA[0] << 16) // MSB
+			       | (eng->inf.SA[1] << 24);
 
-	eng->dat.ARP_data[ 1 ] = 0x0000ffff
-	                       | ( eng->inf.SA[ 0 ] << 16 )//MSB
-	                       | ( eng->inf.SA[ 1 ] << 24 );
-
-	eng->dat.ARP_data[ 2 ] = ( eng->inf.SA[ 2 ]       )
-	                       | ( eng->inf.SA[ 3 ] <<  8 )
-	                       | ( eng->inf.SA[ 4 ] << 16 )
-	                       | ( eng->inf.SA[ 5 ] << 24 );//LSB
-
-	eng->dat.ARP_data[ 5 ] = 0x00000100
-	                       | ( eng->inf.SA[ 0 ] << 16 )//MSB
-	                       | ( eng->inf.SA[ 1 ] << 24 );
-
-	eng->dat.ARP_data[ 6 ] = ( eng->inf.SA[ 2 ]       )
-	                       | ( eng->inf.SA[ 3 ] <<  8 )
-	                       | ( eng->inf.SA[ 4 ] << 16 )
-	                       | ( eng->inf.SA[ 5 ] << 24 );//LSB
+	eng->dat.ARP_data[2] = (eng->inf.SA[2]) | (eng->inf.SA[3] << 8) |
+			       (eng->inf.SA[4] << 16) |
+			       (eng->inf.SA[5] << 24); // LSB
+
+	eng->dat.ARP_data[5] = 0x00000100 | (eng->inf.SA[0] << 16) // MSB
+			       | (eng->inf.SA[1] << 24);
+
+	eng->dat.ARP_data[6] = (eng->inf.SA[2]) | (eng->inf.SA[3] << 8) |
+			       (eng->inf.SA[4] << 16) |
+			       (eng->inf.SA[5] << 24); // LSB
 } // End void setup_arp (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
 void setup_buf (MAC_ENGINE *eng) 
 {
-	int32_t       des_num_max;
-	int32_t       des_num;
-	int        i;
-	uint32_t      adr;
-	uint32_t      adr_srt;
-	uint32_t      adr_end;
-	uint32_t      Current_framelen;
-	uint32_t      gdata = 0;
-#ifdef PHY_SPECIAL
-	uint32_t      *gdata_ptr;
-#else
-	int        cnt;
-	uint32_t      len;
-#endif
-
-#ifdef ENABLE_ARP_2_WOL
-	int        DA[3];
-
-	DA[ 0 ] =  ( ( SelectWOLDA_DatH >>  8 ) & 0x00ff ) |
-	           ( ( SelectWOLDA_DatH <<  8 ) & 0xff00 );
-
-	DA[ 1 ] =  ( ( SelectWOLDA_DatL >> 24 ) & 0x00ff ) |
-	           ( ( SelectWOLDA_DatL >>  8 ) & 0xff00 );
-
-	DA[ 2 ] =  ( ( SelectWOLDA_DatL >>  8 ) & 0x00ff ) |
-	           ( ( SelectWOLDA_DatL <<  8 ) & 0xff00 );
-#endif
+	int32_t des_num_max;
+	int32_t des_num;
+	int i;
+	uint32_t adr;
+	uint32_t adr_srt;
+	uint32_t adr_end;
+	uint32_t Current_framelen;
+	uint32_t gdata = 0;
+#ifdef SelectSimpleDA	
+	int cnt;
+	uint32_t len;
+#endif	
 
 	nt_log_func_name();
 
 	// It need be multiple of 4
-	eng->dat.DMA_Base_Setup = GET_DMA_BASE_SETUP & 0xfffffffc;
-	adr_srt = eng->dat.DMA_Base_Setup;//base for read/write
+	eng->dat.DMA_Base_Setup = DMA_BASE & 0xfffffffc;
+	adr_srt = eng->dat.DMA_Base_Setup;
 
-	if ( eng->run.TM_Burst ) {
-		if ( eng->run.TM_IEEE ) {
-			for ( des_num = 0; des_num < eng->dat.Des_Num; des_num++ ) {
+	if (eng->run.tm_tx_only) {
+		if (eng->run.TM_IEEE) {
+			for (des_num = 0; des_num < eng->dat.Des_Num; des_num++) {
 				if ( DbgPrn_BufAdr )
-					printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, adr_srt);
+					printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.loop_of_cnt, eng->run.loop_cnt, des_num, adr_srt);
 #ifdef ENABLE_DASA
 				Write_Mem_Dat_DD( adr_srt    , 0xffffffff           );
 				Write_Mem_Dat_DD( adr_srt + 4, eng->dat.ARP_data[1] );
@@ -1567,11 +1451,13 @@
 				for ( adr =  adr_srt;       adr < (adr_srt + DMA_PakSize); adr += 4 )
 #endif
 				{
-					switch( eng->arg.GTestMode ) {
-						case 1: gdata = 0xffffffff;              break;
-						case 2: gdata = 0x55555555;              break;
-						case 3: gdata = rand() | (rand() << 16); break;
-						case 5: gdata = eng->arg.GUserDVal;      break;
+					switch (eng->arg.test_mode) {
+					case 4:
+						gdata = rand() | (rand() << 16);
+						break;
+					case 5:
+						gdata = eng->arg.user_def_val;
+						break;
 					}
 					Write_Mem_Dat_DD( adr, gdata );
 				} // End for()
@@ -1585,43 +1471,24 @@
 
 			for ( des_num = 0; des_num < eng->dat.Des_Num; des_num++ ) {
 				if ( DbgPrn_BufAdr )
-					printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, adr_srt);
+					printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.loop_of_cnt, eng->run.loop_cnt, des_num, adr_srt);
 
 				for (i = 0; i < 16; i++)
 					Write_Mem_Dat_DD( adr_srt + ( i << 2 ), eng->dat.ARP_data[i] );
 
-#ifdef ENABLE_ARP_2_WOL
-				for (i = 16; i < 40; i += 3) {
-					Write_Mem_Dat_DD( adr_srt + ( i << 2 ),     ( DA[ 1 ] << 16 ) |  DA[ 0 ] );
-					Write_Mem_Dat_DD( adr_srt + ( i << 2 ) + 4, ( DA[ 0 ] << 16 ) |  DA[ 2 ] );
-					Write_Mem_Dat_DD( adr_srt + ( i << 2 ) + 8, ( DA[ 2 ] << 16 ) |  DA[ 1 ] );
-				}
-#endif
+
 				adr_srt += DMA_PakSize;
 			} // End for (des_num = 0; des_num < eng->dat.Des_Num; des_num++)
 		} // End if ( eng->run.TM_IEEE )
-	}
-	else {
-		if ( eng->arg.GEn_SinglePacket )
+	} else {
+		if ( eng->arg.ctrl.b.single_packet )
 			des_num_max = 1;
 		else
 			des_num_max = eng->dat.Des_Num;
-#ifdef PHY_SPECIAL
-		for ( des_num = 0; des_num < des_num_max; des_num++ ) {
-			Current_framelen = eng->dat.FRAME_LEN[ des_num ];
-			gdata_ptr = special_PHY_txpkt_ptr( eng );
 
-			adr_end = adr_srt + ( ( ( Current_framelen + 3 ) >> 2 ) << 2 );
-			for ( adr = adr_srt; adr < adr_end; adr += 4 ) {
-				Write_Mem_Dat_DD( adr, *gdata_ptr );
-				gdata_ptr++;
-			}
-			adr_srt += DMA_PakSize;
-		} // End for (des_num = 0; des_num < eng->dat.Des_Num; des_num++)
-#else
-		for ( des_num = 0; des_num < des_num_max; des_num++ ) {
-			if ( DbgPrn_BufAdr )
-				printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, adr_srt);
+		for (des_num = 0; des_num < des_num_max; des_num++) {
+			if (DbgPrn_BufAdr)
+				printf("[loop[%d]:%4d][des:%4d][setup_buf  ] %08x\n", eng->run.loop_of_cnt, eng->run.loop_cnt, des_num, adr_srt);
   #ifdef SelectSimpleData
     #ifdef SimpleData_Fix
 			switch( des_num % SimpleData_FixNum ) {
@@ -1647,11 +1514,12 @@
 			Current_framelen = eng->dat.FRAME_LEN[ des_num ];
 
 			if ( DbgPrn_FRAME_LEN )
-				PRINTF( FP_LOG, "[setup_buf      ] Current_framelen:%08x[Des:%d][loop[%d]:%d]\n", Current_framelen, des_num, eng->run.Loop_ofcnt, eng->run.Loop );
-
+				PRINTF( FP_LOG, "[setup_buf      ] Current_framelen:%08x[Des:%d][loop[%d]:%d]\n", Current_framelen, des_num, eng->run.loop_of_cnt, eng->run.loop_cnt );
+#ifdef SelectSimpleDA
 			cnt     = 0;
 			len     = ( ( ( Current_framelen - 14 ) & 0xff ) << 8) |
 			            ( ( Current_framelen - 14 ) >> 8 );
+#endif				    
 			adr_end = adr_srt + DMA_PakSize;
 			for ( adr = adr_srt; adr < adr_end; adr += 4 ) {
   #ifdef SelectSimpleDA
@@ -1671,8 +1539,7 @@
 			}
 			adr_srt += DMA_PakSize;
 		} // End for (des_num = 0; des_num < eng->dat.Des_Num; des_num++)
-#endif
-	} // End if ( eng->run.TM_Burst )
+	} // End if ( eng->run.tm_tx_only )
 } // End void setup_buf (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
@@ -1694,14 +1561,12 @@
 	uint32_t      gdata_bak;
 #endif
 	uint32_t      gdata;
-#ifdef PHY_SPECIAL
-	uint32_t      *gdata_ptr;
-#endif
+
 	uint32_t      wp;
 
 	nt_log_func_name();
 
-	if ( eng->arg.GEn_SinglePacket )
+	if ( eng->arg.ctrl.b.single_packet )
 		number_dat = 0;
 	else
 		number_dat = number;
@@ -1710,15 +1575,12 @@
 	eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[ number_dat ];
 
 	if ( DbgPrn_FRAME_LEN )
-		PRINTF( FP_LOG, "[check_Data     ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN_Cur, number, eng->run.Loop_ofcnt, eng->run.Loop );
+		PRINTF( FP_LOG, "[check_Data     ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN_Cur, number, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
 	adr_srt = datbase;
 	adr_end = adr_srt + PktByteSize;
 
-#ifdef PHY_SPECIAL
-	gdata_ptr = special_PHY_rxpkt_ptr( eng );
-	gdata = *gdata_ptr;
-#elif defined(SelectSimpleData)
+#if defined(SelectSimpleData)
     #ifdef SimpleData_Fix
 	switch( number_dat % SimpleData_FixNum ) {
 		case  0 : gdata = SimpleData_FixVal00; break;
@@ -1751,7 +1613,7 @@
 #endif
 
 	if ( DbgPrn_Bufdat )
-		PRINTF( FP_LOG, " Inf:%08x ~ %08x(%08x) %08x [Des:%d][loop[%d]:%d]\n", adr_srt, adr_end, adr_las, gdata, number, eng->run.Loop_ofcnt, eng->run.Loop );
+		PRINTF( FP_LOG, " Inf:%08x ~ %08x(%08x) %08x [Des:%d][loop[%d]:%d]\n", adr_srt, adr_end, adr_las, gdata, number, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
 	for ( adr = adr_srt; adr < adr_end; adr+=4 ) {
 #ifdef SelectSimpleDA
@@ -1766,27 +1628,24 @@
 			wp = wp & wp_lst_cur;
 
 		if ( ( rdata & wp ) != ( gdata & wp ) ) {
-			PRINTF( FP_LOG, "\nError: Adr:%08x[%3d] (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, ( adr - adr_srt ) / 4, rdata, gdata, wp, number, eng->run.Loop_ofcnt, eng->run.Loop );
+			printf("\nError: Adr:%08x[%3d] (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, ( adr - adr_srt ) / 4, rdata, gdata, wp, number, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			for ( index = 0; index < 6; index++ )
-				PRINTF( FP_LOG, "Rep  : Adr:%08x      (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, Read_Mem_Dat_DD( adr ), gdata, wp, number, eng->run.Loop_ofcnt, eng->run.Loop );
+				printf("Rep  : Adr:%08x      (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, Read_Mem_Dat_DD( adr ), gdata, wp, number, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
-			if ( DbgPrn_DumpMACCnt )
-				dump_mac_ROreg( eng );
+			if (DbgPrn_DumpMACCnt)
+				dump_mac_ROreg(eng);
 
 			return( FindErr( eng, Err_Flag_Check_Buf_Data ) );
 		} // End if ( (rdata & wp) != (gdata & wp) )
 		if ( DbgPrn_BufdatDetail )
-			PRINTF( FP_LOG, " Adr:%08x[%3d] (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, ( adr - adr_srt ) / 4, rdata, gdata, wp, number, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, " Adr:%08x[%3d] (%08x) (%08x:%08x) [Des:%d][loop[%d]:%d]\n", adr, ( adr - adr_srt ) / 4, rdata, gdata, wp, number, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
 #ifdef SelectSimpleDA
 		if ( cnt <= 4 )
 			gdata = gdata_bak;
 #endif
 
-#ifdef PHY_SPECIAL
-		gdata_ptr++;
-		gdata = *gdata_ptr;
-#elif defined(SelectSimpleData)
+#if defined(SelectSimpleData)
 		gdata = gdata ^ SimpleData_XORVal;
 #else
 		gdata += DATA_IncVal;
@@ -1805,22 +1664,23 @@
 
 	nt_log_func_name();
 
-	desadr = eng->run.RDES_BASE + ( 16 * eng->dat.Des_Num ) - 4;//base for read/write
-	for ( des_num = eng->dat.Des_Num - 1; des_num >= 0; des_num-- ) {
-		datbase = AT_BUF_MEMRW( Read_Mem_Des_DD( desadr ) & 0xfffffffc);//base for read/write
-		if ( check_Data( eng, datbase, des_num ) ) {
-			check_int ( eng, "" );
-			return(1);
+	desadr = eng->run.rdes_base + (16 * eng->dat.Des_Num) - 4;
+	for (des_num = eng->dat.Des_Num - 1; des_num >= 0; des_num--) {
+		datbase = AT_BUF_MEMRW(Read_Mem_Des_DD(desadr) & 0xfffffffc);
+		if (check_Data(eng, datbase, des_num)) {
+			check_int(eng, "");
+			return (1);
 		}
-		desadr-= 16;
+		desadr -= 16;
 	}
-	if ( check_int ( eng, "" ) )
-		return(1);
+	if (check_int(eng, ""))
+		return (1);
 
 #if defined(Delay_CheckData_LoopNum) && defined(Delay_CheckData)
-	if ( ( loopcnt % Delay_CheckData_LoopNum ) == 0 ) DELAY( Delay_CheckData );
+	if ((loopcnt % Delay_CheckData_LoopNum) == 0)
+		DELAY(Delay_CheckData);
 #endif
-	return(0);
+	return (0);
 } // End char check_buf (MAC_ENGINE *eng, int loopcnt)
 
 //------------------------------------------------------------
@@ -1828,43 +1688,51 @@
 //------------------------------------------------------------
 void setup_txdes (MAC_ENGINE *eng, uint32_t desadr, uint32_t bufbase) 
 {
-	uint32_t      bufadr;
-	uint32_t      bufadrgap;
-	uint32_t      desval = 0;
-	int32_t       des_num;
+	uint32_t bufadr;
+	uint32_t bufadrgap;
+	uint32_t desval = 0;
+	int32_t des_num;
 
 	nt_log_func_name();
 
 	bufadr = bufbase;
-	if ( eng->arg.GEn_SinglePacket )
+	if (eng->arg.ctrl.b.single_packet)
 		bufadrgap = 0;
 	else
 		bufadrgap = DMA_PakSize;
 
-	if ( eng->run.TM_TxDataEn ) {
-		for ( des_num = 0; des_num < eng->dat.Des_Num; des_num++ ) {
-			eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[ des_num ];
-			desval                 = TDES_IniVal;
-			Write_Mem_Des_DD( desadr + 0x04, 0      );
-			Write_Mem_Des_DD( desadr + 0x08, 0      );
-			Write_Mem_Des_DD( desadr + 0x0C, bufadr );
-			Write_Mem_Des_DD( desadr       , desval );
-
-			if ( DbgPrn_FRAME_LEN )
-				PRINTF( FP_LOG, "[setup_txdes    ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", eng->dat.FRAME_LEN_Cur, des_num, eng->run.Loop_ofcnt, eng->run.Loop );
-
-			if ( DbgPrn_BufAdr )
-				printf("[loop[%d]:%4d][des:%4d][setup_txdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, desadr, bufadr);
+	if (eng->run.TM_TxDataEn) {
+		for (des_num = 0; des_num < eng->dat.Des_Num; des_num++) {
+			eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[des_num];
+			desval = TDES_IniVal;
+			Write_Mem_Des_DD(desadr + 0x04, 0);
+			Write_Mem_Des_DD(desadr + 0x08, 0);
+			Write_Mem_Des_DD(desadr + 0x0C, bufadr);
+			Write_Mem_Des_DD(desadr, desval);
+
+			if (DbgPrn_FRAME_LEN)
+				PRINTF(
+				    FP_LOG,
+				    "[setup_txdes    ] "
+				    "FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n",
+				    eng->dat.FRAME_LEN_Cur, des_num,
+				    eng->run.loop_of_cnt, eng->run.loop_cnt);
+
+			if (DbgPrn_BufAdr)
+				printf("[loop[%d]:%4d][des:%4d][setup_txdes] "
+				       "%08x [%08x]\n",
+				       eng->run.loop_of_cnt, eng->run.loop_cnt,
+				       des_num, desadr, bufadr);
 
 			desadr += 16;
 			bufadr += bufadrgap;
 		}
-		Write_Mem_Des_DD( desadr - 0x10, desval | EOR_IniVal );
+		barrier();
+		Write_Mem_Des_DD(desadr - 0x10, desval | EOR_IniVal);
+	} else {
+		Write_Mem_Des_DD(desadr, 0);
 	}
-	else {
-		Write_Mem_Des_DD( desadr, 0);
-	} // End if ( eng->run.TM_TxDataEn )
-} // End void setup_txdes (uint32_t desadr, uint32_t bufbase)
+}
 
 //------------------------------------------------------------
 void setup_rxdes (MAC_ENGINE *eng, uint32_t desadr, uint32_t bufbase) {
@@ -1884,11 +1752,12 @@
 			Write_Mem_Des_DD( desadr       , desval );
 
 			if ( DbgPrn_BufAdr )
-				printf("[loop[%d]:%4d][des:%4d][setup_rxdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, desadr, bufadr);
+				printf("[loop[%d]:%4d][des:%4d][setup_rxdes] %08x [%08x]\n", eng->run.loop_of_cnt, eng->run.loop_cnt, des_num, desadr, bufadr);
 
 			desadr += 16;
 			bufadr += DMA_PakSize;
 		}
+		barrier();
 		Write_Mem_Des_DD( desadr - 0x10, desval | EOR_IniVal );
 	}
 	else {
@@ -1901,20 +1770,19 @@
 //------------------------------------------------------------
 void setup_des (MAC_ENGINE *eng, uint32_t bufnum) 
 {
-
-	if ( DbgPrn_BufAdr ) {
+	if (DbgPrn_BufAdr) {
 		printf("setup_des: %d\n", bufnum);
 		debug_pause();
 	}
 
-//	eng->dat.DMA_Base_Tx = CPU_BUS_ADDR_SDRAM_OFFSET + ZeroCopy_OFFSET + eng->dat.DMA_Base_Setup; // 20130730
-//	eng->dat.DMA_Base_Rx = CPU_BUS_ADDR_SDRAM_OFFSET + ZeroCopy_OFFSET + GET_DMA_BASE(0); // 20130730
-	eng->dat.DMA_Base_Tx = ZeroCopy_OFFSET + eng->dat.DMA_Base_Setup; // 20130730
-	eng->dat.DMA_Base_Rx = ZeroCopy_OFFSET + GET_DMA_BASE(0); // 20130730
-#ifndef Enable_MAC_ExtLoop
-	setup_txdes( eng, eng->run.TDES_BASE, AT_MEMRW_BUF( eng->dat.DMA_Base_Tx ) );//base for read/write //base of the descriptor
-#endif
-	setup_rxdes( eng, eng->run.RDES_BASE, AT_MEMRW_BUF( eng->dat.DMA_Base_Rx ) );//base for read/write //base of the descriptor
+	eng->dat.DMA_Base_Tx =
+	    ZeroCopy_OFFSET + eng->dat.DMA_Base_Setup;
+	eng->dat.DMA_Base_Rx = ZeroCopy_OFFSET + GET_DMA_BASE(eng, 0);	
+
+	setup_txdes(eng, eng->run.tdes_base,
+		    AT_MEMRW_BUF(eng->dat.DMA_Base_Tx));
+	setup_rxdes(eng, eng->run.rdes_base,
+		    AT_MEMRW_BUF(eng->dat.DMA_Base_Rx));
 } // End void setup_des (uint32_t bufnum)
 
 //------------------------------------------------------------
@@ -1930,101 +1798,116 @@
 
 	nt_log_func_name();
 
-	if ( eng->run.TM_RxDataEn ) {
-		H_rx_bufadr = AT_MEMRW_BUF( eng->dat.DMA_Base_Rx );//base of the descriptor
-		H_rx_desadr = eng->run.RDES_BASE;//base for read/write
-		for ( des_num = 0; des_num < eng->dat.Des_Num - 1; des_num++ ) {
-			Write_Mem_Des_DD( H_rx_desadr + 0x0C, H_rx_bufadr );
-			Write_Mem_Des_DD( H_rx_desadr       , RDES_IniVal );
-			if ( DbgPrn_BufAdr )
-				printf("[loop[%d]:%4d][des:%4d][setup_rxdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, H_rx_desadr, H_rx_bufadr);
+	if (eng->run.TM_RxDataEn) {
+		H_rx_bufadr = AT_MEMRW_BUF(eng->dat.DMA_Base_Rx);
+		H_rx_desadr = eng->run.rdes_base;
+		for (des_num = 0; des_num < eng->dat.Des_Num - 1; des_num++) {
+			Write_Mem_Des_DD(H_rx_desadr + 0x0C, H_rx_bufadr);
+			Write_Mem_Des_DD(H_rx_desadr, RDES_IniVal);
+			if (DbgPrn_BufAdr)
+				printf("[loop[%d]:%4d][des:%4d][setup_rxdes] "
+				       "%08x [%08x]\n",
+				       eng->run.loop_of_cnt, eng->run.loop_cnt,
+				       des_num, H_rx_desadr, H_rx_bufadr);
 
 			H_rx_bufadr += DMA_PakSize;
 			H_rx_desadr += 16;
 		}
-		Write_Mem_Des_DD( H_rx_desadr + 0x0C, H_rx_bufadr );
-		Write_Mem_Des_DD( H_rx_desadr       , RDES_IniVal | EOR_IniVal );
-		if ( DbgPrn_BufAdr )
-			printf("[loop[%d]:%4d][des:%4d][setup_rxdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, H_rx_desadr, H_rx_bufadr);
-	}
-//	Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 ); // Rx Poll
-
-	if ( eng->run.TM_TxDataEn ) {
-		H_tx_bufadr = AT_MEMRW_BUF( eng->dat.DMA_Base_Tx );//base of the descriptor
-		H_tx_desadr = eng->run.TDES_BASE;//base for read/write
-		for ( des_num = 0; des_num < eng->dat.Des_Num - 1; des_num++ ) {
-			eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[ des_num ];
-			Write_Mem_Des_DD( H_tx_desadr + 0x0C, H_tx_bufadr );
-			Write_Mem_Des_DD( H_tx_desadr       , TDES_IniVal );
-			if ( DbgPrn_BufAdr )
-				printf("[loop[%d]:%4d][des:%4d][setup_txdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, H_tx_desadr, H_tx_bufadr);
+		Write_Mem_Des_DD(H_rx_desadr + 0x0C, H_rx_bufadr);
+		Write_Mem_Des_DD(H_rx_desadr, RDES_IniVal | EOR_IniVal);
+		if (DbgPrn_BufAdr)
+			printf("[loop[%d]:%4d][des:%4d][setup_rxdes] %08x "
+			       "[%08x]\n",
+			       eng->run.loop_of_cnt, eng->run.loop_cnt, des_num,
+			       H_rx_desadr, H_rx_bufadr);
+	}
+
+	if (eng->run.TM_TxDataEn) {
+		H_tx_bufadr = AT_MEMRW_BUF(eng->dat.DMA_Base_Tx);
+		H_tx_desadr = eng->run.tdes_base;
+		for (des_num = 0; des_num < eng->dat.Des_Num - 1; des_num++) {
+			eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[des_num];
+			Write_Mem_Des_DD(H_tx_desadr + 0x0C, H_tx_bufadr);
+			Write_Mem_Des_DD(H_tx_desadr, TDES_IniVal);
+			if (DbgPrn_BufAdr)
+				printf("[loop[%d]:%4d][des:%4d][setup_txdes] "
+				       "%08x [%08x]\n",
+				       eng->run.loop_of_cnt, eng->run.loop_cnt,
+				       des_num, H_tx_desadr, H_tx_bufadr);
 
 			H_tx_bufadr += DMA_PakSize;
 			H_tx_desadr += 16;
 		}
-		eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[ des_num ];
-		Write_Mem_Des_DD( H_tx_desadr + 0x0C, H_tx_bufadr );
-		Write_Mem_Des_DD( H_tx_desadr       , TDES_IniVal | EOR_IniVal );
-		if ( DbgPrn_BufAdr )
-			printf("[loop[%d]:%4d][des:%4d][setup_txdes] %08x [%08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, des_num, H_tx_desadr, H_tx_bufadr);
+		eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[des_num];
+		Write_Mem_Des_DD(H_tx_desadr + 0x0C, H_tx_bufadr);
+		Write_Mem_Des_DD(H_tx_desadr, TDES_IniVal | EOR_IniVal);
+		if (DbgPrn_BufAdr)
+			printf("[loop[%d]:%4d][des:%4d][setup_txdes] %08x "
+			       "[%08x]\n",
+			       eng->run.loop_of_cnt, eng->run.loop_cnt, des_num,
+			       H_tx_desadr, H_tx_bufadr);
 	}
-//	Write_Reg_MAC_DD( eng, 0x18, 0x00000000 ); // Tx Poll
 } // End void setup_des_loop (uint32_t bufnum)
 
 //------------------------------------------------------------
-char check_des_header_Tx (MAC_ENGINE *eng, char *type, uint32_t adr, int32_t desnum) {
-	int        timeout = 0;
+char check_des_header_Tx (MAC_ENGINE *eng, char *type, uint32_t adr, int32_t desnum) 
+{
+	int timeout = 0;
 
-	eng->dat.TxDes0DW = Read_Mem_Des_DD( adr );
+	eng->dat.TxDes0DW = Read_Mem_Des_DD(adr);
 
-	while ( HWOwnTx( eng->dat.TxDes0DW ) ) {
+	while (HWOwnTx(eng->dat.TxDes0DW)) {
 		// we will run again, if transfer has not been completed.
-		if ( ( eng->run.TM_Burst || eng->run.TM_RxDataEn ) && ( ++timeout > eng->run.TIME_OUT_Des ) ) {
-			PRINTF( FP_LOG, "[%sTxDesOwn] Address %08x = %08x [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.TxDes0DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
-			return( FindErr_Des( eng, Des_Flag_TxOwnTimeOut ) );
+		if ((eng->run.tm_tx_only || eng->run.TM_RxDataEn) &&
+		    (++timeout > eng->run.timeout_th)) {
+			PRINTF(FP_LOG,
+			       "[%sTxDesOwn] Address %08x = %08x "
+			       "[Des:%d][loop[%d]:%d]\n",
+			       type, adr, eng->dat.TxDes0DW, desnum,
+			       eng->run.loop_of_cnt, eng->run.loop_cnt);
+			return (FindErr_Des(eng, Des_Flag_TxOwnTimeOut));
 		}
-//		Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-//		Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
 
 #ifdef Delay_ChkTxOwn
-		DELAY( Delay_ChkTxOwn );
+		DELAY(Delay_ChkTxOwn);
 #endif
-		eng->dat.TxDes0DW = Read_Mem_Des_DD( adr );
+		eng->dat.TxDes0DW = Read_Mem_Des_DD(adr);
 	}
 
 	return(0);
 } // End char check_des_header_Tx (MAC_ENGINE *eng, char *type, uint32_t adr, int32_t desnum)
 
 //------------------------------------------------------------
-char check_des_header_Rx (MAC_ENGINE *eng, char *type, uint32_t adr, int32_t desnum) {
+char check_des_header_Rx (MAC_ENGINE *eng, char *type, uint32_t adr, int32_t desnum) 
+{
 #ifdef CheckRxOwn
-	int        timeout = 0;
+	int timeout = 0;
 
-	eng->dat.RxDes0DW = Read_Mem_Des_DD( adr );
+	eng->dat.RxDes0DW = Read_Mem_Des_DD(adr);
 
-	while ( HWOwnRx( eng->dat.RxDes0DW ) ) {
+	while (HWOwnRx(eng->dat.RxDes0DW)) {
 		// we will run again, if transfer has not been completed.
-		if ( eng->run.TM_TxDataEn && ( ++timeout > eng->run.TIME_OUT_Des ) ) {
-			PRINTF( FP_LOG, "[%sRxDesOwn] Address %08x = %08x [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
-			return( FindErr_Des( eng, Des_Flag_RxOwnTimeOut ) );
+		if (eng->run.TM_TxDataEn && (++timeout > eng->run.timeout_th)) {
+			printf("[%sRxDesOwn] Address %08x = %08x "
+			       "[Des:%d][loop[%d]:%d]\n",
+			       type, adr, eng->dat.RxDes0DW, desnum,
+			       eng->run.loop_of_cnt, eng->run.loop_cnt);
+			return (FindErr_Des(eng, Des_Flag_RxOwnTimeOut));
 		}
-//		Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-//		Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
 
   #ifdef Delay_ChkRxOwn
-		DELAY( Delay_ChkRxOwn );
+		DELAY(Delay_ChkRxOwn);
   #endif
-		eng->dat.RxDes0DW = Read_Mem_Des_DD( adr );
+		eng->dat.RxDes0DW = Read_Mem_Des_DD(adr);
 	};
 
-
   #ifdef CheckRxLen
 	if ( DbgPrn_FRAME_LEN )
-		PRINTF( FP_LOG, "[%sRxDes          ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", type, ( eng->dat.FRAME_LEN_Cur + 4 ), desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+		PRINTF( FP_LOG, "[%sRxDes          ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]\n", type, ( eng->dat.FRAME_LEN_Cur + 4 ), desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 
 	if ( ( eng->dat.RxDes0DW & 0x3fff ) != ( eng->dat.FRAME_LEN_Cur + 4 ) ) {
 		eng->dat.RxDes3DW = Read_Mem_Des_DD( adr + 12 );
-		PRINTF( FP_LOG, "[%sRxDes] Error Frame Length %08x:%08x %08x(%4d/%4d) [Des:%d][loop[%d]:%d]\n",   type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, ( eng->dat.RxDes0DW & 0x3fff ), ( eng->dat.FRAME_LEN_Cur + 4 ), desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+		PRINTF( FP_LOG, "[%sRxDes] Error Frame Length %08x:%08x %08x(%4d/%4d) [Des:%d][loop[%d]:%d]\n",   type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, ( eng->dat.RxDes0DW & 0x3fff ), ( eng->dat.FRAME_LEN_Cur + 4 ), desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 		FindErr_Des( eng, Des_Flag_FrameLen );
 	}
   #endif // End CheckRxLen
@@ -2033,42 +1916,42 @@
 		eng->dat.RxDes3DW = Read_Mem_Des_DD( adr + 12 );
   #ifdef CheckRxErr
 		if ( eng->dat.RxDes0DW & Check_ErrMask_RxErr ) {
-			PRINTF( FP_LOG, "[%sRxDes] Error RxErr        %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Error RxErr        %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_RxErr );
 		}
   #endif // End CheckRxErr
 
   #ifdef CheckCRC
 		if ( eng->dat.RxDes0DW & Check_ErrMask_CRC ) {
-			PRINTF( FP_LOG, "[%sRxDes] Error CRC          %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Error CRC          %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_CRC );
 		}
   #endif // End CheckCRC
 
   #ifdef CheckFTL
 		if ( eng->dat.RxDes0DW & Check_ErrMask_FTL ) {
-			PRINTF( FP_LOG, "[%sRxDes] Error FTL          %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Error FTL          %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_FTL );
 		}
   #endif // End CheckFTL
 
   #ifdef CheckRunt
 		if ( eng->dat.RxDes0DW & Check_ErrMask_Runt) {
-			PRINTF( FP_LOG, "[%sRxDes] Error Runt         %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Error Runt         %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_Runt );
 		}
   #endif // End CheckRunt
 
   #ifdef CheckOddNibble
 		if ( eng->dat.RxDes0DW & Check_ErrMask_OddNibble ) {
-			PRINTF( FP_LOG, "[%sRxDes] Odd Nibble         %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Odd Nibble         %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_OddNibble );
 		}
   #endif // End CheckOddNibble
 
   #ifdef CheckRxFIFOFull
 		if ( eng->dat.RxDes0DW & Check_ErrMask_RxFIFOFull ) {
-			PRINTF( FP_LOG, "[%sRxDes] Error Rx FIFO Full %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.Loop_ofcnt, eng->run.Loop );
+			PRINTF( FP_LOG, "[%sRxDes] Error Rx FIFO Full %08x:%08x %08x            [Des:%d][loop[%d]:%d]\n", type, adr, eng->dat.RxDes0DW, eng->dat.RxDes3DW, desnum, eng->run.loop_of_cnt, eng->run.loop_cnt );
 			FindErr_Des( eng, Des_Flag_RxFIFOFull );
 		}
   #endif // End CheckRxFIFOFull
@@ -2085,7 +1968,7 @@
 //------------------------------------------------------------
 char check_des (MAC_ENGINE *eng, uint32_t bufnum, int checkpoint) {
 	int32_t       desnum;
-	CHAR       desnum_last;
+	int8_t       desnum_last;
 	uint32_t      H_rx_desadr;
 	uint32_t      H_tx_desadr;
 	uint32_t      H_tx_bufadr;
@@ -2098,15 +1981,15 @@
 	nt_log_func_name();
 
 	// Fire the engine to send and recvice
-	Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-	Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
+	mac_reg_write(eng, 0x1c, 0x00000000); // Rx Poll
+	mac_reg_write(eng, 0x18, 0x00000000); // Tx Poll
 
 #ifndef SelectSimpleDes
 	H_tx_bufadr = AT_MEMRW_BUF( eng->dat.DMA_Base_Tx );//base of the descriptor
 	H_rx_bufadr = AT_MEMRW_BUF( eng->dat.DMA_Base_Rx );//base of the descriptor
 #endif
-	H_rx_desadr = eng->run.RDES_BASE;//base for read/write
-	H_tx_desadr = eng->run.TDES_BASE;//base for read/write
+	H_rx_desadr = eng->run.rdes_base;
+	H_tx_desadr = eng->run.tdes_base;
 
 #ifdef Delay_DES
 	DELAY( Delay_DES );
@@ -2116,9 +1999,9 @@
 		desnum_last = ( desnum == ( eng->dat.Des_Num - 1 ) ) ? 1 : 0;
 		if ( DbgPrn_BufAdr ) {
 			if ( checkpoint )
-				printf("[loop[%d]:%4d][des:%4d][check_des  ] %08x %08x [%08x %08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, desnum, ( H_tx_desadr ), ( H_rx_desadr ), Read_Mem_Des_DD( H_tx_desadr + 12 ), Read_Mem_Des_DD( H_rx_desadr + 12 ) );
+				printf("[loop[%d]:%4d][des:%4d][check_des  ] %08x %08x [%08x %08x]\n", eng->run.loop_of_cnt, eng->run.loop_cnt, desnum, ( H_tx_desadr ), ( H_rx_desadr ), Read_Mem_Des_DD( H_tx_desadr + 12 ), Read_Mem_Des_DD( H_rx_desadr + 12 ) );
 			else
-				printf("[loop[%d]:%4d][des:%4d][check_des  ] %08x %08x [%08x %08x]->[%08x %08x]\n", eng->run.Loop_ofcnt, eng->run.Loop, desnum, ( H_tx_desadr ), ( H_rx_desadr ), Read_Mem_Des_DD( H_tx_desadr + 12 ), Read_Mem_Des_DD( H_rx_desadr + 12 ), H_tx_bufadr, H_rx_bufadr );
+				printf("[loop[%d]:%4d][des:%4d][check_des  ] %08x %08x [%08x %08x]->[%08x %08x]\n", eng->run.loop_of_cnt, eng->run.loop_cnt, desnum, ( H_tx_desadr ), ( H_rx_desadr ), Read_Mem_Des_DD( H_tx_desadr + 12 ), Read_Mem_Des_DD( H_rx_desadr + 12 ), H_tx_bufadr, H_rx_bufadr );
 		}
 
 		//[Delay]--------------------
@@ -2149,15 +2032,21 @@
 #endif // End Delay_DesGap
 
 		//[Check Owner Bit]--------------------
-		eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[ desnum ];
-		if ( DbgPrn_FRAME_LEN )
-			PRINTF( FP_LOG, "[check_des      ] FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]%d\n", eng->dat.FRAME_LEN_Cur, desnum, eng->run.Loop_ofcnt, eng->run.Loop, checkpoint );
+		eng->dat.FRAME_LEN_Cur = eng->dat.FRAME_LEN[desnum];
+		if (DbgPrn_FRAME_LEN)
+			PRINTF(FP_LOG,
+			       "[check_des      ] "
+			       "FRAME_LEN_Cur:%08x[Des:%d][loop[%d]:%d]%d\n",
+			       eng->dat.FRAME_LEN_Cur, desnum,
+			       eng->run.loop_of_cnt, eng->run.loop_cnt,
+			       checkpoint);
 
 		// Check the description of Tx and Rx
-		if ( eng->run.TM_TxDataEn && check_des_header_Tx( eng, "", H_tx_desadr, desnum ) ) {
+		if (eng->run.TM_TxDataEn &&
+		    check_des_header_Tx(eng, "", H_tx_desadr, desnum)) {
 			eng->flg.CheckDesFail_DesNum = desnum;
 
-			return(1);
+			return (1);
 		}
 		if ( eng->run.TM_RxDataEn && check_des_header_Rx( eng, "", H_rx_desadr, desnum ) ) {
 			eng->flg.CheckDesFail_DesNum = desnum;
@@ -2174,7 +2063,9 @@
 					Write_Mem_Des_DD( H_rx_desadr, RDES_IniVal | EOR_IniVal );
 				else
 					Write_Mem_Des_DD( H_rx_desadr, RDES_IniVal );
-				Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 ); //Rx Poll
+
+				readl(H_rx_desadr);
+				mac_reg_write( eng, 0x1c, 0x00000000 ); //Rx Poll
 				H_rx_bufadr += DMA_PakSize;
 			}
 			if ( eng->run.TM_TxDataEn ) {
@@ -2183,7 +2074,9 @@
 					Write_Mem_Des_DD( H_tx_desadr, TDES_IniVal | EOR_IniVal );
 				else
 					Write_Mem_Des_DD( H_tx_desadr, TDES_IniVal );
-				Write_Reg_MAC_DD( eng, 0x18, 0x00000000 ); //Tx Poll
+				
+				readl(H_tx_desadr);
+				mac_reg_write( eng, 0x18, 0x00000000 ); //Tx Poll
 				H_tx_bufadr += DMA_PakSize;
 			}
 		}
@@ -2199,226 +2092,108 @@
 
 //------------------------------------------------------------
 // Print
-//------------------------------------------------------------
-void PrintMode (MAC_ENGINE *eng) {
-	if (eng->env.MAC34_vld) printf("run_mode[dec]    | 0->MAC1 1->MAC2 2->MAC3 3->MAC4\n");
-	else                    printf("run_mode[dec]    | 0->MAC1 1->MAC2\n");
-}
-
-//------------------------------------------------------------
-void PrintSpeed (MAC_ENGINE *eng) {
-#ifdef Enable_MAC_ExtLoop
-	printf("speed[dec]       | 0->1G   1->100M 2->10M (default:%3d)\n", DEF_GSPEED);
-#else
-	printf("speed[dec]       | 0->1G   1->100M 2->10M  3->all speed (default:%3d)\n", DEF_GSPEED);
-#endif
-}
-
-//------------------------------------------------------------
-void PrintCtrl (MAC_ENGINE *eng) {
-	printf("ctrl[dec]        | bit0  : Reserved\n");
-	printf("(default:%3d)    | bit1  : Enable to use the other MAC's MDC/MDIO\n", DEF_GCTRL);
-	printf("                 | bit2  : Disable recovery PHY's status\n");
-	printf("                 | bit3  : 1->Enable PHY init       0->Disable PHY init\n");
-	printf("                 | bit4  : 1->PHY internal loopback 0->PHY external loopback\n");
-	printf("                 | bit5  : 1->Ignore PHY ID         0->Check PHY ID\n");
-	if ( eng->env.AST2500 ) {
-	printf("                 | bit6  : 1->Enable MAC int-loop   0->Disable MAC int-loop\n");
-	}
-	if ( eng->env.AST2400 ) {
-	printf("                 | bit7  : 1->Enable MAC int-loop   0->Disable MAC int-loop\n");
-	}
-}
-
-//------------------------------------------------------------
-void PrintLoop (MAC_ENGINE *eng) {
-	printf("loop_max[dec]    | 1G  :  (default:%3d)\n", DEF_GLOOP_MAX * 20);
-	printf("                 | 100M:  (default:%3d)\n", DEF_GLOOP_MAX * 2);
-	printf("                 | 10M :  (default:%3d)\n", DEF_GLOOP_MAX);
-}
-
-//------------------------------------------------------------
-void PrintTest (MAC_ENGINE *eng) {
-	if ( eng->ModeSwitch == MODE_NSCI ) {
-		printf("test_mode[dec]   | 0: NCSI configuration with    Disable_Channel request\n");
-		printf("(default:%3d)    | 1: NCSI configuration without Disable_Channel request\n", DEF_GTESTMODE);
-	}
-	else {
-		printf("test_mode[dec]   | 0: Tx/Rx frame checking\n");
-		printf("(default:%3d)    | 1: Tx output 0xff frame\n", DEF_GTESTMODE);
-		printf("                 | 2: Tx output 0x55 frame\n");
-		printf("                 | 3: Tx output random frame\n");
-		printf("                 | 4: Tx output ARP frame\n");
-		printf("                 | 5: Tx output user defined value frame (default:0x%8x)\n", DEF_GUSER_DEF_PACKET_VAL);
-	} // End if ( eng->ModeSwitch == MODE_NSCI )
-
-	if ( eng->env.AST2300 ) {
-		printf("                 | 6: IO timing testing\n");
-		printf("                 | 7: IO timing/strength testing\n");
-	}
-}
-
-//------------------------------------------------------------
-void PrintPHYAdr (MAC_ENGINE *eng) {
-	printf("phy_adr[dec]     | 0~31: PHY Address (default:%d)\n", DEF_GPHY_ADR);
-}
-
-//------------------------------------------------------------
-void PrintIOTimingBund (MAC_ENGINE *eng) {
-	if ( eng->env.AST2300 )
-		printf("IO margin[dec]   | 0/1/3/5/7/... (default:%d)\n", DEF_GIOTIMINGBUND);
-}
-
-//------------------------------------------------------------
-void PrintPakNUm (MAC_ENGINE *eng) {
-	printf("package_num[dec] | 1~ 8: Total Number of NCSI Package (default:%d)\n", DEF_GPACKAGE2NUM);
-}
-
-//------------------------------------------------------------
-void PrintChlNUm (MAC_ENGINE *eng) {
-	printf("channel_num[dec] | 1~32: Total Number of NCSI Channel (default:%d)\n", DEF_GCHANNEL2NUM);
-}
-
-//------------------------------------------------------------
-void Print_Header (MAC_ENGINE *eng, BYTE option) {
-
-	if      ( eng->run.Speed_sel[ 0 ] ) { PRINTF( option, " 1G   " ); }
-	else if ( eng->run.Speed_sel[ 1 ] ) { PRINTF( option, " 100M " ); }
-	else                                { PRINTF( option, " 10M  " ); }
+//-----------------------------------------------------------
+void PrintIO_Header (MAC_ENGINE *eng, uint8_t option) 
+{
+	int32_t rx_d, step, tmp;
 
-#ifdef Enable_MAC_ExtLoop
-	PRINTF( option, "Tx/Rx loop\n" );
+	if (eng->run.TM_IOStrength) {
+		if (eng->io.drv_upper_bond > 1) {
+#ifdef CONFIG_ASPEED_AST2600			
+			PRINTF(option, "<IO Strength register: [%08x] 0x%08x>",
+			       eng->io.mac34_drv_reg.addr,
+			       eng->io.mac34_drv_reg.value.w);
 #else
-	switch ( eng->arg.GTestMode ) {
-		case 0 : { PRINTF( option, "Tx/Rx frame checking       \n" ); break;                     }
-		case 1 : { PRINTF( option, "Tx output 0xff frame       \n" ); break;                     }
-		case 2 : { PRINTF( option, "Tx output 0x55 frame       \n" ); break;                     }
-		case 3 : { PRINTF( option, "Tx output random frame     \n" ); break;                     }
-		case 4 : { PRINTF( option, "Tx output ARP frame        \n" ); break;                     }
-		case 5 : { PRINTF( option, "Tx output 0x%08x frame    \n", eng->arg.GUserDVal ); break; }
-		case 6 : { PRINTF( option, "IO delay testing           \n" ); break;                     }
-		case 7 : { PRINTF( option, "IO delay testing(Strength) \n" ); break;                     }
-		case 8 : { PRINTF( option, "Tx frame                   \n" ); break;                     }
-		case 9 : { PRINTF( option, "Rx frame checking          \n" ); break;                     }
-	}
-#endif
-}
-
-//------------------------------------------------------------
-void PrintIO_Header (MAC_ENGINE *eng, BYTE option) {
-
-	if ( eng->run.TM_IOStrength ) {
-		if ( eng->io.Str_max > 1 )
-			{ PRINTF( option, "<IO Strength: SCU%02x[%2d:%2d]=%2d>", eng->io.Str_reg_idx, eng->io.Str_shf + 1, eng->io.Str_shf, eng->io.Str_i ); }
-		else
-			{ PRINTF( option, "<IO Strength: SCU%02x[%2d]=%2d>", eng->io.Str_reg_idx, eng->io.Str_shf, eng->io.Str_i ); }
+			PRINTF(option, "<IO Strength register: [%08x] 0x%08x>",
+			       eng->io.mac12_drv_reg.addr,
+			       eng->io.mac12_drv_reg.value.w);
+#endif			       
+		}
 	}
 
-	if      ( eng->run.Speed_sel[ 0 ] ) { PRINTF( option, "[1G  ]========================================>\n" ); }
-	else if ( eng->run.Speed_sel[ 1 ] ) { PRINTF( option, "[100M]========================================>\n" ); }
+	if      ( eng->run.speed_sel[ 0 ] ) { PRINTF( option, "[1G  ]========================================>\n" ); }
+	else if ( eng->run.speed_sel[ 1 ] ) { PRINTF( option, "[100M]========================================>\n" ); }
 	else                                { PRINTF( option, "[10M ]========================================>\n" ); }
 
 	if ( !(option == FP_LOG) ) {
-		PRINTF( option, "   SCU%2X      ", eng->io.Dly_reg_idx );
+		step = eng->io.rx_delay_scan.step;
 
-		for ( eng->io.Dly_in = eng->io.Dly_in_str; eng->io.Dly_in <= eng->io.Dly_in_end; eng->io.Dly_in+=eng->io.Dly_in_cval ) {
-			eng->io.Dly_in_selval = eng->io.value_ary[ eng->io.Dly_in ];
-			PRINTF( option, "%1x", ( eng->io.Dly_in_selval >> 4 ) );
-		}
+		PRINTF(option, "\n    ");
+		for (rx_d = eng->io.rx_delay_scan.begin; rx_d <= eng->io.rx_delay_scan.end; rx_d += step) {
 
-		PRINTF( option, "\n%s    ", eng->io.Dly_reg_name_rx_new );
-		for ( eng->io.Dly_in = eng->io.Dly_in_str; eng->io.Dly_in <= eng->io.Dly_in_end; eng->io.Dly_in+=eng->io.Dly_in_cval ) {
-			eng->io.Dly_in_selval = eng->io.value_ary[ eng->io.Dly_in ];
-			PRINTF( option, "%1x", eng->io.Dly_in_selval & 0xf );
+			if (rx_d < 0) {
+				PRINTF(option, "-" );
+			} else {
+				PRINTF(option, "+" );
+			}
 		}
 
-		PRINTF( option, "\n              " );
-		for ( eng->io.Dly_in = eng->io.Dly_in_str; eng->io.Dly_in <= eng->io.Dly_in_end; eng->io.Dly_in+=eng->io.Dly_in_cval ) {
-			if ( eng->io.Dly_in_reg_idx == eng->io.Dly_in ) { PRINTF( option, "|" ); }
-			else                                            { PRINTF( option, " " ); }
+		PRINTF(option, "\n    ");
+		for (rx_d = eng->io.rx_delay_scan.begin; rx_d <= eng->io.rx_delay_scan.end; rx_d += step) {
+			tmp = abs(rx_d) / 10;
+			if (tmp == 0) {
+				PRINTF(option, "0" );
+			} else {
+				PRINTF(option, "%1d", tmp);
+			}
 		}
-		PRINTF( option, "\n");
-	} // End if ( !(option == FP_LOG) )
-} // End void PrintIO_Header (MAC_ENGINE *eng, BYTE option)
 
-//------------------------------------------------------------
-void PrintIO_LineS (MAC_ENGINE *eng, BYTE option) {
+		PRINTF(option, "\n    ");
+		for (rx_d = eng->io.rx_delay_scan.begin;
+		     rx_d <= eng->io.rx_delay_scan.end; rx_d += step) {
+			PRINTF(option, "%1d", (uint32_t)abs(rx_d) % 10);
+		}
 
-	if ( eng->io.Dly_out_reg_hit )
-		{ PRINTF( option, "%s%02x:-", eng->io.Dly_reg_name_tx_new, eng->io.Dly_out_selval ); }
-	else
-		{ PRINTF( option, "%s%02x: ", eng->io.Dly_reg_name_tx_new, eng->io.Dly_out_selval ); }
-} // End void PrintIO_LineS (MAC_ENGINE *eng, BYTE option)
+		PRINTF(option, "\n    ");
+		for (rx_d = eng->io.rx_delay_scan.begin; rx_d <= eng->io.rx_delay_scan.end; rx_d += step) {
+			if (eng->io.rx_delay_scan.orig == rx_d) {
+				PRINTF(option, "|" );
+			} else {
+				PRINTF(option, " " );
+			}
+		}
+		PRINTF( option, "\n");
+	}
+}
 
 //------------------------------------------------------------
-void PrintIO_Line (MAC_ENGINE *eng, BYTE option) {
-
-	if ( ( eng->io.Dly_in_reg == eng->io.Dly_in_selval ) && eng->io.Dly_out_reg_hit ) {
-		if ( eng->io.Dly_result ) { PRINTF( option, "X" ); }
-		else                      { PRINTF( option, "O" ); }
-	}
-	else {
-		if ( eng->io.Dly_result ) { PRINTF( option, "x" ); }
-		else                      { PRINTF( option, "o" ); }
-	}
-} // End void PrintIO_Line (MAC_ENGINE *eng, BYTE option)
+void PrintIO_LineS(MAC_ENGINE *p_eng, uint8_t option)
+{
+	if (p_eng->io.tx_delay_scan.orig == p_eng->io.Dly_out_selval) {
+		PRINTF( option, "%02d:-", p_eng->io.Dly_out_selval); 
+	} else {
+		PRINTF( option, "%02d: ", p_eng->io.Dly_out_selval);
+	}	
+} // End void PrintIO_LineS (MAC_ENGINE *eng, uint8_t option)
 
 //------------------------------------------------------------
-void PrintIO_Line_LOG (MAC_ENGINE *eng) {
-#ifdef PHY_SPECIAL
-	special_PHY_debug( eng );
-#endif
-	if ( eng->io.Dly_result ) {
-		PRINTF( FP_LOG, "\n=====>[Check]%s%2x, %s%2x:  X\n", eng->io.Dly_reg_name_rx, eng->io.Dly_in_selval, eng->io.Dly_reg_name_tx, eng->io.Dly_out_selval );
-	}
-	else {
-		PRINTF( FP_LOG, "\n=====>[Check]%s%2x, %s%2x:  O\n", eng->io.Dly_reg_name_rx, eng->io.Dly_in_selval, eng->io.Dly_reg_name_tx, eng->io.Dly_out_selval );
-	}
+void PrintIO_Line(MAC_ENGINE *p_eng, uint8_t option) 
+{
+	if ((p_eng->io.Dly_in_selval == p_eng->io.rx_delay_scan.orig) && 
+	    (p_eng->io.Dly_out_selval == p_eng->io.tx_delay_scan.orig)) {
+		if (p_eng->io.result) {
+			PRINTF(option, "X");
+		} else {
+			PRINTF(option, "O");
+		}
+	} else {
+		if (p_eng->io.result) {
+			PRINTF(option, "x");
+		} else {
+			PRINTF(option, "o");
+		}
+	}	
 }
 
 //------------------------------------------------------------
 // main
 //------------------------------------------------------------
-void Calculate_LOOP_CheckNum (MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-
-#define ONE_MBYTE    1048576
-
-#ifdef CheckDataEveryTime
-	eng->run.LOOP_CheckNum = 1;
-#else
-	if ( eng->run.IO_MrgChk || ( eng->arg.GSpeed == SET_1G_100M_10MBPS ) || ( eng->arg.GSpeed == SET_100M_10MBPS ) ) {
-		eng->run.LOOP_CheckNum = eng->run.LOOP_MAX;
-	}
-	else {
-		switch ( eng->arg.GSpeed ) {
-			case SET_1GBPS    : eng->run.CheckBuf_MBSize =  MOVE_DATA_MB_SEC      ; break; // 1G
-			case SET_100MBPS  : eng->run.CheckBuf_MBSize = (MOVE_DATA_MB_SEC >> 3); break; // 100M ~ 1G / 8
-			case SET_10MBPS   : eng->run.CheckBuf_MBSize = (MOVE_DATA_MB_SEC >> 6); break; // 10M  ~ 1G / 64
-		}
-		eng->run.LOOP_CheckNum = ( eng->run.CheckBuf_MBSize / ( ((eng->dat.Des_Num * DMA_PakSize) / ONE_MBYTE ) + 1) );
-	}
-#endif
-}
 
 //------------------------------------------------------------
 void TestingSetup (MAC_ENGINE *eng) 
 {
 	nt_log_func_name();
 
-
-	//[Disable VGA]--------------------
-#ifdef Disable_VGA
-//	if ( eng->arg.GLOOP_INFINI & ~( eng->run.TM_Burst || eng->run.TM_IOTiming ) ) {
-		eng->env.VGAModeVld = 1;
-		outp(0x3d4, 0x17);
-		eng->env.VGAMode = inp(0x3d5);
-		outp(0x3d4, 0x17);
-		outp(0x3d5, 0);
-//	}
-#endif
-
 	//[Setup]--------------------
 	setup_framesize( eng );
 	setup_buf( eng );
@@ -2433,20 +2208,14 @@
 	char       checkprd;
 	char       looplast;
 	char       checken;
-#ifdef Enable_MAC_ExtLoop
-  #ifdef Enable_MAC_ExtLoop_PakcegMode
-	uint32_t      desadr;
-  #endif
-#endif
 
 	nt_log_func_name();
 
-
-	if ( DbgPrn_DumpMACCnt )
-		dump_mac_ROreg( eng );
+	if (DbgPrn_DumpMACCnt)
+		dump_mac_ROreg(eng);
 
 	//[Setup]--------------------
-	eng->run.Loop = 0;
+	eng->run.loop_cnt = 0;
 	checkprd = 0;
 	checken  = 0;
 	looplast = 0;
@@ -2459,50 +2228,45 @@
 		GET_CAHR();
 	}
 
-#ifdef Enable_MAC_ExtLoop
-	while ( 0 ) {
-#else
-	while ( ( eng->run.Loop < eng->run.LOOP_MAX ) || eng->arg.GLOOP_INFINI ) {
-#endif
-		looplast = !eng->arg.GLOOP_INFINI && ( eng->run.Loop == eng->run.LOOP_MAX - 1 );
+
+	while ( ( eng->run.loop_cnt < eng->run.loop_max ) || eng->arg.loop_inf ) {
+		looplast = !eng->arg.loop_inf && ( eng->run.loop_cnt == eng->run.loop_max - 1 );
 
 #ifdef CheckRxBuf
-		if ( !eng->run.TM_Burst )
-			checkprd = ( ( eng->run.Loop % loop_checknum ) == ( loop_checknum - 1 ) );
+		if (!eng->run.tm_tx_only)
+			checkprd = ((eng->run.loop_cnt % loop_checknum) == (loop_checknum - 1));
 		checken = looplast | checkprd;
 #endif
 
-
-
 		if (DbgPrn_BufAdr) {
 			printf("for start ======> [%d]%d/%d(%d) looplast:%d "
 			       "checkprd:%d checken:%d\n",
-			       eng->run.Loop_ofcnt, eng->run.Loop,
-			       eng->run.LOOP_MAX, eng->arg.GLOOP_INFINI,
+			       eng->run.loop_of_cnt, eng->run.loop_cnt,
+			       eng->run.loop_max, eng->arg.loop_inf,
 			       looplast, checkprd, checken);
 			debug_pause();
 		}
 
-#ifndef PHY_SPECIAL
-		if ( eng->run.TM_RxDataEn )
+
+		if (eng->run.TM_RxDataEn)
 			eng->dat.DMA_Base_Tx = eng->dat.DMA_Base_Rx;
-#endif
-//		eng->dat.DMA_Base_Rx = CPU_BUS_ADDR_SDRAM_OFFSET + ZeroCopy_OFFSET + GET_DMA_BASE( eng->run.Loop + 1 ); // 20130730
-		eng->dat.DMA_Base_Rx = ZeroCopy_OFFSET + GET_DMA_BASE( eng->run.Loop + 1 ); // 20130730
+
+		eng->dat.DMA_Base_Rx =
+		    ZeroCopy_OFFSET + GET_DMA_BASE(eng, eng->run.loop_cnt + 1);
 		//[Check DES]--------------------
-		if ( check_des( eng, eng->run.Loop, checken ) ) {
+		if (check_des(eng, eng->run.loop_cnt, checken)) {
 			//descriptor error
 #ifdef CheckRxBuf
 			eng->dat.Des_Num = eng->flg.CheckDesFail_DesNum + 1;
 			if ( checkprd )
 				check_buf( eng, loop_checknum );
 			else
-				check_buf( eng, ( eng->run.LOOP_MAX % loop_checknum ) );
+				check_buf( eng, ( eng->run.loop_max % loop_checknum ) );
 			eng->dat.Des_Num = eng->dat.Des_Num_Org;
 #endif
 
-			if ( DbgPrn_DumpMACCnt )
-				dump_mac_ROreg ( eng );
+			if (DbgPrn_DumpMACCnt)
+				dump_mac_ROreg(eng);
 
 			return(1);
 		}
@@ -2522,19 +2286,19 @@
 			}
 			else {
 #ifdef Enable_ShowBW  
-				printf("[run loop:%3d] BandWidth: %7.2f Mbps, %6.2f sec\n", (eng->run.LOOP_MAX % loop_checknum), ((double)(eng->run.LOOP_MAX % loop_checknum) * (double)eng->dat.Total_frame_len * 8.0) / ((double)eng->timeused * 1000000.0), eng->timeused);
-				PRINTF( FP_LOG, "[run loop:%3d] BandWidth: %7.2f Mbps, %6.2f sec\n", (eng->run.LOOP_MAX % loop_checknum), ((double)(eng->run.LOOP_MAX % loop_checknum) * (double)eng->dat.Total_frame_len * 8.0) / ((double)eng->timeused * 1000000.0), eng->timeused );  
+				printf("[run loop:%3d] BandWidth: %7.2f Mbps, %6.2f sec\n", (eng->run.loop_max % loop_checknum), ((double)(eng->run.loop_max % loop_checknum) * (double)eng->dat.Total_frame_len * 8.0) / ((double)eng->timeused * 1000000.0), eng->timeused);
+				PRINTF( FP_LOG, "[run loop:%3d] BandWidth: %7.2f Mbps, %6.2f sec\n", (eng->run.loop_max % loop_checknum), ((double)(eng->run.loop_max % loop_checknum) * (double)eng->dat.Total_frame_len * 8.0) / ((double)eng->timeused * 1000000.0), eng->timeused );  
 #endif
 
 #ifdef CheckRxBuf
-				if ( check_buf( eng, ( eng->run.LOOP_MAX % loop_checknum ) ) )
+				if ( check_buf( eng, ( eng->run.loop_max % loop_checknum ) ) )
 					return(1);
 #endif
 			} // End if ( checkprd )
 
 #ifndef SelectSimpleDes
 			if ( !looplast )
-				setup_des_loop( eng, eng->run.Loop );
+				setup_des_loop( eng, eng->run.loop_cnt );
 #endif
 
 #ifdef Enable_ShowBW
@@ -2544,77 +2308,31 @@
 
 #ifdef SelectSimpleDes
 		if ( !looplast )
-			setup_des_loop( eng, eng->run.Loop );
+			setup_des_loop( eng, eng->run.loop_cnt );
 #endif
 
-		if ( eng->arg.GLOOP_INFINI )
-			printf("===============> Loop[%d]: %d  \r", eng->run.Loop_ofcnt, eng->run.Loop);
-		else if ( eng->arg.GTestMode == 0 ) {
-			if ( !( DbgPrn_BufAdr || eng->run.IO_Bund ) )
-				printf(" [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop);
-//			switch ( eng->run.Loop % 4 ) {
-//				case 0x00: printf("| [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-//				case 0x01: printf("/ [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-//				case 0x02: printf("- [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-//				default  : printf("\ [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-//			}
+		if ( eng->arg.loop_inf )
+			printf("===============> Loop[%d]: %d  \r", eng->run.loop_of_cnt, eng->run.loop_cnt);
+		else if ( eng->arg.test_mode == 0 ) {
+			if ( !( DbgPrn_BufAdr || eng->run.delay_margin ) )
+				printf(" [%d]%d                        \r", eng->run.loop_of_cnt, eng->run.loop_cnt);
 		}
 
 		if (DbgPrn_BufAdr) {
 			printf("for end   ======> [%d]%d/%d(%d)\n",
-			       eng->run.Loop_ofcnt, eng->run.Loop,
-			       eng->run.LOOP_MAX, eng->arg.GLOOP_INFINI);
+			       eng->run.loop_of_cnt, eng->run.loop_cnt,
+			       eng->run.loop_max, eng->arg.loop_inf);
 			debug_pause();
 		}
 
-		if ( eng->run.Loop >= Loop_OverFlow ) {
-			printf("Over-flow\n");
-			eng->run.Loop = 0;
-			eng->run.Loop_ofcnt++;
-		}
-		else
-			eng->run.Loop++;
-	} // End while ( ( eng->run.Loop < eng->run.LOOP_MAX ) || eng->arg.GLOOP_INFINI )
-	eng->run.Loop_rl[ (int)eng->run.Speed_idx ] = eng->run.Loop;
-
-
-#ifdef Enable_MAC_ExtLoop
-  #ifdef Enable_MAC_ExtLoop_PakcegMode
-	desadr = eng->run.RDES_BASE + ( eng->dat.Des_Num - 1 ) * 16;//base for read/write
-	Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-	while ( 1 ) {
-		while ( !HWOwnTx( Read_Mem_Des_DD( desadr ) ) ) {
-		}
-		Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
-
-		while ( !HWOwnRx( Read_Mem_Des_DD( eng->run.RDES_BASE ) ) ) {
-		}
-		Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-		switch ( eng->run.Loop % 4 ) {
-			case 0x00: printf("| [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-			case 0x01: printf("/ [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-			case 0x02: printf("- [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-			default  : printf("\ [%d]%d                        \r", eng->run.Loop_ofcnt, eng->run.Loop); break;
-		}
-//		printf("===============> Loop[%d]: %d  \r", eng->run.Loop_ofcnt, eng->run.Loop);
-		eng->run.Loop++;
-		Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-	}
-  #else
-	while ( !kbhit() ) {
-		Write_Reg_MAC_DD( eng, 0x1c, 0x00000000 );//Rx Poll
-		Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
-
-		if ( Read_Reg_MAC_DD( eng, 0xb0 ) == 0xffffffff ) {
-			Write_Reg_MAC_DD( eng, 0xa0, 0x00000000 );
-			eng->run.Loop_ofcnt++;
-		}
-
-		printf("[%d]Tx:%08x(%08x), Rx:%08x %08x\r", eng->run.Loop_ofcnt, Read_Reg_MAC_DD( eng, 0xa0 ), Read_Reg_MAC_DD( eng, 0x90 ), Read_Reg_MAC_DD( eng, 0xb0 ), Read_Reg_MAC_DD( eng, 0xb4 ));
-	}
-  #endif
-#endif
+		if (eng->run.loop_cnt >= 0x7fffffff) {	
+			debug("loop counter wrapped around\n");
+			eng->run.loop_cnt = 0;
+			eng->run.loop_of_cnt++;
+		} else
+			eng->run.loop_cnt++;
+	} // End while ( ( eng->run.loop_cnt < eng->run.loop_max ) || eng->arg.loop_inf )
 
-	eng->flg.AllFail = 0;
+	eng->flg.all_fail = 0;
 	return(0);
 } // End char TestingLoop (MAC_ENGINE *eng, uint32_t loop_checknum)
diff -Naur u-boot-2019.04/cmd/nettest/mac.h uboot/cmd/nettest/mac.h
--- u-boot-2019.04/cmd/nettest/mac.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/mac.h	2020-01-14 13:36:49.337961228 -0500
@@ -17,39 +17,25 @@
 #include <command.h>
 
 #include "ncsi.h"
-#include "io.h"
+#include <asm/io.h>
 
 // --------------------------------------------------------------
 // Define
 // --------------------------------------------------------------
-//#define Force_Enable_NewMDIO           //[off][SLT:off] (Force enable new MDC/MDIO)
-#define Enable_RecovSCU                //[ON]
-//#define Enable_Fast_SCU                //[off]
 #define ENABLE_DASA                    //[ON]
-//#define Enable_Int125MHz               //[off] only for AST2300/AST2500
-//#define ENABLE_ARP_2_WOL               //[off]
 //#define Enable_MAC_SWRst               //[off]
-//#define Enable_MAC_ExtLoop             //[off]
-//#define   Enable_MAC_ExtLoop_PakcegMode//[off]
 #define   Enable_No_IOBoundary         //[ON]
-//#define Enable_LOOP_INFINI             //[off]
 //#define Enable_Dual_Mode               //[off]
-//#define Enable_CLK_Stable              //[off]
 
 //#define Enable_Runt
-//#define Enable_Jumbo
-//#define Enable_BufMerge
-//#define Disable_VGA
 //#define Enable_ShowBW
 
-#define AST2500_IOStageStep                    1
-#define AST2500_IOStageShiftBit_In             2 //0~2
-#define AST2500_IOStageShiftBit_Out            2 //0~2
+#define TX_DELAY_SCALING			2
+#define RX_DELAY_SCALING			2
 
 //#define SelectSimpleBoundary                                    //[off] Using in debug
 //#define SelectSimpleData                                        //[off] Using in debug
 //#define SelectSimpleLength                       1514           //[off] 60(0x3c) ~ 1514(0x5ea); 1512(0x5e8)
-//#define SelectDesNumber                          8             //[off] 1 ~
 //#define SelectSimpleDA                                          //[off] Using in debug
 //#define SelectSimpleDes                                         //[off]
 //#define SelectLengthInc                                         //[off] Using in debug
@@ -79,11 +65,8 @@
 #define   SelectWOLDA_DatH                       0x206a
 #define   SelectWOLDA_DatL                       0x8a374d9b
 
-#ifdef Enable_MAC_ExtLoop_PakcegMode
-  #define MOVE_DATA_MB_SEC                       80             // MByte per second to move data
-#else
-  #define MOVE_DATA_MB_SEC                       800            // MByte per second to move data
-#endif
+/* MByte per second to move data */
+#define MOVE_DATA_MB_SEC			800
 
 //---------------------------------------------------------
 // Frame size
@@ -95,16 +78,6 @@
 #define   RAND_SIZE_MAX                          1514
 
 #define FRAME_SELH_PERD                          7
-#ifdef Enable_Jumbo
-    #define FRAME_LENH                           9592           //max:9592
-    #define FRAME_LENL                           9592           //max:9592
-//    #define FRAME_LENH                           9212           //max:9212
-//    #define FRAME_LENL                           9211           //max:9212
-//    #define FRAME_LENH                           9212           //max:9212
-//    #define FRAME_LENL                           9212           //max:9212
-//    #define FRAME_LENH                           2048
-//    #define FRAME_LENL                           2048
-#else
   #ifdef SelectSimpleLength
 //    #define FRAME_LENH                           ( SelectSimpleLength + 1 )
 //    #define FRAME_LENL                           ( SelectSimpleLength     )
@@ -116,6 +89,5 @@
     #define FRAME_LENH                           1514           //max:1514
     #define FRAME_LENL                           1514           //max:1514
   #endif
-#endif
 
 #endif // MAC_H
diff -Naur u-boot-2019.04/cmd/nettest/mactest.c uboot/cmd/nettest/mactest.c
--- u-boot-2019.04/cmd/nettest/mactest.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/mactest.c	2020-01-14 13:36:49.337961228 -0500
@@ -13,1175 +13,1477 @@
 
 #include "swfunc.h"
 #include "comminf.h"
-#include "io.h"
-#include "stduboot.h"
 #include <command.h>
 #include <common.h>
 #include <malloc.h>
 #include <net.h>
 #include <post.h>
+#include "mem_io.h"
 
-int mac_test(int argc, char * const argv[], char mode)
-{
-	MAC_ENGINE           MACENG;
-	MAC_ENGINE           *eng;
-	PHY_ENGINE           PHYENG;
-	PHY_ENGINE           *phyeng;
-	int                  DES_LowNumber;
-
-	CHAR                 *stop_at;
-	uint32_t                Wrn_Flag_allapeed;
-	uint32_t                Err_Flag_allapeed;
-	uint32_t                Des_Flag_allapeed;
-	uint32_t                NCSI_Flag_allapeed;
-
-	int                  i;
-	int                  j;
-	uint32_t                temp;
-
-//------------------------------------------------------------
-// main Start
-//------------------------------------------------------------
-	eng    = &MACENG;
-	phyeng = &PHYENG;
-	phyeng->fp_set = 0;
-	phyeng->fp_clr = 0;
-#if defined(PHY_SPECIAL)
-	special_PHY_init( eng );
+#include "phy_api.h"
+#include "mac_api.h"
+
+#define ARGV_MAC_IDX		1
+#define ARGV_MDIO_IDX		2
+#define ARGV_SPEED		3
+#define ARGV_CTRL		4
+#define ARGV_LOOP		5
+#define ARGV_TEST_MODE		6
+#define ARGV_PHY_ADDR		7
+#define ARGV_TIMING_MARGIN	8
+
+
+uint8_t __attribute__ ((aligned (1024*1024))) tdes_buf[TDES_SIZE];
+uint8_t __attribute__ ((aligned (1024*1024))) rdes_buf[RDES_SIZE];
+uint8_t __attribute__ ((aligned (1024*1024))) dma_buf[DMA_BUF_SIZE];
+
+struct mac_ctrl_desc {
+	uint32_t base_reset_assert;
+	uint32_t bit_reset_assert;
+	uint32_t base_reset_deassert;
+	uint32_t bit_reset_deassert;
+
+	uint32_t base_clk_stop;
+	uint32_t bit_clk_stop;
+	uint32_t base_clk_start;
+	uint32_t bit_clk_start;
+};
+
+static const uint32_t timeout_th_tbl[3] = {
+    TIME_OUT_Des_1G, TIME_OUT_Des_100M, TIME_OUT_Des_10M};
+#if defined(CONFIG_ASPEED_AST2600)
+const uint32_t mac_base_lookup_tbl[4] = {MAC1_BASE, MAC2_BASE, MAC3_BASE,
+					 MAC4_BASE};
+const uint32_t mdio_base_lookup_tbl[4] = {MDIO0_BASE, MDIO1_BASE, MDIO2_BASE,
+					 MDIO3_BASE};
+const struct mac_ctrl_desc mac_ctrl_lookup_tbl[4] = {
+	{
+		.base_reset_assert = 0x40, .bit_reset_assert = BIT(11),
+		.base_reset_deassert = 0x44,.bit_reset_deassert = BIT(11),
+		.base_clk_stop = 0x80, .bit_clk_stop = BIT(20),
+		.base_clk_start = 0x84, .bit_clk_start = BIT(20),
+	},
+	{
+		.base_reset_assert = 0x40, .bit_reset_assert = BIT(12),
+		.base_reset_deassert = 0x44,.bit_reset_deassert = BIT(12),
+		.base_clk_stop = 0x80, .bit_clk_stop = BIT(21),
+		.base_clk_start = 0x84,.bit_clk_start = BIT(21),
+	},
+	{
+		.base_reset_assert = 0x50, .bit_reset_assert = BIT(20),
+		.base_reset_deassert = 0x54,.bit_reset_deassert = BIT(20),
+		.base_clk_stop = 0x90, .bit_clk_stop = BIT(20),
+		.base_clk_start = 0x94, .bit_clk_start = BIT(20),
+	},
+	{
+		.base_reset_assert = 0x50, .bit_reset_assert = BIT(21),
+		.base_reset_deassert = 0x54,.bit_reset_deassert = BIT(21),
+		.base_clk_stop = 0x90, .bit_clk_stop = BIT(21),
+		.base_clk_start = 0x94,.bit_clk_start = BIT(21),
+	}
+};
+#else
+const uint32_t mac_base_lookup_tbl[2] = {MAC1_BASE, MAC2_BASE};
+const uint32_t mdio_base_lookup_tbl[2] = {MDIO0_BASE, MDIO1_BASE};
+const struct mac_ctrl_desc mac_ctrl_lookup_tbl[2] = {
+	{
+		.base_reset_assert = 0x04, .bit_reset_assert = 11,
+		.base_reset_deassert = 0x04,.bit_reset_deassert = 11,
+		.base_clk_stop = 0x0c, .bit_clk_stop = 20,
+		.base_clk_start = 0x0c, .bit_clk_start = 20,
+	},
+	{
+		.base_reset_assert = 0x04, .bit_reset_assert = 12,
+		.base_reset_deassert = 0x04,.bit_reset_deassert = 12,
+		.base_clk_stop = 0x0c, .bit_clk_stop = 21,
+		.base_clk_start = 0x0c,.bit_clk_start = 21,
+	}
+};
 #endif
 
-	eng->ModeSwitch = mode;
+void Print_Header(MAC_ENGINE *p_eng, uint8_t option)
+{
+	if (p_eng->run.speed_sel[0]) {
+		PRINTF(option, " 1G   ");
+	} else if (p_eng->run.speed_sel[1]) {
+		PRINTF(option, " 100M ");
+	} else {
+		PRINTF(option, " 10M  ");
+	}
 
-//------------------------------------------------------------
-// Bus Initial
-//------------------------------------------------------------
-
-//------------------------------------------------------------
-// Get Chip Feature
-//------------------------------------------------------------
-	Wrn_Flag_allapeed  = 0;
-	Err_Flag_allapeed  = 0;
-	Des_Flag_allapeed  = 0;
-	NCSI_Flag_allapeed = 0;
-	eng->flg.Wrn_Flag              = 0;
-	eng->flg.Err_Flag              = 0;
-	eng->flg.Des_Flag              = 0;
-	eng->flg.NCSI_Flag             = 0;
-	eng->flg.Flag_PrintEn          = 1;
-	eng->flg.AllFail               = 0;
-	eng->run.TIME_OUT_Des_PHYRatio = 1;
-	eng->run.Loop_ofcnt            = 0;
-	eng->run.Loop                  = 0;
-	eng->run.Loop_rl[0]            = 0;
-	eng->run.Loop_rl[1]            = 0;
-	eng->run.Loop_rl[2]            = 0;
-	eng->dat.FRAME_LEN             = 0;
-	eng->dat.wp_lst                = 0;
-	eng->io.init_done              = 0;
-	eng->env.VGAModeVld            = 0;
-	eng->reg.SCU_oldvld            = 0;
-	eng->phy.Adr                   = 0;
-	eng->phy.loop_phy              = 0;
-	eng->phy.default_phy           = 0;
-	eng->phy.PHY_ID2               = 0;
-	eng->phy.PHY_ID3               = 0;
-	eng->phy.PHYName[0]            = 0;
-	eng->phy.RMIICK_IOMode         = 0;
-	eng->ncsi_cap.PCI_DID_VID      = 0;
-	eng->ncsi_cap.ManufacturerID   = 0;
-	read_scu( eng );
+	switch (p_eng->arg.test_mode) {
+	case 0: 
+		PRINTF(option, "TX/RX delay margin check\n");
+		break;
+	case 1:
+		PRINTF(option, "TX/RX delay scan\n");
+		break;
+	case 2:
+		PRINTF(option, "TX/RX delay and IO driving scan\n");
+		break;
+	case 3:
+		PRINTF(option, "TX frame - ARP\n");
+		break;
+	case 4:
+		PRINTF(option, "TX frame - random\n");
+		break;
+	case 5:
+		PRINTF(option, "TX frame - 0x%08x\n", p_eng->arg.user_def_val);
+		break;
+	}
+}
 
-	if ( RUN_STEP >= 1 ) {
-		//------------------------------
-		// [Reg]check SCU_07c
-		// [Env]setup ASTChipName
-		// [Env]setup ASTChipType
-		//------------------------------
-		switch ( eng->reg.SCU_07c ) {
-			default:
-				sprintf( eng->env.ASTChipName, "[ ]" );
-				temp = ( eng->reg.SCU_07c ) & 0xff000000;
-				switch ( temp ) {
-					case 0x04000000 : eng->env.ASTChipType = 8; goto PASS_CHIP_ID;
-					default:
-						printf("Error Silicon Revision ID(SCU7C) %08x [%08x]!!!\n", eng->reg.SCU_07c, temp);
-				}
-				return(1);
-		} // End switch ( eng->reg.SCU_07c )
-PASS_CHIP_ID:
-		//------------------------------
-		// [Env]check ASTChipType
-		// [Env]setup AST1100
-		// [Env]setup AST2300
-		// [Env]setup AST2400
-		// [Env]setup AST1010
-		// [Env]setup AST2500
-		// [Env]setup AST2500A1
-		//------------------------------
-		eng->env.AST1100   = 0;
-		eng->env.AST2300   = 0;
-		eng->env.AST2400   = 0;
-		eng->env.AST1010   = 0;
-		eng->env.AST2500   = 0;
-		eng->env.AST2500A1 = 0;
-		switch ( eng->env.ASTChipType ) {
-			case 8  : eng->env.AST2500A1 = 1;
-			case 7  : eng->env.AST2500   = 1;
-			case 5  : eng->env.AST2400   = 1;
-			case 4  : eng->env.AST2300   = 1; break;
-
-			case 6  : eng->env.AST2300 = 1; eng->env.AST2400 = 1; eng->env.AST1010 = 1; break;
-			case 1  : eng->env.AST1100 = 1; break;
-			default : break;
-		} // End switch ( eng->env.ASTChipType )
+static void print_arg_test_mode(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "test_mode[dec]";
 
-		//------------------------------
-		// [Env]check ASTChipType
-		// [Reg]check SCU_0f0
-		// [Env]setup MAC34_vld
-		//------------------------------
-		if ( ( eng->env.ASTChipType == 4 ) && ( eng->reg.SCU_0f0 & 0x00000001 ) )//only AST2300
-			eng->env.MAC34_vld = 1;
-		else
-			eng->env.MAC34_vld = 0;
+	if (p_eng->arg.run_mode == MODE_NCSI) {
+		printf("%20s| 0: NCSI configuration with    "
+		       "Disable_Channel request\n", item);
+		printf("%20s| (default:%3d)\n", "", DEF_GTESTMODE);
+		printf("%20s| 1: TX/RX delay scan\n", "");
+		printf("%20s| 2: TX/RX delay and IO driving scan\n", "");
+		printf("%20s| 3: NCSI configuration without "
+		       "Disable_Channel request\n", "");
+	} else {
+		printf("%20s| (default:%3d)\n", item, DEF_GTESTMODE);
+		printf("%20s| 0: TX/RX delay margin check\n", "");
+		printf("%20s| 1: TX/RX delay scan\n", "");
+		printf("%20s| 2: TX/RX delay and IO driving scan\n", "");
+		printf("%20s| 3: TX frame - ARP\n", "");
+		printf("%20s| 4: TX frame - random\n", "");
+		printf("%20s| 5: TX frame - user defined (default:0x%8x)\n", "",
+		       DEF_GUSER_DEF_PACKET_VAL);
+	}	
+}
+
+static void print_arg_phy_addr(MAC_ENGINE *p_eng)
+{
+	uint8_t item[32] = "phy_addr[dec]";
+
+	printf("%20s| 0~31: PHY Address (default:%d)\n", item, DEF_GPHY_ADR);
+}
+
+static void print_arg_ieee_select(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "IEEE packet select";
+
+	printf("%20s| 0/1/2 (default:0)  only for test_mode 3,4,5)\n", item);
+}
+
+static void print_arg_delay_scan_range(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "TX/RX delay margin";
+
+	printf("%20s| 1/2/3/... (default:%d) only for test_mode 0\n", item,
+	       DEF_GIOTIMINGBUND);
+	printf("%20s| check range = (orig - margin) ~ (orig + margin)\n", "");
+	print_arg_ieee_select(p_eng);
+}
+
+static void print_arg_channel_num(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "channel_num[dec]";
+
+	printf("%20s| 1~32: Total Number of NCSI Channel (default:%d)\n", item,
+	       DEF_GCHANNEL2NUM);
+}
+
+static void print_arg_package_num(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "package_num[dec]";
+
+	printf("%20s| 1~ 8: Total Number of NCSI Package (default:%d)\n", item,
+	       DEF_GPACKAGE2NUM);
+}
+
+static void print_arg_loop(MAC_ENGINE *p_eng)
+{
+	uint8_t item[32] = "loop_max[dec]";
+
+	printf("%20s| 1G  :  (default:%3d)\n", item, DEF_GLOOP_MAX * 20);
+	printf("%20s| 100M:  (default:%3d)\n", "", DEF_GLOOP_MAX * 2);
+	printf("%20s| 10M :  (default:%3d)\n", "", DEF_GLOOP_MAX);
+}
+
+static void print_arg_ctrl(MAC_ENGINE *p_eng)
+{
+	uint8_t item[32] = "ctrl[hex]";
+
+	printf("%20s| default  : 0x%03x\n", item, DEF_GCTRL);
+	printf("%20s| bit0     : skip PHY init/deinit\n", "");
+	printf("%20s| bit1     : skip PHY deinit\n", "");
+	printf("%20s| bit2     : skip PHY ID check\n", "");
+	printf("%20s| bit3     : reserved\n", "");
+	printf("%20s| bit4     : PHY internal loopback\n", "");
+	printf("%20s| bit5     : MAC internal loopback\n", "");	
+	printf("%20s| bit7~6   : reserved\n", "");
+	printf("%20s| bit8     : RMII 50MHz Output enable\n", "");
+	printf("%20s| bit9     : RMII REFCLK pin input enable\n", "");
+	printf("%20s| bit10    : inverse RGMII RXCLK\n", "");
+	printf("%20s| bit11    : reserved\n", "");
+	printf("%20s| bit12    : TX single packet for each test point\n", "");
+	printf("%20s| bit13    : full range scan\n", "");
+	printf("%20s| bit15~14 : reserved\n", "");
+	printf("%20s| bit16    : NCSI verbose log\n", "");
+	printf("%20s| bit17    : NCSI skip RX error\n", "");
+	printf("%20s| bit31~18 : reserved\n", "");
+}
+
+static void print_arg_speed(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "speed[hex]";
+
+	printf("%20s| bit[0]->1G  bit[1]->100M  bit[2]->10M "
+	       "(default:0x%02lx)\n",
+	       item, DEF_GSPEED);
+}
+
+static void print_arg_mdio_idx(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "mdio_idx[dec]";
+
+	printf("%20s| 0->MDIO1 1->MDIO2", item);
+	
+	if (p_eng->env.mac_num > 2) {
+		printf(" 2->MDIO3 3->MDIO4");
+	}
+	printf("\n");
+}
+
+static void print_arg_mac_idx(MAC_ENGINE *p_eng) 
+{
+	uint8_t item[32] = "mac_idx[dec]";
+
+	printf("%20s| 0->MAC1 1->MAC2", item);
+	
+	if (p_eng->env.mac_num > 2) {
+		printf(" 2->MAC3 3->MAC4");
+	}
+	printf("\n");
+}
+
+static void print_usage(MAC_ENGINE *p_eng)
+{
+	if (MODE_DEDICATED == p_eng->arg.run_mode) {
+		printf("mactest <mac_idx> <mdio_idx> <speed> <ctrl> <loop_max> <test "
+		       "mode> <phy addr> <margin / IEEE select> <user data>\n");
+		print_arg_mac_idx(p_eng);
+		print_arg_mdio_idx(p_eng);
+		print_arg_speed(p_eng);
+		print_arg_ctrl(p_eng);
+		print_arg_loop(p_eng);
+		print_arg_test_mode(p_eng);
+		print_arg_phy_addr(p_eng);
+		print_arg_delay_scan_range(p_eng);
+	} else if (MODE_NCSI == p_eng->arg.run_mode) {
+		printf("ncsitest <idx> <packet num> <channel num> <test mode>"
+		       "<margin> <ctrl> <ARP num>\n");
+		print_arg_mac_idx(p_eng);
+		print_arg_mdio_idx(p_eng);
+		print_arg_package_num(p_eng);
+		print_arg_channel_num(p_eng);
+		print_arg_test_mode(p_eng);
+		print_arg_delay_scan_range(p_eng);
+		print_arg_ctrl(p_eng);
+	} else {
+		printf("unknown run mode\n");
+	}
+}
+
+static void push_reg(MAC_ENGINE *p_eng)
+{
+	/* SCU delay settings */
+	p_eng->io.mac12_1g_delay.value.w = readl(p_eng->io.mac12_1g_delay.addr);
+	p_eng->io.mac12_100m_delay.value.w = readl(p_eng->io.mac12_100m_delay.addr);
+	p_eng->io.mac12_10m_delay.value.w = readl(p_eng->io.mac12_10m_delay.addr);
+		
 #ifdef CONFIG_ASPEED_AST2600
-		eng->env.MAC34_vld = 1;
+	p_eng->io.mac34_1g_delay.value.w = readl(p_eng->io.mac34_1g_delay.addr);
+	p_eng->io.mac34_100m_delay.value.w = readl(p_eng->io.mac34_100m_delay.addr);
+	p_eng->io.mac34_10m_delay.value.w = readl(p_eng->io.mac34_10m_delay.addr);
+	
+	p_eng->io.mac34_drv_reg.value.w = readl(p_eng->io.mac34_drv_reg.addr);
+#else
+	p_eng->io.mac12_drv_reg.value.w = readl(p_eng->io.mac12_drv_reg.addr);
 #endif
 
-//------------------------------------------------------------
-// Get Argument Input
-//------------------------------------------------------------
-		//------------------------------
-		// Load default value
-		//------------------------------
-		if ( eng->ModeSwitch == MODE_NSCI ) {
-			eng->arg.GARPNumCnt     = DEF_GARPNUMCNT;
-			eng->arg.GChannelTolNum = DEF_GCHANNEL2NUM;
-			eng->arg.GPackageTolNum = DEF_GPACKAGE2NUM;
-			eng->arg.GCtrl          = 0;
-			eng->arg.GSpeed         = SET_100MBPS;        // In NCSI mode, we set to 100M bps
-		}
-		else {
-			eng->arg.GUserDVal    = DEF_GUSER_DEF_PACKET_VAL;
-			eng->arg.GPHYADR      = DEF_GPHY_ADR;
-			eng->arg.GLOOP_INFINI = 0;
-			eng->arg.GLOOP_MAX    = 0;
-			eng->arg.GCtrl        = DEF_GCTRL;
-			eng->arg.GSpeed       = DEF_GSPEED;
-		}
-		eng->arg.GChk_TimingBund = DEF_GIOTIMINGBUND;
-		eng->arg.GTestMode       = DEF_GTESTMODE;
+	/* MAC registers */
+	p_eng->reg.maccr.w = mac_reg_read(p_eng, 0x50);
 
-		//------------------------------
-		// Get setting information by user
-		//------------------------------
-		eng->arg.GRun_Mode = (BYTE)atoi(argv[1]);
-		if (argc > 1) {
-			if ( eng->ModeSwitch == MODE_NSCI ) {
-				switch ( argc ) {
-					case 8: eng->arg.GARPNumCnt      = (uint32_t)atoi(argv[7]);
-					case 7: eng->arg.GCtrl           = (BYTE)atoi(argv[6]);
-					case 6: eng->arg.GChk_TimingBund = (BYTE)atoi(argv[5]);
-					case 5: eng->arg.GTestMode       = (BYTE)atoi(argv[4]);
-					case 4: eng->arg.GChannelTolNum  = (BYTE)atoi(argv[3]);
-					case 3: eng->arg.GPackageTolNum  = (BYTE)atoi(argv[2]);
-					default: break;
-				}
-			}
-			else {
-				eng->arg.GARPNumCnt = 0;
-				switch ( argc ) {
-					case 9: eng->arg.GUserDVal       = strtoul(argv[8], &stop_at, 16);
-					case 8: eng->arg.GChk_TimingBund = (BYTE)atoi(argv[7]);
-					case 7: eng->arg.GPHYADR         = (BYTE)atoi(argv[6]);
-					case 6: eng->arg.GTestMode       = (BYTE)atoi(argv[5]);
-					case 5: strcpy( eng->arg.GLOOP_Str, argv[4] );
-						if ( !strcmp( eng->arg.GLOOP_Str, "#" ) )
-							eng->arg.GLOOP_INFINI = 1;
-						else
-							eng->arg.GLOOP_MAX    = (uint32_t)atoi( eng->arg.GLOOP_Str );
-					case 4: eng->arg.GCtrl           = (BYTE)atoi(argv[3]);
-					case 3: eng->arg.GSpeed          = (BYTE)atoi(argv[2]);
-					default: break;
-				}
-			} // End if ( eng->ModeSwitch == MODE_NSCI )
-		}
-		else {
-			// Wrong parameter
-			if ( eng->ModeSwitch == MODE_NSCI ) {
-				if ( eng->env.AST2300 )
-					printf("\nNCSITEST.exe  run_mode  <package_num>  <channel_num>  <test_mode>  <IO margin>\n\n");
-				else
-					printf("\nNCSITEST.exe  run_mode  <package_num>  <channel_num>  <test_mode>\n\n");
-				PrintMode         ( eng );
-				PrintPakNUm       ( eng );
-				PrintChlNUm       ( eng );
-				PrintTest         ( eng );
-				PrintIOTimingBund ( eng );
-			}
-			else {
-#ifdef Enable_MAC_ExtLoop
-				printf("\nMACLOOP.exe  run_mode  <speed>\n\n");
+	p_eng->reg.mac_madr = mac_reg_read(p_eng, 0x08);
+	p_eng->reg.mac_ladr = mac_reg_read(p_eng, 0x0c);
+	p_eng->reg.mac_fear = mac_reg_read(p_eng, 0x40);
+}
+
+static void pop_reg(MAC_ENGINE *p_eng)
+{
+	/* SCU delay settings */
+	writel(p_eng->io.mac12_1g_delay.value.w, p_eng->io.mac12_1g_delay.addr);
+	writel(p_eng->io.mac12_100m_delay.value.w, p_eng->io.mac12_100m_delay.addr);
+	writel(p_eng->io.mac12_10m_delay.value.w, p_eng->io.mac12_10m_delay.addr);	
+
+#ifdef CONFIG_ASPEED_AST2600	
+	writel(p_eng->io.mac34_1g_delay.value.w, p_eng->io.mac34_1g_delay.addr);
+	writel(p_eng->io.mac34_100m_delay.value.w, p_eng->io.mac34_100m_delay.addr);
+	writel(p_eng->io.mac34_10m_delay.value.w, p_eng->io.mac34_10m_delay.addr);
+	
+	writel(p_eng->io.mac34_drv_reg.value.w, p_eng->io.mac34_drv_reg.addr);
 #else
-				if ( eng->env.AST2300 )
-					printf("\nMACTEST.exe  run_mode  <speed>  <ctrl>  <loop_max>  <test_mode>  <phy_adr>  <IO margin>\n\n");
-				else
-					printf("\nMACTEST.exe  run_mode  <speed>  <ctrl>  <loop_max>  <test_mode>  <phy_adr>\n\n");
+	writel(p_eng->io.mac12_drv_reg.value.w, p_eng->io.mac12_drv_reg.addr);
 #endif
-				PrintMode         ( eng );
-				PrintSpeed        ( eng );
-#ifndef Enable_MAC_ExtLoop
-				PrintCtrl         ( eng );
-				PrintLoop         ( eng );
-				PrintTest         ( eng );
-				PrintPHYAdr       ( eng );
-				PrintIOTimingBund ( eng );
-#endif
-			} // End if ( eng->ModeSwitch == MODE_NSCI )
-			Finish_Close( eng );
 
-			return(1);
-		} // End if (argc > 1)
+	/* MAC registers */
+	mac_reg_write(p_eng, 0x50, p_eng->reg.maccr.w);
+	mac_reg_write(p_eng, 0x08, p_eng->reg.mac_madr);
+	mac_reg_write(p_eng, 0x0c, p_eng->reg.mac_ladr);
+	mac_reg_write(p_eng, 0x40, p_eng->reg.mac_fear);
+}
 
-#ifdef Enable_MAC_ExtLoop
-		eng->arg.GChk_TimingBund = 0;
-		eng->arg.GTestMode       = 0;
-		eng->arg.GLOOP_INFINI    = 1;
-//		eng->arg.GCtrl           = 0;
-		eng->arg.GCtrl           = eng->arg.GCtrl & 0x08;
-#endif
+static void finish_close(MAC_ENGINE *p_eng) 
+{
+	nt_log_func_name();		
+	pop_reg(p_eng);
+}
 
-//------------------------------------------------------------
-// Check Argument & Setup
-//------------------------------------------------------------
-		//------------------------------
-		// [Env]check MAC34_vld
-		// [Arg]check GRun_Mode
-		// [Run]setup MAC_idx
-		// [Run]setup MAC_BASE
-		//------------------------------
-		switch ( eng->arg.GRun_Mode ) {
-			case 0:                            printf("\n[MAC1]\n"); eng->run.MAC_idx = 0; eng->run.MAC_BASE = MAC_BASE1; break;
-			case 1:                            printf("\n[MAC2]\n"); eng->run.MAC_idx = 1; eng->run.MAC_BASE = MAC_BASE2; break;
-			case 2: if ( eng->env.MAC34_vld ) {printf("\n[MAC3]\n"); eng->run.MAC_idx = 2; eng->run.MAC_BASE = MAC_BASE3; break;}
-			        else
-			            goto Error_GRun_Mode;
-			case 3: if ( eng->env.MAC34_vld ) {printf("\n[MAC4]\n"); eng->run.MAC_idx = 3; eng->run.MAC_BASE = MAC_BASE4; break;}
-			        else
-			            goto Error_GRun_Mode;
-			default:
-Error_GRun_Mode:
-				printf("Error run_mode!!!\n");
-				PrintMode ( eng );
-				return(1);
-		} // End switch ( eng->arg.GRun_Mode )
-#ifdef CONFIG_ASPEED_AST2600
-switch ( eng->run.MAC_idx ) {
-	case 0: Write_Reg_SCU_DD_AST2600( 0x10c , 0x00000000 | eng->reg.SCU_FPGASel ); break;
-	case 1: Write_Reg_SCU_DD_AST2600( 0x10c , 0x50000000 | eng->reg.SCU_FPGASel ); break;
-	case 2: Write_Reg_SCU_DD_AST2600( 0x10c , 0xa0000000 | eng->reg.SCU_FPGASel ); break;
-	case 3: Write_Reg_SCU_DD_AST2600( 0x10c , 0xf0000000 | eng->reg.SCU_FPGASel ); break;
-} // End switch ( eng->arg.GRun_Mode )
-#endif
-		//------------------------------
-		// [Arg]check GSpeed
-		// [Run]setup Speed_1G
-		// [Run]setup Speed_org
-		//------------------------------
-		switch ( eng->arg.GSpeed ) {
-			case SET_1GBPS          : eng->run.Speed_1G = 1; eng->run.Speed_org[ 0 ] = 1; eng->run.Speed_org[ 1 ] = 0; eng->run.Speed_org[ 2 ] = 0; break;
-			case SET_100MBPS        : eng->run.Speed_1G = 0; eng->run.Speed_org[ 0 ] = 0; eng->run.Speed_org[ 1 ] = 1; eng->run.Speed_org[ 2 ] = 0; break;
-			case SET_10MBPS         : eng->run.Speed_1G = 0; eng->run.Speed_org[ 0 ] = 0; eng->run.Speed_org[ 1 ] = 0; eng->run.Speed_org[ 2 ] = 1; break;
-#ifndef Enable_MAC_ExtLoop
-			case SET_1G_100M_10MBPS : eng->run.Speed_1G = 0; eng->run.Speed_org[ 0 ] = 1; eng->run.Speed_org[ 1 ] = 1; eng->run.Speed_org[ 2 ] = 1; break;
-			case SET_100M_10MBPS    : eng->run.Speed_1G = 0; eng->run.Speed_org[ 0 ] = 0; eng->run.Speed_org[ 1 ] = 1; eng->run.Speed_org[ 2 ] = 1; break;
-#endif
-			default:
-				printf("Error speed!!!\n");
-				PrintSpeed ( eng );
-				return(1);
-		} // End switch ( eng->arg.GSpeed )
+char finish_check(MAC_ENGINE *p_eng, int value) 
+{
+	nt_log_func_name();
 
+	if (p_eng->arg.run_mode == MODE_DEDICATED) {
+		if (p_eng->dat.FRAME_LEN)
+			free(p_eng->dat.FRAME_LEN);
 
-		if ( eng->ModeSwitch == MODE_NSCI ) {
-			//------------------------------
-			// [Arg]check GPackageTolNum
-			// [Arg]check GChannelTolNum
-			//------------------------------
-			if (( eng->arg.GPackageTolNum < 1 ) || ( eng->arg.GPackageTolNum >  8 )) {
-				PrintPakNUm ( eng );
-				return(1);
-			}
-			if (( eng->arg.GChannelTolNum < 1 ) || ( eng->arg.GChannelTolNum > 32 )) {
-				PrintChlNUm ( eng );
-				return(1);
-			}
-			//------------------------------
-			// [Arg]check GCtrl
-			// [Arg]setup GEn_RMII_50MOut
-			// [Arg]setup GEn_MACLoopback
-			// [Arg]setup GEn_FullRange
-			// [Arg]setup GEn_SkipRxEr
-			// [Arg]setup GEn_PrintNCSI
-			//------------------------------
-			eng->arg.GEn_RMII_50MOut = ( eng->arg.GCtrl >> 8 ) & 0x1;
-			eng->arg.GEn_MACLoopback = ( eng->arg.GCtrl >> 7 ) & 0x1;
-			eng->arg.GEn_FullRange   = ( eng->arg.GCtrl >> 6 ) & 0x1;
+		if (p_eng->dat.wp_lst)
+			free(p_eng->dat.wp_lst);
+	}
 
-			eng->arg.GEn_SkipRxEr    = ( eng->arg.GCtrl >> 1 ) & 0x1;
-			eng->arg.GEn_PrintNCSI   = ( eng->arg.GCtrl      ) & 0x1;
-		}
-		else {
-			//------------------------------
-			// [Arg]check GCtrl
-			// [Arg]setup GEn_RMIIPHY_IN
-			// [Arg]setup GEn_RMII_50MOut
-			// [Arg]setup GEn_MACLoopback
-			// [Arg]setup GEn_FullRange
-			// [Arg]setup GEn_SkipChkPHY
-			// [Arg]setup GEn_IntLoopPHY
-			// [Arg]setup GEn_InitPHY
-			// [Arg]setup GDis_RecovPHY
-			// [Arg]setup GEn_PHYAdrInv
-			// [Arg]setup GEn_SinglePacket
-			//------------------------------
-			if ( eng->arg.GCtrl & 0xfffffe00 ) {
-				printf("Error ctrl!!!\n");
-				PrintCtrl ( eng );
-				return(1);
-			}
-			else {
-				eng->arg.GEn_RMIIPHY_IN   = ( eng->arg.GCtrl >> 9 ) & 0x1;
-				eng->arg.GEn_RMII_50MOut  = ( eng->arg.GCtrl >> 8 ) & 0x1;
-				eng->arg.GEn_MACLoopback  = ( eng->arg.GCtrl >> 7 ) & 0x1;
-				eng->arg.GEn_FullRange    = ( eng->arg.GCtrl >> 6 ) & 0x1;
-				eng->arg.GEn_SkipChkPHY   = ( eng->arg.GCtrl >> 5 ) & 0x1;
-				eng->arg.GEn_IntLoopPHY   = ( eng->arg.GCtrl >> 4 ) & 0x1;
-				eng->arg.GEn_InitPHY      = ( eng->arg.GCtrl >> 3 ) & 0x1;
-				eng->arg.GDis_RecovPHY    = ( eng->arg.GCtrl >> 2 ) & 0x1;
-				eng->arg.GEn_PHYAdrInv    = ( eng->arg.GCtrl >> 1 ) & 0x1;
-				eng->arg.GEn_SinglePacket = ( eng->arg.GCtrl      ) & 0x1;
-				if ( !eng->env.AST2400 && eng->arg.GEn_MACLoopback ) {
-					printf("Error ctrl!!!\n");
-					PrintCtrl ( eng );
-					return(1);
-				}
-			} // End if ( eng->arg.GCtrl & 0xffffff83 )
+	p_eng->flg.Err_Flag = p_eng->flg.Err_Flag | value;
 
-			//------------------------------
-			// [Arg]check GPHYADR
-			//------------------------------
-			if ( eng->arg.GPHYADR > 31 ) {
-				printf("Error phy_adr!!!\n");
-				PrintPHYAdr ( eng );
-				return(1);
-			} // End if ( eng->arg.GPHYADR > 31)
-			//------------------------------
-			// [Arg]check GLOOP_MAX
-			// [Arg]check GSpeed
-			// [Arg]setup GLOOP_MAX
-			//------------------------------
-			if ( !eng->arg.GLOOP_MAX )
-				switch ( eng->arg.GSpeed ) {
-					case SET_1GBPS         : eng->arg.GLOOP_MAX = DEF_GLOOP_MAX * 20; break;
-					case SET_100MBPS       : eng->arg.GLOOP_MAX = DEF_GLOOP_MAX * 2 ; break;
-					case SET_10MBPS        : eng->arg.GLOOP_MAX = DEF_GLOOP_MAX     ; break;
-					case SET_1G_100M_10MBPS: eng->arg.GLOOP_MAX = DEF_GLOOP_MAX * 20; break;
-					case SET_100M_10MBPS   : eng->arg.GLOOP_MAX = DEF_GLOOP_MAX * 2 ; break;
-				}
-		} // End if ( eng->ModeSwitch == MODE_NSCI )
+	if (DbgPrn_ErrFlg)
+		printf("\nErr_Flag: [%08x]\n", p_eng->flg.Err_Flag);
 
-//------------------------------------------------------------
-// Check Argument & Setup Running Parameter
-//------------------------------------------------------------
-		//------------------------------
-		// [Env]check AST2300
-		// [Arg]check GTestMode
-		// [Run]setup TM_IOTiming
-		// [Run]setup TM_IOStrength
-		// [Run]setup TM_TxDataEn
-		// [Run]setup TM_RxDataEn
-		// [Run]setup TM_NCSI_DiSChannel
-		// [Run]setup TM_Burst
-		// [Run]setup TM_IEEE
-		// [Run]setup TM_WaitStart
-		//------------------------------
-		eng->run.TM_IOTiming        = 0;
-		eng->run.TM_IOStrength      = 0;
-		eng->run.TM_TxDataEn        = 1;
-		eng->run.TM_RxDataEn        = 1;
-		eng->run.TM_NCSI_DiSChannel = 1; // For ncsitest function
-		eng->run.TM_Burst           = 0; // For mactest function
-		eng->run.TM_IEEE            = 0; // For mactest function
-		eng->run.TM_WaitStart       = 0; // For mactest function
-		eng->run.TM_DefaultPHY      = 0; // For mactest function
-		if ( eng->ModeSwitch == MODE_NSCI ) {
-			switch ( eng->arg.GTestMode ) {
-				case 0 :     break;
-				case 1 :     eng->run.TM_NCSI_DiSChannel = 0; break;
-				case 6 : if ( eng->env.AST2300 ) {
-					     eng->run.TM_IOTiming = 1; break;}
-					 else
-					     goto Error_GTestMode_NCSI;
-				case 7 : if ( eng->env.AST2300 ) {
-					     eng->run.TM_IOTiming = 1; eng->run.TM_IOStrength = 1; break;}
-					 else
-					     goto Error_GTestMode_NCSI;
-				default:
-Error_GTestMode_NCSI:
-					printf("Error test_mode!!!\n");
-					PrintTest ( eng );
-					return(1);
-			} // End switch ( eng->arg.GTestMode )
-		}
-		else {
-			switch ( eng->arg.GTestMode ) {
-				case  0 :     break;
-				case  1 :     eng->run.TM_RxDataEn = 0; eng->run.TM_Burst = 1; eng->run.TM_IEEE = 1; break;
-				case  2 :     eng->run.TM_RxDataEn = 0; eng->run.TM_Burst = 1; eng->run.TM_IEEE = 1; break;
-				case  3 :     eng->run.TM_RxDataEn = 0; eng->run.TM_Burst = 1; eng->run.TM_IEEE = 1; break;
-				case  4 :     eng->run.TM_RxDataEn = 0; eng->run.TM_Burst = 1; eng->run.TM_IEEE = 0; break;
-				case  5 :     eng->run.TM_RxDataEn = 0; eng->run.TM_Burst = 1; eng->run.TM_IEEE = 1; break;
-				case  6 : if ( eng->env.AST2300 ) {
-				              eng->run.TM_IOTiming = 1; break;}
-				          else
-				              goto Error_GTestMode;
-				case  7 : if ( eng->env.AST2300 ) {
-				              eng->run.TM_IOTiming = 1; eng->run.TM_IOStrength = 1; break;}
-				          else
-				              goto Error_GTestMode;
-				case  8 :     eng->run.TM_RxDataEn = 0; eng->run.TM_DefaultPHY = 1; break;
-				case  9 :     eng->run.TM_TxDataEn = 0; eng->run.TM_DefaultPHY = 1; break;
-				case 10 :     eng->run.TM_WaitStart = 1; break;
-				case 11 :     break;
-				default:
-Error_GTestMode:
-					printf("Error test_mode!!!\n");
-					PrintTest ( eng );
-					return(1);
-			} // End switch ( eng->arg.GTestMode )
-#ifdef Enable_MAC_ExtLoop
-			eng->run.TM_DefaultPHY = 1;
-#endif
-		} // End if ( eng->ModeSwitch == MODE_NSCI )
+	if (!p_eng->run.tm_tx_only)
+		FPri_ErrFlag(p_eng, FP_LOG);
 
-		//------------------------------
-		// [Env]check AST2300
-		// [Arg]check GChk_TimingBund
-		// [Run]check TM_Burst
-		// [Arg]setup GIEEE_sel
-		// [Run]setup IO_Bund
-		//------------------------------
-		if ( eng->run.TM_Burst ) {
-			eng->arg.GIEEE_sel = eng->arg.GChk_TimingBund;
-			eng->run.IO_Bund = 0;
+	if (p_eng->run.TM_IOTiming)
+		FPri_ErrFlag(p_eng, FP_IO);
+
+	FPri_ErrFlag(p_eng, STD_OUT);
+
+	if (!p_eng->run.tm_tx_only)
+		FPri_End(p_eng, FP_LOG);
+
+	if (p_eng->run.TM_IOTiming)
+		FPri_End(p_eng, FP_IO);
+
+	FPri_End(p_eng, STD_OUT);
+
+	if (!p_eng->run.tm_tx_only)
+		FPri_RegValue(p_eng, FP_LOG);
+	if (p_eng->run.TM_IOTiming)
+		FPri_RegValue(p_eng, FP_IO);
+
+	finish_close(p_eng);
+
+	if (p_eng->flg.Err_Flag) {
+		return (1);
+	} else {
+		return (0);
+	}
+}
+
+static uint32_t check_test_mode(MAC_ENGINE *p_eng)
+{
+	if (p_eng->arg.run_mode == MODE_NCSI ) {
+		switch (p_eng->arg.test_mode) {
+		case 0:
+			break;
+		case 1:
+			p_eng->run.TM_IOTiming = 1;
+			break;
+		case 2:
+			p_eng->run.TM_IOTiming = 1;
+			p_eng->run.TM_IOStrength = 1;
+			break;
+		case 3:
+			p_eng->run.TM_NCSI_DiSChannel = 0;
+			break;
+		default:
+			printf("Error test_mode!!!\n");
+			print_arg_test_mode(p_eng);
+			return (1);
 		}
-		else {
-			eng->arg.GIEEE_sel = 0;
-			if ( eng->env.AST2300 ) {
-				eng->run.IO_Bund = eng->arg.GChk_TimingBund;
-
-//				if ( !( ( ( 7 >= eng->run.IO_Bund ) && ( eng->run.IO_Bund & 0x1 ) ) ||
-//				        ( eng->run.IO_Bund == 0                                   )
-//				       ) ) {
-//					printf("Error IO margin!!!\n");
-//					PrintIOTimingBund ( eng );
-//					return(1);
-//				}
-				if ( !( ( eng->run.IO_Bund & 0x1 ) ||
-				        ( eng->run.IO_Bund == 0  )
-				       ) ) {
-					printf("Error IO margin!!!\n");
-					PrintIOTimingBund ( eng );
-					return(1);
-				}
-			}
-			else {
-				eng->run.IO_Bund = 0;
-			}
-		} // End if ( eng->run.TM_Burst )
-//------------------------------------------------------------
-// Setup Environment
-//------------------------------------------------------------
-		//------------------------------
-		// [Env]check AST1010
-		// [Env]check AST2300
-		// [Reg]check SCU_070
-		// [Env]setup MAC_Mode
-		// [Env]setup MAC1_1Gvld
-		// [Env]setup MAC2_1Gvld
-		// [Env]setup MAC1_RMII
-		// [Env]setup MAC2_RMII
-		// [Env]setup MAC2_vld
-		//------------------------------
-		if ( eng->env.AST2300 ) {
-			eng->env.MAC_Mode   = ( eng->reg.SCU_070 >> 6 ) & 0x3;
-			eng->env.MAC1_1Gvld = ( eng->env.MAC_Mode & 0x1 ) ? 1 : 0;//1:RGMII, 0:RMII
-			eng->env.MAC2_1Gvld = ( eng->env.MAC_Mode & 0x2 ) ? 1 : 0;//1:RGMII, 0:RMII
-			eng->env.MAC1_RMII  = !eng->env.MAC1_1Gvld;
-			eng->env.MAC2_RMII  = !eng->env.MAC2_1Gvld;
-			eng->env.MAC2_vld   = 1;
-#ifdef CONFIG_ASPEED_AST2600
-			eng->env.MAC3_1Gvld = ( eng->reg.SCU_510 & 0x1 ) ? 1 : 0;//1:RGMII, 0:RMII
-			eng->env.MAC4_1Gvld = ( eng->reg.SCU_510 & 0x2 ) ? 1 : 0;//1:RGMII, 0:RMII
-			eng->env.MAC3_RMII  = !eng->env.MAC3_1Gvld;
-			eng->env.MAC4_RMII  = !eng->env.MAC4_1Gvld;
-#endif
+	} else {
+		switch (p_eng->arg.test_mode) {
+		case 0:
+			break;
+		case 1:
+			p_eng->run.TM_IOTiming = 1;
+			break;
+		case 2:
+			p_eng->run.TM_IOTiming = 1;
+			p_eng->run.TM_IOStrength = 1;
+			break;
+		case 3:
+			/* TX ARP frame */
+			p_eng->run.TM_RxDataEn = 0;
+			p_eng->run.tm_tx_only = 1;
+			p_eng->run.TM_IEEE = 0;
+			break;
+		case 4:
+		case 5:			
+			p_eng->run.TM_RxDataEn = 0;
+			p_eng->run.tm_tx_only = 1;
+			p_eng->run.TM_IEEE = 1;
+			break;
+		default:
+			printf("Error test_mode!!!\n");
+			print_arg_test_mode(p_eng);
+			return (1);
 		}
-		else {
-			eng->env.MAC_Mode   = ( eng->reg.SCU_070 >> 6 ) & 0x7;
-			eng->env.MAC1_1Gvld = ( eng->env.MAC_Mode == 0x0 ) ? 1 : 0;
-			eng->env.MAC2_1Gvld = 0;
-
-			switch ( eng->env.MAC_Mode ) {
-				case 0 : eng->env.MAC1_RMII = 0; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 0; break; //000: Select GMII(MAC#1) only
-				case 1 : eng->env.MAC1_RMII = 0; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 1; break; //001: Select MII (MAC#1) and MII(MAC#2)
-				case 2 : eng->env.MAC1_RMII = 1; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 1; break; //010: Select RMII(MAC#1) and MII(MAC#2)
-				case 3 : eng->env.MAC1_RMII = 0; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 0; break; //011: Select MII (MAC#1) only
-				case 4 : eng->env.MAC1_RMII = 1; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 0; break; //100: Select RMII(MAC#1) only
-//				case 5 : eng->env.MAC1_RMII = 0; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 0; break; //101: Reserved
-				case 6 : eng->env.MAC1_RMII = 1; eng->env.MAC2_RMII = 1; eng->env.MAC2_vld = 1; break; //110: Select RMII(MAC#1) and RMII(MAC#2)
-//				case 7 : eng->env.MAC1_RMII = 0; eng->env.MAC2_RMII = 0; eng->env.MAC2_vld = 0; break; //111: Disable dual MAC
-				default:
-					return( Finish_Check( eng, Err_Flag_MACMode ) );
-			}
-		} // End if ( eng->env.AST2300 )
-		eng->env.MAC_atlast_1Gvld = eng->env.MAC1_1Gvld | eng->env.MAC2_1Gvld;
+	}
 
-//------------------------------------------------------------
-// Check & Setup Environment
-//------------------------------------------------------------
-		//------------------------------
-		// [Phy]setup PHY_BASE
-		// [Env]setup MAC_1Gvld
-		// [Env]setup MAC_RMII
-		//------------------------------
-		if ( eng->run.MAC_idx == 0 ) {
-			if ( eng->arg.GEn_PHYAdrInv ) {
-				eng->phy.PHY_BASE    = MAC_BASE2;
-				eng->run.MAC_idx_PHY = 1;
-			} else {
-				eng->phy.PHY_BASE    = MAC_BASE1;
-				eng->run.MAC_idx_PHY = 0;
-			}
-			eng->env.MAC_1Gvld = eng->env.MAC1_1Gvld;
-			eng->env.MAC_RMII  = eng->env.MAC1_RMII;
+	if (0 == p_eng->run.TM_IOStrength) {
+		p_eng->io.drv_upper_bond = 0;
+	}
+	return 0;
+}
 
-			if ( eng->run.Speed_1G & !eng->env.MAC1_1Gvld ) {
-				printf("\nMAC1 don't support 1Gbps !!!\n");
-				return( Finish_Check( eng, Err_Flag_MACMode ) );
-			}
-		}
-		else if ( eng->run.MAC_idx == 1 ) {
-			if ( eng->arg.GEn_PHYAdrInv ) {
-				eng->phy.PHY_BASE    = MAC_BASE1;
-				eng->run.MAC_idx_PHY = 0;
-			} else {
-				eng->phy.PHY_BASE    = MAC_BASE2;
-				eng->run.MAC_idx_PHY = 1;
-			}
-			eng->env.MAC_1Gvld = eng->env.MAC2_1Gvld;
-			eng->env.MAC_RMII  = eng->env.MAC2_RMII;
+/**
+ * @brief enable/disable MAC
+ * @param[in] p_eng - MAC_ENGINE
+ * 
+ * AST2600 uses synchronous reset scheme, so the bits for reset assert and 
+ * deassert are the same
+ * e.g. MAC#1: SCU04[11] = 1 --> MAC#1 reset assert
+ *                       = 0 --> MAC#1 reset de-assert
+ * 
+ * AST2600 uses asynchronous reset scheme, so the bits for reset assert and 
+ * deassert are different
+ * e.g. MAC#1: SCU40[11] = 1 --> MAC#1 reset assert
+ *             SCU44[11] = 1 --> MAC#1 reset de-assert
+ * 
+ * The same design concept is also adopted on clock stop/start.
+ */
+void scu_disable_mac(MAC_ENGINE *p_eng) 
+{
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	const struct mac_ctrl_desc *p_mac = &mac_ctrl_lookup_tbl[mac_idx];
+	uint32_t reg;
+
+	debug("MAC%d:reset assert=0x%02x[%08x] deassert=0x%02x[%08x]\n",
+	      mac_idx, p_mac->base_reset_assert, p_mac->bit_reset_assert,
+	      p_mac->base_reset_deassert, p_mac->bit_reset_deassert);
+	debug("MAC%d:clock stop=0x%02x[%08x] start=0x%02x[%08x]\n", mac_idx,
+	      p_mac->base_clk_stop, p_mac->bit_clk_stop, p_mac->base_clk_start,
+	      p_mac->bit_clk_start);
+
+	reg = SCU_RD(p_mac->base_reset_assert);
+	debug("reset reg: 0x%08x\n", reg);
+	reg |= p_mac->bit_reset_assert;
+	debug("reset reg: 0x%08x\n", reg);
+	SCU_WR(reg, p_mac->base_reset_assert);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_reset_assert);
+	
+	reg = SCU_RD(p_mac->base_clk_stop);
+	debug("clock reg: 0x%08x\n", reg);
+	reg |= p_mac->bit_clk_stop;
+	debug("clock reg: 0x%08x\n", reg);
+	SCU_WR(reg, p_mac->base_clk_stop);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_clk_stop);
+}
 
-			if ( eng->run.Speed_1G & !eng->env.MAC2_1Gvld ) {
-				printf("\nMAC2 don't support 1Gbps !!!\n");
-				return( Finish_Check( eng, Err_Flag_MACMode ) );
-			}
-			if ( !eng->env.MAC2_vld ) {
-				printf("\nMAC2 not valid !!!\n");
-				return( Finish_Check( eng, Err_Flag_MACMode ) );
-			}
-		}
-		else {
-			if ( eng->run.MAC_idx == 2 ) {
-				if ( eng->arg.GEn_PHYAdrInv ) {
-					eng->phy.PHY_BASE    = MAC_BASE4;
-					eng->run.MAC_idx_PHY = 3;
-				} else {
-					eng->phy.PHY_BASE    = MAC_BASE3;
-					eng->run.MAC_idx_PHY = 2;
-				}
-#ifdef CONFIG_ASPEED_AST2600
-				eng->env.MAC_1Gvld = eng->env.MAC3_1Gvld;
-				eng->env.MAC_RMII  = eng->env.MAC3_RMII;
+void scu_enable_mac(MAC_ENGINE *p_eng) 
+{
+	uint32_t mac_idx = p_eng->run.mac_idx;
+	const struct mac_ctrl_desc *p_mac = &mac_ctrl_lookup_tbl[mac_idx];
+	uint32_t reg;
+
+	debug("MAC%d:reset assert=0x%02x[%08x] deassert=0x%02x[%08x]\n",
+	      mac_idx, p_mac->base_reset_assert, p_mac->bit_reset_assert,
+	      p_mac->base_reset_deassert, p_mac->bit_reset_deassert);
+	debug("MAC%d:clock stop=0x%02x[%08x] start=0x%02x[%08x]\n", mac_idx,
+	      p_mac->base_clk_stop, p_mac->bit_clk_stop, p_mac->base_clk_start,
+	      p_mac->bit_clk_start);
 
-				if ( eng->run.Speed_1G & !eng->env.MAC3_1Gvld ) {
-					printf("\nMAC3 don't support 1Gbps !!!\n");
-					return( Finish_Check( eng, Err_Flag_MACMode ) );
-				}
-#endif
-			} else {
-				if ( eng->arg.GEn_PHYAdrInv ) {
-					eng->phy.PHY_BASE    = MAC_BASE3;
-					eng->run.MAC_idx_PHY = 2;
-				} else {
-					eng->phy.PHY_BASE    = MAC_BASE4;
-					eng->run.MAC_idx_PHY = 3;
-				}
 #ifdef CONFIG_ASPEED_AST2600
-				eng->env.MAC_1Gvld = eng->env.MAC4_1Gvld;
-				eng->env.MAC_RMII  = eng->env.MAC4_RMII;
-
-				if ( eng->run.Speed_1G & !eng->env.MAC4_1Gvld ) {
-					printf("\nMAC4 don't support 1Gbps !!!\n");
-					return( Finish_Check( eng, Err_Flag_MACMode ) );
-				}
+	reg = SCU_RD(p_mac->base_reset_deassert);
+	debug("reset reg: 0x%08x\n", reg);
+	reg |= p_mac->bit_reset_deassert;
+	debug("reset reg: 0x%08x\n", reg);
+	SCU_WR(reg, p_mac->base_reset_deassert);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_reset_deassert);
+	
+	reg = SCU_RD(p_mac->base_clk_start);
+	debug("clock reg: 0x%08x\n", reg);
+	reg |= p_mac->bit_clk_start;
+	debug("clock reg: 0x%08x\n", reg);
+	SCU_WR(reg, p_mac->base_clk_start);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_clk_start);
+#else
+	reg = SCU_RD(p_mac->base_reset_deassert);
+	reg &= ~p_mac->bit_reset_deassert;
+	SCU_WR(reg, p_mac->base_reset_deassert);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_reset_deassert);
+	
+	reg = SCU_RD(p_mac->base_clk_start);
+	reg &= ~p_mac->bit_clk_start;
+	SCU_WR(reg, p_mac->base_clk_start);
+	/* issue a dummy read to ensure command is in order */
+	reg = SCU_RD(p_mac->base_clk_start);
 #endif
-			}
+}
+
+/**
+ * @brief setup mdc/mdio pinmix
+ * @todo push/pop pinmux registers
+*/
+void scu_set_pinmux(MAC_ENGINE *p_eng)
+{
+	uint32_t reg;
+	nt_log_func_name();
+
 #ifdef CONFIG_ASPEED_AST2600
+	/* MDC/MDIO pinmux */
+	switch (p_eng->run.mdio_idx) {
+	case 0:
+		reg = SCU_RD(0x430) | GENMASK(17, 16);
+		SCU_WR(reg, 0x430);
+		break;
+	case 1:
+		reg = SCU_RD(0x470) & ~GENMASK(13, 12);
+		SCU_WR(reg, 0x470);
+		reg = SCU_RD(0x410) | GENMASK(13, 12);
+		SCU_WR(reg, 0x410);
+		break;
+	case 2:
+		reg = SCU_RD(0x470) & ~GENMASK(1, 0);
+		SCU_WR(reg, 0x470);
+		reg = SCU_RD(0x410) | GENMASK(1, 0);
+		SCU_WR(reg, 0x410);
+		break;
+	case 3:
+		reg = SCU_RD(0x470) & ~GENMASK(3, 2);
+		SCU_WR(reg, 0x470);
+		reg = SCU_RD(0x410) | GENMASK(3, 2);
+		SCU_WR(reg, 0x410);
+		break;
+	default:
+		printf("%s:undefined MDIO idx %d\n", __func__,
+		       p_eng->run.mdio_idx);
+	}
+
+	switch (p_eng->run.mac_idx) {
+	case 0:
+#ifdef CONFIG_FPGA_ASPEED
+		setbits_le32(SCU_BASE + 0x410, BIT(4));
 #else
-			eng->env.MAC_1Gvld = 0;
-			eng->env.MAC_RMII  = 1;
+		setbits_le32(SCU_BASE + 0x400, GENMASK(11, 0));
+		setbits_le32(SCU_BASE + 0x410, BIT(4));
+		clrbits_le32(SCU_BASE + 0x470, BIT(4));
+#endif
+		break;
+	case 1:
+		setbits_le32(SCU_BASE + 0x400, GENMASK(23, 12));
+		setbits_le32(SCU_BASE + 0x410, BIT(5));
+		clrbits_le32(SCU_BASE + 0x470, BIT(5));
+		break;
+	case 2:
+		setbits_le32(SCU_BASE + 0x410, GENMASK(27, 16));
+		setbits_le32(SCU_BASE + 0x410, BIT(6));
+		clrbits_le32(SCU_BASE + 0x470, BIT(6));
+		break;
+	case 3:
+		clrbits_le32(SCU_BASE + 0x410, GENMASK(31, 28));
+		setbits_le32(SCU_BASE + 0x4b0, GENMASK(31, 28));
+		clrbits_le32(SCU_BASE + 0x474, GENMASK(7, 0));
+		clrbits_le32(SCU_BASE + 0x414, GENMASK(7, 0));
+		setbits_le32(SCU_BASE + 0x4b4, GENMASK(7, 0));
+		setbits_le32(SCU_BASE + 0x410, BIT(7));
+		clrbits_le32(SCU_BASE + 0x470, BIT(7));
+		break;
 
-			if ( eng->run.Speed_1G ) {
-				printf("\nMAC3/MAC4 don't support 1Gbps !!!\n");
-				return( Finish_Check( eng, Err_Flag_MACMode ) );
-			}
-#endif			
-		} // End if ( eng->run.MAC_idx == 0 )
+	}
 
-		if ( !eng->env.MAC_1Gvld )
-			eng->run.Speed_org[ 0 ] = 0;
+	debug("SCU410: %08x %08x %08x %08x\n", SCU_RD(0x410), SCU_RD(0x414), SCU_RD(0x418), SCU_RD(0x41c));
+	debug("SCU430: %08x %08x %08x %08x\n", SCU_RD(0x430), SCU_RD(0x434), SCU_RD(0x438), SCU_RD(0x43c));
+	debug("SCU470: %08x %08x %08x %08x\n", SCU_RD(0x470), SCU_RD(0x474), SCU_RD(0x478), SCU_RD(0x47c));
+	debug("SCU4b0: %08x %08x %08x %08x\n", SCU_RD(0x4b0), SCU_RD(0x4b4), SCU_RD(0x4b8), SCU_RD(0x4bc));
+#else
+	/* MDC/MDIO pinmux */
+	if (p_eng->run.mdio_idx == 0) {
+		setbits_le32(SCU_BASE + 88, GENMASK(31, 30));
+	} else {
+		clrsetbits_le32(SCU_BASE + 90, BIT(6), BIT(2));
+	}
 
-		if ( ( eng->ModeSwitch == MODE_NSCI ) && ( !eng->env.MAC_RMII ) ) {
-			printf("\nNCSI must be RMII interface !!!\n");
-			return( Finish_Check( eng, Err_Flag_MACMode ) );
+	/* enable MAC#nLINK pin */
+	setbits_le32(SCU_BASE + 80, BIT(p_eng->run.mac_idx));
+#endif
+}
+
+static uint32_t check_mac_idx(MAC_ENGINE *p_eng)
+{
+	/* check if legal run_idx */
+	if (p_eng->arg.mac_idx > p_eng->env.mac_num - 1) {
+		printf("invalid run_idx = %d\n", p_eng->arg.mac_idx);	
+		return 1;
+	}
+	
+	return 0;
+}
+
+static void calc_loop_check_num(MAC_ENGINE *p_eng)
+{
+	nt_log_func_name();
+
+	if (p_eng->run.IO_MrgChk ||
+	    (p_eng->arg.run_speed == SET_1G_100M_10MBPS) ||
+	    (p_eng->arg.run_speed == SET_100M_10MBPS)) {
+		p_eng->run.LOOP_CheckNum = p_eng->run.loop_max;
+	} else {
+		switch (p_eng->arg.run_speed) {
+		case SET_1GBPS:
+			p_eng->run.CheckBuf_MBSize = MOVE_DATA_MB_SEC;
+			break;
+		case SET_100MBPS:
+			p_eng->run.CheckBuf_MBSize = (MOVE_DATA_MB_SEC >> 3);
+			break;
+		case SET_10MBPS:
+			p_eng->run.CheckBuf_MBSize = (MOVE_DATA_MB_SEC >> 6);
+			break;
 		}
+		p_eng->run.LOOP_CheckNum =
+		    (p_eng->run.CheckBuf_MBSize /
+		     (((p_eng->dat.Des_Num * DMA_PakSize) >> 20) + 1));
+	}
+}
 
-		//------------------------------
-		// [Env]setup MHCLK_Ratio
-		//------------------------------
-#ifdef CONFIG_ASPEED_AST2600
-#else
-		eng->env.MHCLK_Ratio = ( eng->reg.SCU_008 >> 16 ) & 0x7;
-		if ( eng->env.MAC_atlast_1Gvld ) {
-			if ( eng->env.MHCLK_Ratio != 2 ) {
-				FindErr( eng, Err_Flag_MHCLK_Ratio );
-//				return( Finish_Check( eng, Err_Flag_MHCLK_Ratio ) );
-			}
+static uint32_t setup_running(MAC_ENGINE *p_eng)
+{
+	uint32_t n_desp_min;
+
+	if (0 != check_mac_idx(p_eng)) {
+		return 1;
+	}
+	p_eng->run.mac_idx = p_eng->arg.mac_idx;
+	p_eng->run.mac_base = mac_base_lookup_tbl[p_eng->run.mac_idx];	
+	
+	p_eng->run.mdio_idx = p_eng->arg.mdio_idx;
+	p_eng->run.mdio_base = mdio_base_lookup_tbl[p_eng->run.mdio_idx];
+
+	p_eng->run.is_rgmii = p_eng->env.is_1g_valid[p_eng->run.mac_idx];
+
+	/* 
+	 * FIXME: too ugly...
+	 * check if legal speed setup
+	 * */
+	switch (p_eng->arg.run_speed) {
+	case SET_1GBPS:
+		p_eng->run.speed_cfg[0] = 1;
+		p_eng->run.speed_cfg[1] = 0;
+		p_eng->run.speed_cfg[2] = 0;
+		if (0 == p_eng->env.is_1g_valid[p_eng->run.mac_idx]) {
+			printf("MAC%d doesn't support 1G\n",
+			       p_eng->run.mac_idx);
+			return 1;
 		}
-		else {
-			if ( eng->env.MHCLK_Ratio != 4 ) {
-				FindErr( eng, Err_Flag_MHCLK_Ratio );
-//				return( Finish_Check( eng, Err_Flag_MHCLK_Ratio ) );
-			}
+		break;
+	case SET_100MBPS:
+		p_eng->run.speed_cfg[0] = 0;
+		p_eng->run.speed_cfg[1] = 1;
+		p_eng->run.speed_cfg[2] = 0;
+		break;
+	case SET_10MBPS:
+		p_eng->run.speed_cfg[0] = 0;
+		p_eng->run.speed_cfg[1] = 0;
+		p_eng->run.speed_cfg[2] = 1;
+		break;
+	case SET_1G_100M_10MBPS:
+		p_eng->run.speed_cfg[0] = 1;
+		p_eng->run.speed_cfg[1] = 1;
+		p_eng->run.speed_cfg[2] = 1;
+		break;
+	case SET_100M_10MBPS:
+		p_eng->run.speed_cfg[0] = 0;
+		p_eng->run.speed_cfg[1] = 1;
+		p_eng->run.speed_cfg[2] = 1;
+		break;
+	default:
+		printf("Error speed!!!\n");
+		print_arg_speed(p_eng);
+		return (1);
+	}	
+
+	if (p_eng->arg.run_mode == MODE_NCSI) {
+		/*
+		 * [Arg]check GPackageTolNum
+		 * [Arg]check GChannelTolNum
+		 */
+		if ((p_eng->arg.GPackageTolNum < 1) ||
+		    (p_eng->arg.GPackageTolNum > 8)) {
+			print_arg_package_num(p_eng);
+			return (1);
 		}
-#endif
-
-//------------------------------------------------------------
-// Parameter Initial
-//------------------------------------------------------------
-		//------------------------------
-		// [Reg]setup SCU_004_rstbit
-		// [Reg]setup SCU_004_mix
-		// [Reg]setup SCU_004_dis
-		// [Reg]setup SCU_004_en
-		//------------------------------
-		if ( eng->arg.GEn_PHYAdrInv ) {
-			eng->reg.SCU_004_rstbit = 0x00001800; //Reset Engine
+		if ((p_eng->arg.GChannelTolNum < 1) ||
+		    (p_eng->arg.GChannelTolNum > 32)) {
+			print_arg_channel_num(p_eng);
+			return (1);
 		}
-		else {
-			if ( eng->run.MAC_idx == 1 )
-				eng->reg.SCU_004_rstbit = 0x00001000; //Reset Engine
-			else
-				eng->reg.SCU_004_rstbit = 0x00000800; //Reset Engine
+	} else {
+		/* [Arg]check ctrl */		
+		if (p_eng->arg.ctrl.w & 0xfffc0000) {
+			print_arg_ctrl(p_eng);
+			return (1);
 		}
-		eng->reg.SCU_004_mix = eng->reg.SCU_004;
-		eng->reg.SCU_004_en  = eng->reg.SCU_004_mix & (~eng->reg.SCU_004_rstbit);
-		eng->reg.SCU_004_dis = eng->reg.SCU_004_mix |   eng->reg.SCU_004_rstbit;
 
-		//------------------------------
-		// [Reg]setup SCU_00c_clkbit
-		// [Reg]setup SCU_00c_mix
-		// [Reg]setup SCU_00c_dis
-		// [Reg]setup SCU_00c_en
-		//------------------------------
-		if ( eng->env.AST2300 ) {
-//			if ( eng->arg.GEn_PHYAdrInv ) {
-				if ( eng->env.MAC34_vld )
-					eng->reg.SCU_00c_clkbit = 0x00f00000; //Clock Stop Control
-				else
-					eng->reg.SCU_00c_clkbit = 0x00300000; //Clock Stop Control
-//			}
-//			else {
-//				switch ( eng->run.MAC_idx ) {
-//					case 3: eng->reg.SCU_00c_clkbit = 0x00800000; break; //Clock Stop Control
-//					case 2: eng->reg.SCU_00c_clkbit = 0x00400000; break; //Clock Stop Control
-//					case 1: eng->reg.SCU_00c_clkbit = 0x00200000; break; //Clock Stop Control
-//					case 0: eng->reg.SCU_00c_clkbit = 0x00100000; break; //Clock Stop Control
-//			}
+		if (p_eng->arg.phy_addr > 31) {
+			printf("Error phy_adr!!!\n");
+			print_arg_phy_addr(p_eng);
+			return (1);
 		}
-		else {
-			eng->reg.SCU_00c_clkbit = 0x00000000;
-		} // End if ( eng->env.AST2300 )
-		eng->reg.SCU_00c_mix = eng->reg.SCU_00c;
-		eng->reg.SCU_00c_en  = eng->reg.SCU_00c_mix & (~eng->reg.SCU_00c_clkbit);
-		eng->reg.SCU_00c_dis = eng->reg.SCU_00c_mix |   eng->reg.SCU_00c_clkbit;
 
-		//------------------------------
-		// [Reg]setup SCU_048_mix
-		// [Reg]setup SCU_048_check
-		// [Reg]setup SCU_048_default
-		// [Reg]setup SCU_074_mix
-		//------------------------------
-		eng->reg.SCU_048_mix     = ( eng->reg.SCU_048 & 0xfc000000 );
-		eng->reg.SCU_048_check   = ( eng->reg.SCU_048 & 0x03ffffff );
-		eng->reg.SCU_048_default =   SCU_48h_AST2500  & 0x03ffffff;
-
-		if ( eng->arg.GEn_RMII_50MOut & eng->env.MAC_RMII ) {
-			switch ( eng->run.MAC_idx ) {
-				case 1: eng->reg.SCU_048_mix = eng->reg.SCU_048_mix | 0x40000000; break;
-				case 0: eng->reg.SCU_048_mix = eng->reg.SCU_048_mix | 0x20000000; break;
+		if (0 == p_eng->arg.loop_max) {
+			switch (p_eng->arg.run_speed) {
+			case SET_1GBPS:
+				p_eng->arg.loop_max = DEF_GLOOP_MAX * 20;
+				break;
+			case SET_100MBPS:
+				p_eng->arg.loop_max = DEF_GLOOP_MAX * 2;
+				break;
+			case SET_10MBPS:
+				p_eng->arg.loop_max = DEF_GLOOP_MAX;
+				break;
+			case SET_1G_100M_10MBPS:
+				p_eng->arg.loop_max = DEF_GLOOP_MAX * 20;
+				break;
+			case SET_100M_10MBPS:
+				p_eng->arg.loop_max = DEF_GLOOP_MAX * 2;
+				break;
 			}
+		}		
+	}
+
+	if (0 != check_test_mode(p_eng)) {
+		return 1;
+	}
+
+	if (p_eng->run.tm_tx_only) {
+		p_eng->run.ieee_sel = p_eng->arg.ieee_sel;
+		p_eng->run.delay_margin = 0;
+	} else {
+		p_eng->run.ieee_sel = 0;			
+		p_eng->run.delay_margin = p_eng->arg.delay_scan_range;
+#if 0
+		if (p_eng->run.delay_margin == 0) {
+			printf("Error IO margin!!!\n");
+			print_arg_delay_scan_range(p_eng);
+			return(1);
 		}
-		eng->reg.SCU_074_mix = eng->reg.SCU_074;
+#endif								
+	}
 
-		//------------------------------
-		// [Reg]setup MAC_050
-		//------------------------------
-		if ( eng->ModeSwitch == MODE_NSCI )
-			// Set to 100Mbps and Enable RX broabcast packets and CRC_APD and Full duplex
-			eng->reg.MAC_050 = 0x000a0500;// [100Mbps] RX_BROADPKT_EN & CRC_APD & Full duplex
-//			eng->reg.MAC_050 = 0x000a4500;// [100Mbps] RX_BROADPKT_EN & RX_ALLADR & CRC_APD & Full duplex
+	if (!p_eng->env.is_1g_valid[p_eng->run.mac_idx])
+		p_eng->run.speed_cfg[ 0 ] = 0;
+
+
+	if (p_eng->arg.run_mode == MODE_NCSI) {
+		if (p_eng->run.is_rgmii) {
+			printf("\nNCSI must be RMII interface !!!\n");
+			return (finish_check(p_eng, Err_Flag_MACMode));	
+		}
+
+#ifdef CONFIG_ASPEED_AST2600
+		/**
+		 * NCSI needs for 3.3V IO voltage but MAC#1 & MAC#2 only
+		 * support 1.8V. So NCSI can only runs on MAC#3 or MAC#4
+		 */
+		if (p_eng->run.mac_idx < 2) {
+			printf("\nNCSI must runs on MAC#3 or MAC#4\n");
+			return (finish_check(p_eng, Err_Flag_MACMode));	
+		}
+#endif		
+	}
+	
+	p_eng->run.tdes_base = (uint32_t)(&tdes_buf[0]);
+	p_eng->run.rdes_base = (uint32_t)(&rdes_buf[0]);
+
+	if (p_eng->run.TM_IOTiming || p_eng->run.delay_margin)
+		p_eng->run.IO_MrgChk = 1;
+	else
+		p_eng->run.IO_MrgChk = 0;
+
+	p_eng->phy.Adr         = p_eng->arg.phy_addr;
+	p_eng->phy.loopback    = p_eng->arg.ctrl.b.phy_int_loopback;
+	p_eng->phy.default_phy = p_eng->run.TM_DefaultPHY;
+
+	p_eng->run.loop_max = p_eng->arg.loop_max;
+	calc_loop_check_num(p_eng);
+
+	//------------------------------------------------------------
+	// Descriptor Number
+	//------------------------------------------------------------
+	//------------------------------
+	// [Dat]setup Des_Num
+	// [Dat]setup DMABuf_Size
+	// [Dat]setup DMABuf_Num
+	//------------------------------
+	if (p_eng->arg.run_mode == MODE_DEDICATED) {
+		n_desp_min = p_eng->run.TM_IOTiming;
+
+		if (p_eng->arg.ctrl.b.phy_skip_check &&
+		    (p_eng->arg.test_mode == 0))
+			/* for SMSC's LAN9303 issue */
+			p_eng->dat.Des_Num = 114;
 		else {
-#ifdef Enable_MAC_ExtLoop
-//			eng->reg.MAC_050 = 0x00000100;// Full duplex
-			eng->reg.MAC_050 = 0x00004100;// RX_ALLADR & Full duplex
+			switch (p_eng->arg.run_speed) {
+			case SET_1GBPS:
+				p_eng->dat.Des_Num =
+				    p_eng->run.delay_margin
+					? 100
+					: (n_desp_min) ? 512 : 4096;
+				break;
+			case SET_100MBPS:
+				p_eng->dat.Des_Num =
+				    p_eng->run.delay_margin
+					? 100
+					: (n_desp_min) ? 512 : 4096;
+				break;
+			case SET_10MBPS:
+				p_eng->dat.Des_Num =
+				    p_eng->run.delay_margin
+					? 100
+					: (n_desp_min) ? 100 : 830;
+				break;
+			case SET_1G_100M_10MBPS:
+				p_eng->dat.Des_Num =
+				    p_eng->run.delay_margin
+					? 100
+					: (n_desp_min) ? 100 : 830;
+				break;
+			case SET_100M_10MBPS:
+				p_eng->dat.Des_Num =
+				    p_eng->run.delay_margin
+					? 100
+					: (n_desp_min) ? 100 : 830;
+				break;
+			}
+		}
+		/* keep in order: Des_Num -> DMABuf_Size -> DMABuf_Num */
+		p_eng->dat.Des_Num_Org = p_eng->dat.Des_Num;
+		p_eng->dat.DMABuf_Size = DMA_BufSize;
+		p_eng->dat.DMABuf_Num = DMA_BufNum;
+
+		if (DbgPrn_Info) {
+			printf("CheckBuf_MBSize : %d\n",
+			       p_eng->run.CheckBuf_MBSize);
+			printf("LOOP_CheckNum   : %d\n",
+			       p_eng->run.LOOP_CheckNum);
+			printf("Des_Num         : %d\n", p_eng->dat.Des_Num);
+			printf("DMA_BufSize     : %d bytes\n",
+			       p_eng->dat.DMABuf_Size);
+			printf("DMA_BufNum      : %d\n", p_eng->dat.DMABuf_Num);
+			printf("DMA_PakSize     : %d\n", DMA_PakSize);
+			printf("\n");
+		}
+		if (2 > p_eng->dat.DMABuf_Num)
+			return (finish_check(p_eng, Err_Flag_DMABufNum));
+	}
+
+	return 0;
+}
+
+/**
+ * @brief setup environment according to HW strap registers
+*/
+static uint32_t setup_interface(MAC_ENGINE *p_eng)
+{
+#ifdef CONFIG_ASPEED_AST2600
+	hw_strap1_t strap1;
+	hw_strap2_t strap2;
+	
+	strap1.w = SCU_RD(0x500);
+	strap2.w = SCU_RD(0x510);
+
+	p_eng->env.is_1g_valid[0] = strap1.b.mac1_interface;
+	p_eng->env.is_1g_valid[1] = strap1.b.mac2_interface;
+	p_eng->env.is_1g_valid[2] = strap2.b.mac3_interface;
+	p_eng->env.is_1g_valid[3] = strap2.b.mac4_interface;
+	
+	p_eng->env.at_least_1g_valid =
+	    p_eng->env.is_1g_valid[0] | p_eng->env.is_1g_valid[1] |
+	    p_eng->env.is_1g_valid[2] | p_eng->env.is_1g_valid[3];
 #else
-			eng->reg.MAC_050 = 0x00004500;// RX_ALLADR & CRC_APD & Full duplex
-#endif
-#ifdef Enable_Runt
-			eng->reg.MAC_050 = eng->reg.MAC_050 | 0x00001000;
-#endif
-#if defined(PHY_SPECIAL)
-			eng->reg.MAC_050 = eng->reg.MAC_050 | 0x00002000;
-#elif defined(Enable_Jumbo)
-			eng->reg.MAC_050 = eng->reg.MAC_050 | 0x00002000;
+	hw_strap1_t strap1;
+	strap1.w = SCU_RD(0x70);
+	p_eng->env.is_1g_valid[0] = strap1.b.mac1_interface;
+	p_eng->env.is_1g_valid[1] = strap1.b.mac2_interface;
+
+	p_eng->env.at_least_1g_valid =
+	    p_eng->env.is_1g_valid[0] | p_eng->env.is_1g_valid[1];
 #endif
-		} // End if ( eng->ModeSwitch == MODE_NSCI )
+	return 0;
+}
 
-//------------------------------------------------------------
-// Descriptor Number
-//------------------------------------------------------------
-		//------------------------------
-		// [Dat]setup Des_Num
-		// [Dat]setup DMABuf_Size
-		// [Dat]setup DMABuf_Num
-		//------------------------------
-		if ( eng->ModeSwitch == MODE_DEDICATED ) {
-#ifdef Enable_Jumbo
-			DES_LowNumber = 1;
+/**
+ * @brief setup chip compatibility accoriding to the chip ID register
+*/
+static uint32_t setup_chip_compatibility(MAC_ENGINE *p_eng)
+{
+	uint32_t reg_addr;
+	uint32_t id, version;
+	uint32_t is_valid;
+
+	p_eng->env.ast2600 = 0;
+	p_eng->env.ast2500 = 0;
+
+#if defined(CONFIG_ASPEED_AST2600)
+	reg_addr = 0x04;
 #else
-			DES_LowNumber = eng->run.TM_IOTiming;
-#endif
-			if ( eng->arg.GEn_SkipChkPHY && ( eng->arg.GTestMode == 0 ) )
-				eng->dat.Des_Num = 114;//for SMSC's LAN9303 issue
-			else {
-				switch ( eng->arg.GSpeed ) {
-					case SET_1GBPS          : eng->dat.Des_Num = ( eng->run.IO_Bund ) ? 100 : ( DES_LowNumber ) ? 512 : 4096; break;
-					case SET_100MBPS        : eng->dat.Des_Num = ( eng->run.IO_Bund ) ? 100 : ( DES_LowNumber ) ? 512 : 4096; break;
-					case SET_10MBPS         : eng->dat.Des_Num = ( eng->run.IO_Bund ) ? 100 : ( DES_LowNumber ) ? 100 :  830; break;
-					case SET_1G_100M_10MBPS : eng->dat.Des_Num = ( eng->run.IO_Bund ) ? 100 : ( DES_LowNumber ) ? 100 :  830; break;
-					case SET_100M_10MBPS    : eng->dat.Des_Num = ( eng->run.IO_Bund ) ? 100 : ( DES_LowNumber ) ? 100 :  830; break;
-				}
-			} // End if ( eng->arg.GEn_SkipChkPHY && ( eng->arg.GTestMode == 0 ) )
-#ifdef SelectDesNumber
-			eng->dat.Des_Num = SelectDesNumber;
-#endif
-#ifdef ENABLE_ARP_2_WOL
-			if ( eng->arg.GTestMode == 4 )
-				eng->dat.Des_Num = 1;
+	reg_addr = 0x7c;
 #endif
-			eng->dat.Des_Num_Org = eng->dat.Des_Num;
-			eng->dat.DMABuf_Size = DMA_BufSize; //keep in order: Des_Num --> DMABuf_Size --> DMABuf_Num
-			eng->dat.DMABuf_Num  = DMA_BufNum;  //keep in order: Des_Num --> DMABuf_Size --> DMABuf_Num
-
-			if ( DbgPrn_Info ) {
-				printf("CheckBuf_MBSize : %d\n",       eng->run.CheckBuf_MBSize);
-				printf("LOOP_CheckNum   : %d\n",       eng->run.LOOP_CheckNum);
-				printf("Des_Num         : %d\n",       eng->dat.Des_Num);
-				printf("DMA_BufSize     : %d bytes\n", eng->dat.DMABuf_Size);
-				printf("DMA_BufNum      : %d\n",       eng->dat.DMABuf_Num);
-				printf("DMA_PakSize     : %d\n",        DMA_PakSize);
-				printf("\n");
-			}
-			if ( 2 > eng->dat.DMABuf_Num )
-				return( Finish_Check( eng, Err_Flag_DMABufNum ) );
-		} // End if ( eng->ModeSwitch == MODE_DEDICATED )
-
-//------------------------------------------------------------
-// Setup Running Parameter
-//------------------------------------------------------------
-#ifdef Enable_MAC_ExtLoop
-		eng->run.TDES_BASE = RDES_BASE1;
-		eng->run.RDES_BASE = RDES_BASE1;
+	is_valid = 0;
+	id = (SCU_RD(reg_addr) & GENMASK(31, 24)) >> 24;
+	version = (SCU_RD(reg_addr) & GENMASK(23, 16)) >> 16;
+
+#if defined(CONFIG_FPGA_ASPEED) && defined(CONFIG_ASPEED_AST2600)
+	id = 0x5;
+#endif
+	if (id == 0x5) {
+		printf("chip: AST2600 A%d\n", version);
+		p_eng->env.ast2600 = 1;
+		p_eng->env.ast2500 = 1;
+		p_eng->env.mac_num = 4;
+		p_eng->env.is_new_mdio_reg[0] = 1;
+		p_eng->env.is_new_mdio_reg[1] = 1;
+		p_eng->env.is_new_mdio_reg[2] = 1;
+		p_eng->env.is_new_mdio_reg[3] = 1;
+		is_valid = 1;
+	} else if (id == 0x4) {
+		printf("chip: AST2500 A%d\n", version);
+		p_eng->env.ast2500 = 1;
+		p_eng->env.mac_num = 2;
+		p_eng->env.is_new_mdio_reg[0] = MAC1_RD(0x40) >> 31;
+		p_eng->env.is_new_mdio_reg[1] = MAC2_RD(0x40) >> 31;
+		is_valid = 1;
+	}
+
+	if (0 == is_valid) {
+		printf("unknown chip\n");
+		return 1;
+	}
+
+	return 0;
+}
+
+/**
+ * @brief setup environment accoriding to the HW strap and chip ID
+*/
+static uint32_t setup_env(MAC_ENGINE *p_eng)
+{
+	if (0 != setup_chip_compatibility(p_eng)) {
+		return 1;
+	}
+	
+	setup_interface(p_eng);
+	return 0;
+}
+
+static uint32_t init_mac_engine(MAC_ENGINE *p_eng, uint32_t mode)
+{
+	memset(p_eng, 0, sizeof(MAC_ENGINE));
+
+	if (0 != setup_env(p_eng)) {
+		return 1;
+	}
+	
+	p_eng->arg.run_mode = mode;
+	p_eng->arg.delay_scan_range = DEF_GIOTIMINGBUND;
+	p_eng->arg.test_mode = DEF_GTESTMODE;
+
+	if (p_eng->arg.run_mode == MODE_NCSI ) {
+		p_eng->arg.GARPNumCnt = DEF_GARPNUMCNT;
+		p_eng->arg.GChannelTolNum = DEF_GCHANNEL2NUM;
+		p_eng->arg.GPackageTolNum = DEF_GPACKAGE2NUM;
+		p_eng->arg.ctrl.w = 0;
+		p_eng->arg.run_speed = SET_100MBPS;        // In NCSI mode, we set to 100M bps
+	} else {
+		p_eng->arg.user_def_val  = DEF_GUSER_DEF_PACKET_VAL;
+		p_eng->arg.phy_addr  = DEF_GPHY_ADR;
+		p_eng->arg.loop_inf = 0;
+		p_eng->arg.loop_max = 0;
+		p_eng->arg.ctrl.w = DEF_GCTRL;
+		p_eng->arg.run_speed = DEF_GSPEED;
+	}
+
+	p_eng->flg.print_en  = 1;	
+	
+	p_eng->run.TM_TxDataEn = 1;
+	p_eng->run.TM_RxDataEn = 1;
+	p_eng->run.TM_NCSI_DiSChannel = 1;
+
+	/* setup 
+	 * 1. delay control register
+	 * 2. driving strength control register and upper/lower bond
+	 * 3. MAC control register
+	 */
+#ifdef CONFIG_ASPEED_AST2600
+	p_eng->io.mac12_1g_delay.addr = SCU_BASE + 0x340;
+	p_eng->io.mac12_1g_delay.tx_min = 0;
+	p_eng->io.mac12_1g_delay.tx_max = 63;
+	p_eng->io.mac12_1g_delay.rx_min = -63;
+	p_eng->io.mac12_1g_delay.rx_max = 63;
+	p_eng->io.mac12_1g_delay.rmii_tx_min = 0;
+	p_eng->io.mac12_1g_delay.rmii_tx_max = 1;
+	p_eng->io.mac12_1g_delay.rmii_rx_min = 0;
+	p_eng->io.mac12_1g_delay.rmii_rx_max = 63;
+
+	p_eng->io.mac12_100m_delay.addr = SCU_BASE + 0x348;
+	p_eng->io.mac12_100m_delay.tx_min = 0;
+	p_eng->io.mac12_100m_delay.tx_max = 63;
+	p_eng->io.mac12_100m_delay.rx_min = -63;
+	p_eng->io.mac12_100m_delay.rx_max = 63;
+	p_eng->io.mac12_10m_delay.addr = SCU_BASE + 0x34c;
+	p_eng->io.mac12_10m_delay.tx_min = 0;
+	p_eng->io.mac12_10m_delay.tx_max = 63;
+	p_eng->io.mac12_10m_delay.rx_min = -63;
+	p_eng->io.mac12_10m_delay.rx_max = 63;
+
+	p_eng->io.mac34_1g_delay.addr = SCU_BASE + 0x350;
+	p_eng->io.mac34_1g_delay.tx_min = 0;
+	p_eng->io.mac34_1g_delay.tx_max = 63;
+	p_eng->io.mac34_1g_delay.rx_min = -63;
+	p_eng->io.mac34_1g_delay.rx_max = 63;
+	p_eng->io.mac34_1g_delay.rmii_tx_min = 0;
+	p_eng->io.mac34_1g_delay.rmii_tx_max = 1;
+	p_eng->io.mac34_1g_delay.rmii_rx_min = 0;
+	p_eng->io.mac34_1g_delay.rmii_rx_max = 63;
+	p_eng->io.mac34_100m_delay.addr = SCU_BASE + 0x358;
+	p_eng->io.mac34_100m_delay.tx_min = 0;
+	p_eng->io.mac34_100m_delay.tx_max = 63;
+	p_eng->io.mac34_100m_delay.rx_min = -63;
+	p_eng->io.mac34_100m_delay.rx_max = 63;
+	p_eng->io.mac34_10m_delay.addr = SCU_BASE + 0x35c;
+	p_eng->io.mac34_10m_delay.tx_min = 0;
+	p_eng->io.mac34_10m_delay.tx_max = 63;
+	p_eng->io.mac34_10m_delay.rx_min = -63;
+	p_eng->io.mac34_10m_delay.rx_max = 63;
+
+	p_eng->io.mac34_drv_reg.addr = SCU_BASE + 0x458;
+	p_eng->io.mac34_drv_reg.drv_max = 0x3;
+	p_eng->io.drv_upper_bond = 0x3;
+	p_eng->io.drv_lower_bond = 0;
 #else
-		eng->run.TDES_BASE = TDES_BASE1;
-		eng->run.RDES_BASE = RDES_BASE1;
+	p_eng->io.mac12_1g_delay.addr = SCU_BASE + 0x48;
+	p_eng->io.mac12_1g_delay.tx_min = 0;
+	p_eng->io.mac12_1g_delay.tx_max = 63;
+	p_eng->io.mac12_1g_delay.rx_min = 0;
+	p_eng->io.mac12_1g_delay.rx_max = 63;
+	p_eng->io.mac12_1g_delay.rmii_tx_min = 0;
+	p_eng->io.mac12_1g_delay.rmii_tx_max = 1;
+	p_eng->io.mac12_1g_delay.rmii_rx_min = 0;
+	p_eng->io.mac12_1g_delay.rmii_rx_max = 63;
+	p_eng->io.mac12_100m_delay.addr = SCU_BASE + 0xb8;
+	p_eng->io.mac12_100m_delay.tx_min = 0;
+	p_eng->io.mac12_100m_delay.tx_max = 63;
+	p_eng->io.mac12_100m_delay.rx_min = 0;
+	p_eng->io.mac12_100m_delay.rx_max = 63;
+	p_eng->io.mac12_10m_delay.addr = SCU_BASE + 0xbc;
+	p_eng->io.mac12_10m_delay.tx_min = 0;
+	p_eng->io.mac12_10m_delay.tx_max = 63;
+	p_eng->io.mac12_10m_delay.rx_min = 0;
+	p_eng->io.mac12_10m_delay.rx_max = 63;
+
+	p_eng->io.mac34_1g_delay.addr = 0;
+	p_eng->io.mac34_100m_delay.addr = 0;
+	p_eng->io.mac34_10m_delay.addr = 0;
+
+	p_eng->io.mac12_drv_reg.addr = SCU_BASE + 0x90;
+	p_eng->io.mac12_drv_reg.drv_max = 0x1;
+	p_eng->io.drv_upper_bond = 0x1;
+	p_eng->io.drv_lower_bond = 0;
 #endif
+	return 0;
+}
 
-		if ( eng->run.TM_IOTiming || eng->run.IO_Bund )
-			eng->run.IO_MrgChk = 1;
-		else
-			eng->run.IO_MrgChk = 0;
-
-		eng->phy.Adr         = eng->arg.GPHYADR;
-		eng->phy.loop_phy    = eng->arg.GEn_IntLoopPHY;
-		eng->phy.default_phy = eng->run.TM_DefaultPHY;
-
-		eng->run.LOOP_MAX = eng->arg.GLOOP_MAX;
-		Calculate_LOOP_CheckNum( eng );
-
-	} // End if (RUN_STEP >= 1)
-
-//------------------------------------------------------------
-// SCU Initial
-//------------------------------------------------------------
-	if ( RUN_STEP >= 2 ) {
-		get_mac_info( eng );
-		Setting_scu( eng );
-		init_scu1( eng );
-	}
-
-	if ( RUN_STEP >= 3 ) {
-//		init_scu_macrst( eng );
-		init_scu_macdis( eng );
-		init_scu_macen( eng );
-		if ( eng->ModeSwitch ==  MODE_DEDICATED ) {
-#if defined(PHY_GPIO)
-			phy_gpio_init( eng );
-#endif
-#if defined(PHY_SPECIAL)
-			special_PHY_MDIO_init( eng );
-#endif
-			eng->phy.PHYAdrValid = find_phyadr( eng );
-			if ( eng->phy.PHYAdrValid == TRUE )
-				phy_sel( eng, phyeng );
+static uint32_t parse_arg_dedicated(int argc, char *const argv[],
+				    MAC_ENGINE *p_eng) 
+{
+	switch (argc) {
+	case 10:
+		p_eng->arg.user_def_val = simple_strtol(argv[9], NULL, 16);
+	case 9:
+		p_eng->arg.delay_scan_range = simple_strtol(argv[8], NULL, 10);
+		p_eng->arg.ieee_sel = p_eng->arg.delay_scan_range;
+	case 8:
+		p_eng->arg.phy_addr = simple_strtol(argv[7], NULL, 10);
+	case 7:
+		p_eng->arg.test_mode = simple_strtol(argv[6], NULL, 16);
+		printf("test mode = %d\n", p_eng->arg.test_mode);
+	case 6:		
+		p_eng->arg.loop_max = simple_strtol(argv[5], NULL, 10);
+		if (p_eng->arg.loop_max == -1) {
+			p_eng->arg.loop_inf = 1;
 		}
+		printf("loop max=%d, loop_inf=%d\n", p_eng->arg.loop_max, p_eng->arg.loop_inf);
+	case 5:
+		p_eng->arg.ctrl.w = simple_strtol(argv[4], NULL, 16);
+		printf("ctrl=0x%05x\n", p_eng->arg.ctrl.w);
+	case 4:
+		p_eng->arg.run_speed = simple_strtol(argv[3], NULL, 16);
+		printf("speed=0x%1x\n", p_eng->arg.run_speed);
+	case 3:
+		p_eng->arg.mdio_idx = simple_strtol(argv[2], NULL, 10);
+		printf("mdio_idx=%d\n", p_eng->arg.mdio_idx);		
 	}
 
-//------------------------------------------------------------
-// Data Initial
-//------------------------------------------------------------
-	if (RUN_STEP >= 4) {
-		if ( eng->ModeSwitch ==  MODE_DEDICATED ) {
-			if ( eng->run.TM_Burst )
-				setup_arp ( eng );
-			eng->dat.FRAME_LEN = (uint32_t *)malloc( eng->dat.Des_Num    * sizeof( uint32_t ) );
-			eng->dat.wp_lst    = (uint32_t *)malloc( eng->dat.Des_Num    * sizeof( uint32_t ) );
-
-			if ( !eng->dat.FRAME_LEN )
-				return( Finish_Check( eng, Err_Flag_MALLOC_FrmSize ) );
-			if ( !eng->dat.wp_lst )
-				return( Finish_Check( eng, Err_Flag_MALLOC_LastWP ) );
-
-			// Setup data and length
-#if defined(PHY_SPECIAL)
-			special_PHY_buf_init( eng );
-#endif
-			TestingSetup ( eng );
-		} 
-		else {
-			if ( eng->arg.GARPNumCnt != 0 )
-				setup_arp ( eng );
-		}// End if ( eng->ModeSwitch ==  MODE_DEDICATED )
-
-		init_iodelay( eng );
-		eng->run.Speed_idx = 0;
-		if ( !eng->io.Dly_3Regiser )
-			if ( get_iodelay( eng ) )
-				return( Finish_Check( eng, 0 ) );
-
-	} // End if (RUN_STEP >= 4)
-
-//------------------------------------------------------------
-// main
-//------------------------------------------------------------
-	if (RUN_STEP >= 5) {
-		nt_log_func_name();
-
-		eng->flg.AllFail = 1;
-#ifdef Enable_LOOP_INFINI
-LOOP_INFINI:;
-#endif
-		for ( eng->run.Speed_idx = 0; eng->run.Speed_idx < 3; eng->run.Speed_idx++ )
-			eng->run.Speed_sel[ (int)eng->run.Speed_idx ] = eng->run.Speed_org[ (int)eng->run.Speed_idx ];
+	return 0;
+}
 
-		//------------------------------
-		// [Start] The loop of different speed
-		//------------------------------
-		for ( eng->run.Speed_idx = 0; eng->run.Speed_idx < 3; eng->run.Speed_idx++ ) {
-			eng->flg.Flag_PrintEn = 1;
-			if ( eng->run.Speed_sel[ (int)eng->run.Speed_idx ] ) {
-				// Setting speed of LAN
-				if      ( eng->run.Speed_sel[ 0 ] ) eng->reg.MAC_050_Speed = eng->reg.MAC_050 | 0x0000020f;
-				else if ( eng->run.Speed_sel[ 1 ] ) eng->reg.MAC_050_Speed = eng->reg.MAC_050 | 0x0008000f;
-				else                                eng->reg.MAC_050_Speed = eng->reg.MAC_050 | 0x0000000f;
-#ifdef Enable_CLK_Stable
-//				init_scu_macdis( eng );
-//				init_scu_macen( eng );
-				Write_Reg_SCU_DD( 0x0c, eng->reg.SCU_00c_dis );//Clock Stop Control
-				Read_Reg_SCU_DD( 0x0c );
-				Write_Reg_MAC_DD( eng, 0x50, eng->reg.MAC_050_Speed & 0xfffffff0 );
-				Write_Reg_SCU_DD( 0x0c, eng->reg.SCU_00c_en );//Clock Stop Control
-#endif
+static uint32_t parse_arg_ncsi(int argc, char *const argv[], MAC_ENGINE *p_eng) 
+{
+	switch (argc) {
+	case 8:
+		p_eng->arg.GARPNumCnt = simple_strtol(argv[7], NULL, 10);
+	case 7:
+		p_eng->arg.ctrl.w = simple_strtol(argv[6], NULL, 16);
+		printf("ctrl=0x%02x\n", p_eng->arg.ctrl.w);
+	case 6:
+		p_eng->arg.delay_scan_range = simple_strtol(argv[5], NULL, 10);		
+	case 5:
+		p_eng->arg.test_mode = simple_strtol(argv[4], NULL, 16);
+	case 4:
+		p_eng->arg.GChannelTolNum  = simple_strtol(argv[3], NULL, 10);
+	case 3:
+		p_eng->arg.GPackageTolNum  = simple_strtol(argv[2], NULL, 10);
+	}
+	return 0;
+}
 
-				// Setting check owner time out
-				if      ( eng->run.Speed_sel[ 0 ] ) eng->run.TIME_OUT_Des = eng->run.TIME_OUT_Des_PHYRatio * TIME_OUT_Des_1G;
-				else if ( eng->run.Speed_sel[ 1 ] ) eng->run.TIME_OUT_Des = eng->run.TIME_OUT_Des_PHYRatio * TIME_OUT_Des_100M;
-				else                                eng->run.TIME_OUT_Des = eng->run.TIME_OUT_Des_PHYRatio * TIME_OUT_Des_10M;
-
-				if ( eng->run.TM_WaitStart )
-					eng->run.TIME_OUT_Des = eng->run.TIME_OUT_Des * 10000;
-
-				// Setting the LAN speed
-				if ( eng->ModeSwitch ==  MODE_DEDICATED ) {
-					// Test three speed of LAN, we will modify loop number
-					if ( ( eng->arg.GSpeed == SET_1G_100M_10MBPS ) || ( eng->arg.GSpeed == SET_100M_10MBPS ) ) {
-						if      ( eng->run.Speed_sel[ 0 ] ) eng->run.LOOP_MAX = eng->arg.GLOOP_MAX;
-						else if ( eng->run.Speed_sel[ 1 ] ) eng->run.LOOP_MAX = eng->arg.GLOOP_MAX / 100;
-						else                                eng->run.LOOP_MAX = eng->arg.GLOOP_MAX / 1000;
 
-						if ( !eng->run.LOOP_MAX )
-							eng->run.LOOP_MAX = 1;
+static void disable_wdt(MAC_ENGINE *p_eng)
+{
+	/* FIXME */
+	return;
+}
 
-						Calculate_LOOP_CheckNum( eng );
-					}
+static uint32_t setup_data(MAC_ENGINE *p_eng)
+{
+	if (p_eng->arg.run_mode == MODE_DEDICATED) {
+		if (p_eng->run.tm_tx_only)
+			setup_arp(p_eng);
+		
+		p_eng->dat.FRAME_LEN =
+		    (uint32_t *)malloc(p_eng->dat.Des_Num * sizeof(uint32_t));
+		p_eng->dat.wp_lst =
+		    (uint32_t *)malloc(p_eng->dat.Des_Num * sizeof(uint32_t));
+
+		if (!p_eng->dat.FRAME_LEN)
+			return (finish_check(p_eng, Err_Flag_MALLOC_FrmSize));
+		if (!p_eng->dat.wp_lst)
+			return (finish_check(p_eng, Err_Flag_MALLOC_LastWP));
+
+		TestingSetup(p_eng);
+	} else {
+		if (p_eng->arg.GARPNumCnt != 0)
+			setup_arp(p_eng);
+	}
 
-					//------------------------------
-					// PHY Initial
-					//------------------------------
-					if ( eng->env.AST1100 )
-						init_scu2 ( eng );
+	p_eng->run.speed_idx = 0;
+	p_eng->io.drv_curr = mac_get_driving_strength(p_eng);
+	if (mac_set_scan_boundary(p_eng))
+		return (finish_check(p_eng, 0));
 
-#ifdef SUPPORT_PHY_LAN9303
-					if ( eng->arg.GEn_InitPHY )
-						LAN9303( LAN9303_I2C_BUSNUM, eng->arg.GPHYADR, eng->run.Speed_idx, eng->arg.GEn_IntLoopPHY | (eng->run.TM_Burst<<1) | eng->run.TM_IEEE );
-#elif defined(PHY_SPECIAL)
-					if ( eng->arg.GEn_InitPHY )
-						special_PHY_reg_init( eng );
-#else
-					if ( phyeng->fp_set != 0 ) {
-						init_phy( eng, phyeng );
-  #ifdef Delay_PHYRst
-//						DELAY( Delay_PHYRst * 10 );
-  #endif
-					}
-#endif
+	return 0;			
+}
+
+static uint32_t get_time_out_th(MAC_ENGINE *p_eng)
+{
+	uint32_t time_out;	
+	
+	time_out = timeout_th_tbl[p_eng->run.speed_idx];
+	if (p_eng->run.TM_WaitStart)
+		time_out = time_out * 10000;
+	
+	return time_out;		
+}
+uint32_t test_start(MAC_ENGINE *p_eng, PHY_ENGINE *p_phy_eng)
+{
+	uint32_t drv, speed;
+	int td, rd, tbegin, rbegin, tend, rend;
+	int tstep, rstep;
+
+	uint32_t wrn_flag_allspeed = 0;
+	uint32_t err_flag_allspeed = 0;
+	uint32_t des_flag_allspeed = 0;
+	uint32_t ncsi_flag_allspeed = 0;
+
+	memset(&p_eng->io.result_history[0][0], 0,
+	       sizeof(p_eng->io.result_history));
+
+	for (speed = 0; speed < 3; speed++) {
+		p_eng->flg.print_en = 1;
+		p_eng->run.speed_idx = speed;
+		if (0 == p_eng->run.speed_sel[speed]) {
+			continue;
+		}
+
+		p_eng->run.timeout_th = get_time_out_th(p_eng);
+		if (p_eng->arg.run_mode == MODE_DEDICATED) {
+			if ((p_eng->arg.run_speed == SET_1G_100M_10MBPS) ||
+			    (p_eng->arg.run_speed == SET_100M_10MBPS)) {
+				if (p_eng->run.speed_sel[0])
+					p_eng->run.loop_max =
+					    p_eng->arg.loop_max;
+				else if (p_eng->run.speed_sel[1])
+					p_eng->run.loop_max =
+					    p_eng->arg.loop_max / 100;
+				else
+					p_eng->run.loop_max =
+					    p_eng->arg.loop_max / 1000;
+
+				if (0 == p_eng->run.loop_max)
+					p_eng->run.loop_max = 1;
+
+				calc_loop_check_num(p_eng);
+			}
+			//------------------------------
+			// PHY Initial
+			//------------------------------
+			if (p_phy_eng->fp_set) {
+				init_phy(p_eng, p_phy_eng);
+			}
 
-					if ( eng->env.AST1100 )
-						init_scu3 ( eng );
+			if (p_eng->flg.Err_Flag)
+				return (finish_check(p_eng, 0));
+		}
 
-					if ( eng->flg.Err_Flag )
-						return( Finish_Check( eng, 0 ) );
-				} // End if ( eng->ModeSwitch ==  MODE_DEDICATED )
+		//------------------------------
+		// [Start] The loop of different IO strength
+		//------------------------------
+		debug("drirving scan range: %d ~ %d\n",
+		       p_eng->io.drv_lower_bond, p_eng->io.drv_upper_bond);
+		for (drv = p_eng->io.drv_lower_bond;
+		     drv <= p_eng->io.drv_upper_bond; drv++) {
+			if (p_eng->run.IO_MrgChk) {
+				if (p_eng->run.TM_IOStrength) {
+					mac_set_driving_strength(p_eng, drv);
+					p_eng->io.drv_curr = mac_get_driving_strength(p_eng);
+				}
+
+				if (p_eng->run.delay_margin)
+					PrintIO_Header(p_eng, FP_LOG);
+				if (p_eng->run.TM_IOTiming)
+					PrintIO_Header(p_eng, FP_IO);
+				PrintIO_Header(p_eng, STD_OUT);
+			} else {
+				if (p_eng->arg.run_mode == MODE_DEDICATED) {
+					Print_Header(p_eng, STD_OUT);
+				}
+			} // End if (p_eng->run.IO_MrgChk)
+
+			//------------------------------
+			// [Start] The loop of different IO out delay
+			//------------------------------
+			tbegin = p_eng->io.tx_delay_scan.begin;
+			tend = p_eng->io.tx_delay_scan.end;
+			tstep = p_eng->io.tx_delay_scan.step;
+
+			rbegin = p_eng->io.rx_delay_scan.begin;
+			rend = p_eng->io.rx_delay_scan.end;
+			rstep = p_eng->io.rx_delay_scan.step;
+
+			for (td = tbegin; td <= tend; td += tstep) {
+				p_eng->io.Dly_out = td;
+				p_eng->io.Dly_out_selval = td;
+				if (p_eng->run.IO_MrgChk) {
+					PrintIO_LineS(p_eng, STD_OUT);
+				} // End if (p_eng->run.IO_MrgChk)
 
 				//------------------------------
-				// [Start] The loop of different IO strength
+				// [Start] The loop of different IO in
+				// delay
 				//------------------------------
-				for ( eng->io.Str_i = 0; eng->io.Str_i <= eng->io.Str_max; eng->io.Str_i++ ) {
+				for (rd = rbegin; rd <= rend; rd += rstep) {
+					p_eng->io.Dly_in = rd;
+					if (p_eng->run.IO_MrgChk) {
+						p_eng->io.Dly_in_selval = rd;
+						scu_disable_mac(p_eng);
+						mac_set_delay(p_eng, rd, td);
+						scu_enable_mac(p_eng);
+					}
 					//------------------------------
-					// Print Header of report to monitor and log file
+					// MAC Initial
 					//------------------------------
-					if ( eng->io.Dly_3Regiser )
-						if ( get_iodelay( eng ) )
-							return( Finish_Check( eng, 0 ) );
-
-					if ( eng->run.IO_MrgChk ) {
-						if ( eng->run.TM_IOStrength ) {
-							eng->io.Str_val = eng->io.Str_reg_mask | ( eng->io.Str_i << eng->io.Str_shf );
-//printf("\nIOStrength_val= %08x, ", eng->io.Str_val);
-//printf("SCU90h: %08x ->", Read_Reg_SCU_DD( 0x90 ));
-							Write_Reg_SCU_DD( eng->io.Str_reg_idx, eng->io.Str_val );
-//printf(" %08x\n", Read_Reg_SCU_DD( 0x90 ));
-						}
-
-						if ( eng->run.IO_Bund )
-							PrintIO_Header( eng, FP_LOG );
-						if ( eng->run.TM_IOTiming )
-							PrintIO_Header( eng, FP_IO );
-						PrintIO_Header( eng, STD_OUT );
+					init_mac(p_eng);
+					if (p_eng->flg.Err_Flag)
+						return (finish_check(p_eng, 0));
+
+					if (p_eng->arg.run_mode == MODE_NCSI) {
+						p_eng->io.result =
+						    phy_ncsi(p_eng);
+					} else {
+						p_eng->io.result = TestingLoop(
+						    p_eng,
+						    p_eng->run.LOOP_CheckNum);
 					}
-					else {
-						if ( eng->ModeSwitch == MODE_DEDICATED ) {
-							if ( !eng->run.TM_Burst )
-								Print_Header( eng, FP_LOG );
-							Print_Header( eng, STD_OUT );
-						}
-					} // End if ( eng->run.IO_MrgChk )
 
-					//------------------------------
-					// [Start] The loop of different IO out delay
-					//------------------------------
-					for ( eng->io.Dly_out = eng->io.Dly_out_str; eng->io.Dly_out <= eng->io.Dly_out_end; eng->io.Dly_out+=eng->io.Dly_out_cval ) {
-						if ( eng->run.IO_MrgChk ) {
-							eng->io.Dly_out_selval  = eng->io.value_ary[ eng->io.Dly_out ];
-							eng->io.Dly_out_reg_hit = ( eng->io.Dly_out_reg == eng->io.Dly_out_selval ) ? 1 : 0;
-#ifdef Enable_Fast_SCU
-							init_scu_macdis( eng );
-							Write_Reg_SCU_DD( eng->io.Dly_reg_idx, eng->reg.SCU_048_mix | ( eng->io.Dly_out_selval << eng->io.Dly_out_shf ) );
-							init_scu_macen( eng );
-#endif
-							if ( eng->run.TM_IOTiming )
-								PrintIO_LineS( eng, FP_IO );
-							PrintIO_LineS( eng, STD_OUT );
-						} // End if ( eng->run.IO_MrgChk )
-
-#ifdef Enable_Fast_SCU
-						//------------------------------
-						// SCU Initial
-						//------------------------------
-//						init_scu_macrst( eng );
-
-						//------------------------------
-						// MAC Initial
-						//------------------------------
-						init_mac( eng );
-						if ( eng->flg.Err_Flag )
-							return( Finish_Check( eng, 0 ) );
-#endif
-						//------------------------------
-						// [Start] The loop of different IO in delay
-						//------------------------------
-						for ( eng->io.Dly_in = eng->io.Dly_in_str; eng->io.Dly_in <= eng->io.Dly_in_end; eng->io.Dly_in+=eng->io.Dly_in_cval ) {
-							if ( eng->run.IO_MrgChk ) {
-								eng->io.Dly_in_selval  = eng->io.value_ary[ eng->io.Dly_in ];
-								eng->io.Dly_val = ( eng->io.Dly_in_selval  << eng->io.Dly_in_shf  )
-								                | ( eng->io.Dly_out_selval << eng->io.Dly_out_shf );
-
-//printf("\nDly_val= %08x, ", eng->io.Dly_val);
-//printf("SCU%02xh: %08x ->", eng->io.Dly_reg_idx, Read_Reg_SCU_DD( eng->io.Dly_reg_idx ) );
-								init_scu_macdis( eng );
-								Write_Reg_SCU_DD( eng->io.Dly_reg_idx, eng->reg.SCU_048_mix | eng->io.Dly_val );
-								init_scu_macen( eng );
-//printf(" %08x\n", Read_Reg_SCU_DD( eng->io.Dly_reg_idx ) );
-							} // End if ( eng->run.IO_MrgChk )
-#ifdef Enable_Fast_SCU
-#else
-							//------------------------------
-							// SCU Initial
-							//------------------------------
-//							init_scu_macrst( eng );
-
-							//------------------------------
-							// MAC Initial
-							//------------------------------
-							init_mac( eng );
-							if ( eng->flg.Err_Flag )
-								return( Finish_Check( eng, 0 ) );
-#endif
-							// Testing
-							if ( eng->ModeSwitch == MODE_NSCI )
-								eng->io.Dly_result = phy_ncsi( eng );
-							else
-							{
-								if ((eng->arg.GTestMode == 11) && !(
-								((eng->io.Dly_out == eng->io.Dly_out_str) && (eng->io.Dly_in == eng->io.Dly_in_str)) ||
-								((eng->io.Dly_out == eng->io.Dly_out_str) && (eng->io.Dly_in == eng->io.Dly_in_end)) ||
-								((eng->io.Dly_out == eng->io.Dly_out_end) && (eng->io.Dly_in == eng->io.Dly_in_str)) ||
-								((eng->io.Dly_out == eng->io.Dly_out_end) && (eng->io.Dly_in == eng->io.Dly_in_end)) ||
-								((eng->io.Dly_out == eng->io.Dly_out_reg) && (eng->io.Dly_in == eng->io.Dly_in_reg))))
-									eng->io.Dly_result = 0;
-								else
-									eng->io.Dly_result = TestingLoop( eng, eng->run.LOOP_CheckNum );
-							}
-							eng->io.dlymap[ eng->io.Dly_in ][ eng->io.Dly_out ] = eng->io.Dly_result;
-
-							// Display to Log file and monitor
-							if ( eng->run.IO_MrgChk ) {
-								if ( eng->run.TM_IOTiming )
-									PrintIO_Line( eng, FP_IO );
-								PrintIO_Line( eng, STD_OUT );
-
-								FPri_ErrFlag( eng, FP_LOG );
-								PrintIO_Line_LOG( eng );
-
-								eng->flg.Wrn_Flag  = 0;
-								eng->flg.Err_Flag  = 0;
-								eng->flg.Des_Flag  = 0;
-								eng->flg.NCSI_Flag = 0;
-							} //End if ( eng->run.IO_MrgChk )
-						} // End for ( eng->io.Dly_in = eng->io.Dly_in_str; eng->io.Dly_in <= eng->io.Dly_in_end; eng->io.Dly_in+=eng->io.Dly_in_cval )
-
-
-						if ( eng->run.IO_MrgChk ) {
-							if ( eng->run.TM_IOTiming ) {
-								PRINTF( FP_IO, "\n" );
-							}
-							printf("\n");
-						}
-					} // End for ( eng->io.Dly_out = eng->io.Dly_out_str; eng->io.Dly_out <= eng->io.Dly_out_end; eng->io.Dly_out+=eng->io.Dly_out_cval )
+					p_eng->io.result_history[rd + 64][td] |=
+					    p_eng->io.result;
 
+					/* Display to Log file and monitor */
+					if (p_eng->run.IO_MrgChk) {
+						PrintIO_Line(p_eng, STD_OUT);
+
+						FPri_ErrFlag(p_eng, FP_LOG);
+
+						p_eng->flg.Wrn_Flag = 0;
+						p_eng->flg.Err_Flag = 0;
+						p_eng->flg.Des_Flag = 0;
+						p_eng->flg.NCSI_Flag = 0;
+					}
+				}
 
-					//------------------------------
-					// End
-					//------------------------------
-					if ( eng->run.IO_MrgChk ) {
-						for ( eng->io.Dly_out = eng->io.Dly_out_min; eng->io.Dly_out <= eng->io.Dly_out_max; eng->io.Dly_out++ )
-							for ( eng->io.Dly_in = eng->io.Dly_in_min; eng->io.Dly_in <= eng->io.Dly_in_max; eng->io.Dly_in++ )
-								if ( eng->io.dlymap[ eng->io.Dly_in ][ eng->io.Dly_out ] ) {
-									if ( eng->run.TM_IOTiming ) {
-										for ( j = eng->io.Dly_out_min; j <= eng->io.Dly_out_max; j++ ) {
-											for ( i = eng->io.Dly_in_min; i <= eng->io.Dly_in_max; i++ )
-												if ( eng->io.dlymap[i][j] )
-													{ PRINTF( FP_IO, "x " ); }
-												else
-													{ PRINTF( FP_IO, "o " ); }
-											PRINTF( FP_IO, "\n" );
-										}
-									} // End if ( eng->run.TM_IOTiming )
-
-									FindErr( eng, Err_Flag_IOMargin );
-									goto Find_Err_Flag_IOMargin;
-								} // End if ( eng->io.dlymap[ eng->io.Dly_in ][ eng->io.Dly_out ] )
-					} // End if ( eng->run.IO_MrgChk )
-
-Find_Err_Flag_IOMargin:
-					if ( !eng->run.TM_Burst )
-						FPri_ErrFlag( eng, FP_LOG );
-					if ( eng->run.TM_IOTiming )
-						FPri_ErrFlag( eng, FP_IO );
-
-					FPri_ErrFlag( eng, STD_OUT );
-
-					Wrn_Flag_allapeed  = Wrn_Flag_allapeed  | eng->flg.Wrn_Flag;
-					Err_Flag_allapeed  = Err_Flag_allapeed  | eng->flg.Err_Flag;
-					Des_Flag_allapeed  = Des_Flag_allapeed  | eng->flg.Err_Flag;
-					NCSI_Flag_allapeed = NCSI_Flag_allapeed | eng->flg.Err_Flag;
-					eng->flg.Wrn_Flag  = 0;
-					eng->flg.Err_Flag  = 0;
-					eng->flg.Des_Flag  = 0;
-					eng->flg.NCSI_Flag = 0;
-				} // End for ( eng->io.Str_i = 0; eng->io.Str_i <= eng->io.Str_max; eng->io.Str_i++ ) {
-
-				if ( eng->ModeSwitch == MODE_DEDICATED ) {
-#ifdef PHY_SPECIAL
-					if ( eng->arg.GEn_InitPHY )
-						special_PHY_recov( eng );
-#else
-//					if ( ( eng->io.Dly_result == 0 ) & ( phyeng->fp_clr != 0 ) )
-					if ( phyeng->fp_clr != 0 )
-						recov_phy( eng, phyeng );
-#endif
+				if (p_eng->run.IO_MrgChk) {
+					if (p_eng->run.TM_IOTiming) {
+						PRINTF(FP_IO, "\n");
+					}
+					printf("\n");
 				}
+			}
+
+			if (!p_eng->run.tm_tx_only)
+				FPri_ErrFlag(p_eng, FP_LOG);
+			if (p_eng->run.TM_IOTiming)
+				FPri_ErrFlag(p_eng, FP_IO);
+
+			FPri_ErrFlag(p_eng, STD_OUT);
+
+			wrn_flag_allspeed |= p_eng->flg.Wrn_Flag;
+			err_flag_allspeed |= p_eng->flg.Err_Flag;
+			des_flag_allspeed |= p_eng->flg.Err_Flag;
+			ncsi_flag_allspeed |= p_eng->flg.Err_Flag;
+			p_eng->flg.Wrn_Flag = 0;
+			p_eng->flg.Err_Flag = 0;
+			p_eng->flg.Des_Flag = 0;
+			p_eng->flg.NCSI_Flag = 0;
+		}
+
+		if (p_eng->arg.run_mode == MODE_DEDICATED) {
+			if (p_phy_eng->fp_clr != 0)
+				recov_phy(p_eng, p_phy_eng);
+		}
 
-				eng->run.Speed_sel[ (int)eng->run.Speed_idx ] = 0;
-			} // End if ( eng->run.Speed_sel[ eng->run.Speed_idx ] )
+		p_eng->run.speed_sel[speed] = 0;
+		p_eng->flg.print_en = 0;
+	} // End for (speed = 0; speed < 3; speed++)
+
+	p_eng->flg.Wrn_Flag = wrn_flag_allspeed;
+	p_eng->flg.Err_Flag = err_flag_allspeed;
+	p_eng->flg.Des_Flag = des_flag_allspeed;
+	p_eng->flg.NCSI_Flag = ncsi_flag_allspeed;
 
-			eng->flg.Flag_PrintEn = 0;
-		} // End for ( eng->run.Speed_idx = 0; eng->run.Speed_idx < 3; eng->run.Speed_idx++ )
+	return (finish_check(p_eng, 0));
+}
+
+void dump_setting(MAC_ENGINE *p_eng)
+{
+	/* dump env */
+	printf("===================\n");
+	printf("p_eng->env\n");
+	printf("ast2600 = %d\n", p_eng->env.ast2600);
+	printf("ast2500 = %d\n", p_eng->env.ast2500);
+	printf("mac_num = %d\n", p_eng->env.mac_num);
+	printf("is_new_mdio_reg = %d %d %d %d\n",
+	       p_eng->env.is_new_mdio_reg[0],
+	       p_eng->env.is_new_mdio_reg[1],
+	       p_eng->env.is_new_mdio_reg[2],
+	       p_eng->env.is_new_mdio_reg[3]);
+	printf("is_1g_valid = %d %d %d %d\n",
+	       p_eng->env.is_1g_valid[0],
+	       p_eng->env.is_1g_valid[1],
+	       p_eng->env.is_1g_valid[2],
+	       p_eng->env.is_1g_valid[3]);
+	printf("at_least_1g_valid = %d\n", p_eng->env.at_least_1g_valid);
+	printf("===================\n");
+
+
+}
+/**
+ * @brief nettest main function
+*/
+int mac_test(int argc, char * const argv[], uint32_t mode)
+{
+	MAC_ENGINE mac_eng;
+	PHY_ENGINE phy_eng;	
+
+	if (0 != init_mac_engine(&mac_eng, mode)) {
+		printf("init MAC engine fail\n");
+		return 1;
+	}
+	
+	if (argc <= 1) {
+		print_usage(&mac_eng);
+		return 1;
+	}
+
+	mac_eng.arg.mac_idx = simple_strtol(argv[1], NULL, 16);
 
-		eng->flg.Wrn_Flag  = Wrn_Flag_allapeed;
-		eng->flg.Err_Flag  = Err_Flag_allapeed;
-		eng->flg.Des_Flag  = Des_Flag_allapeed;
-		eng->flg.NCSI_Flag = NCSI_Flag_allapeed;
-
-#ifdef Enable_LOOP_INFINI
-		if ( eng->flg.Err_Flag == 0 ) {
-			goto LOOP_INFINI;
+	/* default mdio_idx = mac_idx */
+	mac_eng.arg.mdio_idx = mac_eng.arg.mac_idx;
+	if (MODE_DEDICATED == mode)
+		parse_arg_dedicated(argc, argv, &mac_eng);
+	else		
+		parse_arg_ncsi(argc, argv, &mac_eng);
+
+	setup_running(&mac_eng);
+
+	dump_setting(&mac_eng);
+
+	/* init PHY engine */
+	phy_eng.fp_set = NULL;
+	phy_eng.fp_clr = NULL;
+
+	if (mac_eng.arg.ctrl.b.rmii_50m_out && 0 == mac_eng.run.is_rgmii ) {
+		mac_set_rmii_50m_output_enable(&mac_eng);
+	}
+
+	push_reg(&mac_eng);
+	disable_wdt(&mac_eng);
+
+	mac_set_addr(&mac_eng);
+	if (mac_eng.arg.ctrl.b.mac_int_loopback)
+		mac_set_interal_loopback(&mac_eng);
+	
+	if (mac_eng.arg.run_mode == MODE_DEDICATED)
+		scu_set_pinmux(&mac_eng);
+
+	scu_disable_mac(&mac_eng);
+	scu_enable_mac(&mac_eng);
+	if (mac_eng.arg.run_mode == MODE_DEDICATED) {
+		if (1 == phy_find_addr(&mac_eng)) {
+			phy_sel(&mac_eng, &phy_eng);		
 		}
-#endif
-	} // End if (RUN_STEP >= 5)
+	}
+
+	/* Data Initial */
+	setup_data(&mac_eng);
+
+	mac_eng.flg.all_fail = 1;
+	mac_eng.io.init_done = 1;
+	for(int i = 0; i < 3; i++)
+		mac_eng.run.speed_sel[i] = mac_eng.run.speed_cfg[i];
+
+	//------------------------------
+	// [Start] The loop of different speed
+	//------------------------------
+	test_start(&mac_eng, &phy_eng);
 
-	return( Finish_Check( eng, 0 ) );
+	return(finish_check(&mac_eng, 0));
 }
diff -Naur u-boot-2019.04/cmd/nettest/Makefile uboot/cmd/nettest/Makefile
--- u-boot-2019.04/cmd/nettest/Makefile	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/Makefile	2020-01-14 13:36:49.337961228 -0500
@@ -5,4 +5,4 @@
 # https://spdx.org/licenses
 
 
-obj-$(CONFIG_CMD_NETTEST) += cmd_nettest.o mactest.o io.o mac.o ncsi.o phy.o phygpio.o physpecial.o lan9303.o stduboot.o
+obj-$(CONFIG_CMD_NETTEST) += cmd_nettest.o mem_io.o mactest.o mac.o ncsi.o phy.o
diff -Naur u-boot-2019.04/cmd/nettest/mem_io.c uboot/cmd/nettest/mem_io.c
--- u-boot-2019.04/cmd/nettest/mem_io.c	1969-12-31 19:00:00.000000000 -0500
+++ uboot/cmd/nettest/mem_io.c	2020-01-14 13:36:49.337961228 -0500
@@ -0,0 +1,7 @@
+#include <asm/arch/platform.h>
+#include "mem_io.h"
+
+uint32_t SRAM_RD(uint32_t addr)
+{
+	return readl(ASPEED_SRAM_BASE + addr);
+}
\ No newline at end of file
diff -Naur u-boot-2019.04/cmd/nettest/mem_io.h uboot/cmd/nettest/mem_io.h
--- u-boot-2019.04/cmd/nettest/mem_io.h	1969-12-31 19:00:00.000000000 -0500
+++ uboot/cmd/nettest/mem_io.h	2020-01-14 13:36:49.337961228 -0500
@@ -0,0 +1,63 @@
+//#include "io.h"
+#include <asm/io.h>
+
+#define MAC1_BASE	0x1e660000
+#define MAC2_BASE	0x1e680000
+#define MDIO0_BASE	(MAC1_BASE + 0x60)
+#define MDIO1_BASE	(MAC2_BASE + 0x60)
+#define SCU_BASE        0x1e6e2000
+
+
+#ifdef CONFIG_ASPEED_AST2600
+#define MAC3_BASE	0x1e670000
+#define MAC4_BASE	0x1e690000
+
+#define PMI_BASE	0x1e650000
+#undef MDIO0_BASE
+#undef MDIO1_BASE
+#define MDIO0_BASE	(PMI_BASE + 0x00)
+#define MDIO1_BASE	(PMI_BASE + 0x08)
+#define MDIO2_BASE	(PMI_BASE + 0x10)
+#define MDIO3_BASE	(PMI_BASE + 0x18)
+#endif
+
+#define GPIO_BASE	0x1e780000
+
+/* macros for register access */
+#define SCU_RD(offset)          readl(SCU_BASE + offset)
+#define SCU_WR(value, offset)   writel(value, SCU_BASE + offset)
+
+#define MAC1_RD(offset)		readl(MAC1_BASE + offset)
+#define MAC1_WR(value, offset)	writel(value, MAC1_BASE + offset)
+#define MAC2_RD(offset)		readl(MAC2_BASE + offset)
+#define MAC2_WR(value, offset)	writel(value, MAC2_BASE + offset)
+#ifdef CONFIG_ASPEED_AST2600
+#define MAC3_RD(offset)		readl(MAC3_BASE + offset)
+#define MAC3_WR(value, offset)	writel(value, MAC3_BASE + offset)
+#define MAC4_RD(offset)		readl(MAC4_BASE + offset)
+#define MAC4_WR(value, offset)	writel(value, MAC4_BASE + offset)
+#endif
+
+#define GPIO_RD(offset)		readl(GPIO_BASE + offset)
+#define GPIO_WR(value, offset)	writel(value, GPIO_BASE + offset)
+/* typedef for register access */
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t reserved_0 : 6;	/* bit[5:0] */
+		uint32_t mac1_interface : 1;	/* bit[6] */
+		uint32_t mac2_interface : 1;	/* bit[7] */
+		uint32_t reserved_1 : 24;	/* bit[31:8] */
+	}b;
+} hw_strap1_t;
+
+typedef union {
+	uint32_t w;
+	struct {
+		uint32_t mac3_interface : 1;	/* bit[0] */
+		uint32_t mac4_interface : 1;	/* bit[1] */		
+		uint32_t reserved_0 : 30;	/* bit[31:2] */
+	}b;
+} hw_strap2_t;
+
+uint32_t SRAM_RD(uint32_t addr);
\ No newline at end of file
diff -Naur u-boot-2019.04/cmd/nettest/ncsi.c uboot/cmd/nettest/ncsi.c
--- u-boot-2019.04/cmd/nettest/ncsi.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/ncsi.c	2020-01-14 13:36:49.337961228 -0500
@@ -14,10 +14,11 @@
 #include "swfunc.h"
 
 #include "comminf.h"
-#include "io.h"
+//#include "io.h"
 #include "ncsi.h"
 #include <command.h>
 #include <common.h>
+#include "mac_api.h"
 
 //------------------------------------------------------------
 int FindErr_NCSI (MAC_ENGINE *eng, int value) {
@@ -170,29 +171,29 @@
 	eng->dat.NCSI_TxByteBUF = (unsigned char *) &eng->dat.NCSI_TxDWBUF[0];
 	eng->dat.NCSI_RxByteBUF = (unsigned char *) &eng->dat.NCSI_RxDWBUF[0];
 
-	eng->run.NCSI_TxDesBase = eng->run.TDES_BASE;//base for read/write
-	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x04, 0                        );
-	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x08, 0                        );
-	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x0C, AT_MEMRW_BUF( DMA_BASE ) );
+	eng->run.ncsi_tdes_base = eng->run.tdes_base;//base for read/write
+	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x04, 0                        );
+	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x08, 0                        );
+	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x0C, DMA_BASE - ASPEED_DRAM_BASE);
 
-	eng->run.NCSI_RxDesBase = eng->run.RDES_BASE;//base for read/write
+	eng->run.ncsi_rdes_base = eng->run.rdes_base;//base for read/write
 	NCSI_RxDatBase = AT_MEMRW_BUF( NCSI_RxDMA_BASE );//base of the descriptor
 
 	for (i = 0; i < NCSI_RxDESNum - 1; i++) {
-		Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase        ), 0x00000000     );
-		Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x04 ), 0x00000000     );
-		Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x08 ), 0x00000000     );
-		Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x0C ), NCSI_RxDatBase );
-		eng->run.NCSI_RxDesBase += 16;
+		Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base        ), 0x00000000     );
+		Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x04 ), 0x00000000     );
+		Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x08 ), 0x00000000     );
+		Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x0C ), NCSI_RxDatBase );
+		eng->run.ncsi_rdes_base += 16;
 		NCSI_RxDatBase += NCSI_RxDMA_PakSize;
 	}
-	Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase        ), EOR_IniVal     );
-	Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x04 ), 0x00000000     );
-	Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x08 ), 0x00000000     );
-//	Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x0C ), (NCSI_RxDatBase + CPU_BUS_ADDR_SDRAM_OFFSET) ); // 20130730
-	Write_Mem_Des_NCSI_DD( ( eng->run.NCSI_RxDesBase + 0x0C ), NCSI_RxDatBase ); // 20130730
+	Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base        ), EOR_IniVal     );
+	Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x04 ), 0x00000000     );
+	Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x08 ), 0x00000000     );
+//	Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x0C ), (NCSI_RxDatBase + CPU_BUS_ADDR_SDRAM_OFFSET) ); // 20130730
+	Write_Mem_Des_NCSI_DD( ( eng->run.ncsi_rdes_base + 0x0C ), NCSI_RxDatBase ); // 20130730
 
-	eng->run.NCSI_RxDesBase = eng->run.RDES_BASE;//base for read/write
+	eng->run.ncsi_rdes_base = eng->run.rdes_base;//base for read/write
 }
 
 //------------------------------------------------------------
@@ -230,11 +231,11 @@
 	uint32_t      NCSI_BufData;
 
 	do {
-		Write_Reg_MAC_DD( eng, 0x1C, 0x00000000 );//Rx Poll
+		mac_reg_write( eng, 0x1C, 0x00000000 );//Rx Poll
 
 		timeout = 0;
 		do {
-			NCSI_RxDesDat = Read_Mem_Des_NCSI_DD( eng->run.NCSI_RxDesBase );
+			NCSI_RxDesDat = Read_Mem_Des_NCSI_DD( eng->run.ncsi_rdes_base );
 			if ( ++timeout > TIME_OUT_NCSI * eng->run.NCSI_RxTimeOutScale ) {
 				PRINTF( FP_LOG, "[RxDes] DesOwn timeout     %08x\n", NCSI_RxDesDat );
 				return( FindErr( eng, Err_Flag_NCSI_Check_RxOwnTimeOut ) );
@@ -287,7 +288,7 @@
 		}
 
 		// Get point of RX DMA buffer
-		NCSI_RxDatBase = AT_BUF_MEMRW( Read_Mem_Des_NCSI_DD( eng->run.NCSI_RxDesBase + 0x0C ) );//base for read/write
+		NCSI_RxDatBase = AT_BUF_MEMRW( Read_Mem_Des_NCSI_DD( eng->run.ncsi_rdes_base + 0x0C ) );//base for read/write
 		NCSI_RxData    = SWAP_4B_LEDN_NCSI( SWAP_4B_LEDN( Read_Mem_Dat_NCSI_DD( NCSI_RxDatBase + 0x0C ) ) );
 
 		// Get RX valid data in offset 00h of RXDS#0
@@ -302,7 +303,7 @@
 		else
 			dwsize = bytesize >> 2;
 
-		if ( eng->arg.GEn_PrintNCSI ) {
+		if ( eng->arg.ctrl.b.print_ncsi ) {
 #ifdef NCSI_Skip_RxCRCData
 			PRINTF( FP_LOG ,"----->[Rx] %d bytes(%xh) [Remove CRC data]\n", bytesize, bytesize );
 #else
@@ -332,11 +333,11 @@
 
 			memcpy ( &eng->ncsi_rsp, eng->dat.NCSI_RxByteBUF, bytesize );
 
-			if ( eng->arg.GEn_PrintNCSI )
+			if ( eng->arg.ctrl.b.print_ncsi )
 				PRINTF( FP_LOG ,"[Frm-NCSI][Rx IID:%2d]\n", eng->ncsi_rsp.IID );
 
 			if ( ( eng->ncsi_rsp.IID == 0x0 ) && ( eng->ncsi_rsp.Command == 0xff ) ) { // AEN Packet
-				if ( eng->arg.GEn_PrintNCSI )
+				if ( eng->arg.ctrl.b.print_ncsi )
 					PRINTF( FP_LOG ,"[Frm-NCSI][AEN Packet]Type:%2d\n", SWAP_2B_BEDN( eng->ncsi_rsp.Reason_Code ) & 0xff );
 			}
 			else {
@@ -344,18 +345,18 @@
 			}
 		}
 		else {
-			if ( eng->arg.GEn_PrintNCSI )
+			if ( eng->arg.ctrl.b.print_ncsi )
 				PRINTF( FP_LOG, "[Frm-Skip] Not NCSI Response: [%08x & %08x = %08x]!=[%08x]\n", NCSI_RxData, 0xffff, NCSI_RxData & 0xffff, 0xf888 );
 		} // End if ( ( NCSI_RxData & 0xffff ) == 0xf888 )
 
 		if ( HWEOR( NCSI_RxDesDat ) ) {
 			// it is last the descriptor in the receive Ring
-			Write_Mem_Des_NCSI_DD( eng->run.NCSI_RxDesBase     , EOR_IniVal    );
-			eng->run.NCSI_RxDesBase = eng->run.RDES_BASE;//base for read/write
+			Write_Mem_Des_NCSI_DD( eng->run.ncsi_rdes_base     , EOR_IniVal    );
+			eng->run.ncsi_rdes_base = eng->run.rdes_base;//base for read/write
 		}
 		else {
-			Write_Mem_Des_NCSI_DD( eng->run.NCSI_RxDesBase     , 0x00000000    );
-			eng->run.NCSI_RxDesBase += 16;
+			Write_Mem_Des_NCSI_DD( eng->run.ncsi_rdes_base     , 0x00000000    );
+			eng->run.ncsi_rdes_base += 16;
 		}
 
 		if ( ret == 0 )
@@ -363,7 +364,7 @@
 		retry++;
 	} while ( retry < NCSI_RxDESNum );
 
-	if ( ( ret == 0 ) && eng->arg.GEn_PrintNCSI ) {
+	if ( ( ret == 0 ) && eng->arg.ctrl.b.print_ncsi ) {
 #ifdef Print_DetailFrame
 		ncsi_respdump ( eng, &eng->ncsi_rsp );
 #else
@@ -418,7 +419,7 @@
 	else
 		dwsize = bytesize >> 2;
 
-	if ( eng->arg.GEn_PrintNCSI ) {
+	if ( eng->arg.ctrl.b.print_ncsi ) {
 		if ( bytesize % 4 )
 			memset ( eng->dat.NCSI_TxByteBUF + bytesize, 0, (dwsize << 2) - bytesize );
 
@@ -437,30 +438,29 @@
 		PRINTF( FP_LOG ,"[Frm-NCSI][Tx IID:%2d]\n", eng->ncsi_req.IID );
 	}
 
+#if 0
 	// Copy data to DMA buffer
 	for ( i = 0; i < dwsize; i++ )
 		Write_Mem_Dat_NCSI_DD( DMA_BASE + ( i << 2 ), SWAP_4B_LEDN_NCSI( eng->dat.NCSI_TxDWBUF[i] ) );
+#endif		
 
 	// Setting one TX descriptor
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x04, 0                        );
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x08, 0                        );
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x0C, AT_MEMRW_BUF( DMA_BASE ) );
-	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase       , 0xf0008000 + bytesize );
+	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base       , 0xf0008000 + bytesize );
 
-//	Write_Reg_MAC_DD( eng, 0x40, eng->reg.MAC_040 ); // 20170505
+//	mac_reg_write( eng, 0x40, eng->reg.MAC_040 ); // 20170505
 
 	// Fire
-	Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
+	mac_reg_write( eng, 0x18, 0x00000000 );//Tx Poll
 
 	do {
-		NCSI_TxDesDat = Read_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase );
+		NCSI_TxDesDat = Read_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base );
 		if ( ++timeout > TIME_OUT_NCSI ) {
 			PRINTF( FP_LOG, "[TxDes] DesOwn timeout     %08X\n", NCSI_TxDesDat );
 			return( FindErr( eng, Err_Flag_NCSI_Check_TxOwnTimeOut  ));
 		}
 	} while ( HWOwnTx( NCSI_TxDesDat ) );
 
-	if ( eng->arg.GEn_PrintNCSI ) {
+	if ( eng->arg.ctrl.b.print_ncsi ) {
 #ifdef Print_DetailFrame
 		ncsi_reqdump ( eng, &eng->ncsi_req );
 #else
@@ -489,25 +489,25 @@
 	int        timeout = 0;
 	uint32_t      NCSI_TxDesDat;
 
-	if ( eng->arg.GEn_PrintNCSI )
+	if ( eng->arg.ctrl.b.print_ncsi )
 		PRINTF( FP_LOG ,"----->[ARP] 60 bytes x%d\n", eng->arg.GARPNumCnt );
 
 	for (i = 0; i < 15; i++) {
-		if ( eng->arg.GEn_PrintNCSI )
+		if ( eng->arg.ctrl.b.print_ncsi )
 			PRINTF( FP_LOG, "      [Tx%02d] %08x %08x\n", i, eng->dat.ARP_data[i], SWAP_4B( eng->dat.ARP_data[i] ) );
 
-		Write_Mem_Dat_NCSI_DD( DMA_BASE + ( i << 2 ), eng->dat.ARP_data[i] );
+		Write_Mem_Dat_NCSI_DD(((uint32_t)&dma_buf) + ( i << 2 ), eng->dat.ARP_data[i] );
 	}
 
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x04, 0                        );
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x08, 0                        );
-//	Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase + 0x0C, AT_MEMRW_BUF( DMA_BASE ) );
+//	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x04, 0                        );
+//	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x08, 0                        );
+//	Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base + 0x0C, AT_MEMRW_BUF( DMA_BASE ) );
 	for (i = 0; i < eng->arg.GARPNumCnt; i++) {
-		Write_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase      , 0xf0008000 + 60);
-		Write_Reg_MAC_DD( eng, 0x18, 0x00000000 );//Tx Poll
+		Write_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base      , 0xf0008000 + 60);
+		mac_reg_write( eng, 0x18, 0x00000000 );//Tx Poll
 
 		do {
-			NCSI_TxDesDat = Read_Mem_Des_NCSI_DD( eng->run.NCSI_TxDesBase );
+			NCSI_TxDesDat = Read_Mem_Des_NCSI_DD( eng->run.ncsi_tdes_base );
 			if ( ++timeout > TIME_OUT_NCSI ) {
 				PRINTF( FP_LOG, "[TxDes-ARP] DesOwn timeout %08x\n", NCSI_TxDesDat );
 				return( FindErr( eng, Err_Flag_NCSI_Check_ARPOwnTimeOut ) );
@@ -534,7 +534,7 @@
 		if (    ( eng->ncsi_rsp.IID           != eng->ncsi_req.IID                        )
 		     || ( eng->ncsi_rsp.Command       != ( command | 0x80 )                       )
 		     || ( eng->ncsi_rsp.Response_Code != SWAP_2B_BEDN( COMMAND_COMPLETED ) ) ) {
-			if ( eng->arg.GEn_PrintNCSI ) {
+			if ( eng->arg.ctrl.b.print_ncsi ) {
 				PRINTF( FP_LOG, "Retry: Command = %x, Response_Code = %x", eng->ncsi_req.Command, SWAP_2B_BEDN( eng->ncsi_rsp.Response_Code ) );
 				switch ( SWAP_2B_BEDN( eng->ncsi_rsp.Response_Code ) ) {
 					case COMMAND_COMPLETED  	: PRINTF( FP_LOG, "(completed  )\n" ); break;
@@ -681,9 +681,10 @@
 } // End char Get_Link_Status_SLT (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
-void Enable_Set_MAC_Address_SLT (MAC_ENGINE *eng) {//Command:0x0e
+void Enable_Set_MAC_Address_SLT (MAC_ENGINE *eng) 
+{
+	//Command:0x0e
 
-#if !defined(MELLANOX_CONNECTX_4)
 	int        i;
 
 	for ( i = 0; i < 6; i++ )
@@ -694,17 +695,6 @@
 		eng->dat.NCSI_Payload_Data[ 7 ] = MULTICAST + ENABLE_MAC_ADDRESS_FILTER; //AT + E
 	else
 		eng->dat.NCSI_Payload_Data[ 7 ] = UNICAST   + ENABLE_MAC_ADDRESS_FILTER; //AT + E
-#else
-	eng->dat.NCSI_Payload_Data[ 0 ] = 0xC0;
-	eng->dat.NCSI_Payload_Data[ 1 ] = 0xC2;
-	eng->dat.NCSI_Payload_Data[ 2 ] = 0xC4;
-	eng->dat.NCSI_Payload_Data[ 3 ] = 0xC8;
-	eng->dat.NCSI_Payload_Data[ 4 ] = 0xCC;
-	eng->dat.NCSI_Payload_Data[ 5 ] = 0xB0;
-	eng->dat.NCSI_Payload_Data[ 6 ] = 1; //MAC Address Num = 1 --> address filter 1, fixed in sample code
-
-	eng->dat.NCSI_Payload_Data[ 7 ] = UNICAST   + ENABLE_MAC_ADDRESS_FILTER; //AT + E
-#endif
 
 	if ( NCSI_SentWaitPacket( eng, SET_MAC_ADDRESS, eng->ncsi_cap.All_ID, 8 ) )
 		FindErr_NCSI( eng, NCSI_Flag_Enable_Set_MAC_Address );
@@ -740,7 +730,7 @@
 		                             | (eng->ncsi_rsp.Payload_Data[ 25 ]<<16)
 		                             | (eng->ncsi_rsp.Payload_Data[ 26 ]<< 8)
 		                             | (eng->ncsi_rsp.Payload_Data[ 27 ]    );
-		eng->ncsi_cap.ManufacturerID = (eng->ncsi_rsp.Payload_Data[ 32 ]<<24)
+		eng->ncsi_cap.manufacturer_id = (eng->ncsi_rsp.Payload_Data[ 32 ]<<24)
 		                             | (eng->ncsi_rsp.Payload_Data[ 33 ]<<16)
 		                             | (eng->ncsi_rsp.Payload_Data[ 34 ]<< 8)
 		                             | (eng->ncsi_rsp.Payload_Data[ 35 ]    );
@@ -955,8 +945,8 @@
 	else {
 		if ( eng->dat.NCSI_RxEr ) {
 			eng->flg.Wrn_Flag = eng->flg.Wrn_Flag | Wrn_Flag_RxErFloatting;
-			if ( eng->arg.GEn_SkipRxEr ) {
-				eng->flg.AllFail = 0;
+			if ( eng->arg.ctrl.b.skip_rx_err ) {
+				eng->flg.all_fail = 0;
 				return(0);
 			}
 			else {
@@ -965,7 +955,7 @@
 			}
 		}
 		else {
-			eng->flg.AllFail = 0;
+			eng->flg.all_fail = 0;
 			return(0);
 		}
 	}
diff -Naur u-boot-2019.04/cmd/nettest/ncsi.h uboot/cmd/nettest/ncsi.h
--- u-boot-2019.04/cmd/nettest/ncsi.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/ncsi.h	2020-01-14 13:36:49.337961228 -0500
@@ -12,7 +12,6 @@
 #ifndef NCSI_H
 #define NCSI_H
 
-#include "typedef.h"
 
 #define NCSI_RxDMA_PakSize                       2048
 #define NCSI_RxDMA_BASE                          ( DMA_BASE + 0x00100000 )
diff -Naur u-boot-2019.04/cmd/nettest/phy_api.h uboot/cmd/nettest/phy_api.h
--- u-boot-2019.04/cmd/nettest/phy_api.h	1969-12-31 19:00:00.000000000 -0500
+++ uboot/cmd/nettest/phy_api.h	2020-01-14 13:36:49.337961228 -0500
@@ -0,0 +1 @@
+uint32_t phy_find_addr (MAC_ENGINE *eng);
\ No newline at end of file
diff -Naur u-boot-2019.04/cmd/nettest/phy.c uboot/cmd/nettest/phy.c
--- u-boot-2019.04/cmd/nettest/phy.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/phy.c	2020-01-14 13:36:49.337961228 -0500
@@ -10,184 +10,213 @@
  */
 
 #define PHY_C
-//#define PHY_debug
-//#define PHY_debug_set_clr
-//#define Realtek_debug
-
-#ifdef Realtek_debug
-int     GPIO_20h_Value;
-int     GPIO_24h_Value;
+//#define PHY_DEBUG
+//#define PHY_DEBUG_SET_CLR
+
+#ifdef PHY_DEBUG
+#undef DbgPrn_PHYRW
+#undef DbgPrn_PHYName
+#define DbgPrn_PHYRW		1
+#define DbgPrn_PHYName		1
+#endif
+
+#ifdef PHY_DEBUG_SET_CLR
+#undef DbgPrn_PHYRW
+#define DbgPrn_PHYRW		1
 #endif
 
+
 #include "comminf.h"
 #include "swfunc.h"
 
-#include "stduboot.h"
 #include <command.h>
 #include <common.h>
 
-#include "io.h"
 #include "phy.h"
-#include "typedef.h"
 
-//------------------------------------------------------------
-// PHY R/W basic
-//------------------------------------------------------------
-void phy_write (MAC_ENGINE *eng, int adr, uint32_t data) {
-#if defined(PHY_GPIO)
-        phy_gpio_write( eng, adr, data );
-#else
-        int        timeout = 0;
+#include "phy_tbl.h"
+#include "mem_io.h"
 
-        if ( eng->inf.NewMDIO ) {
-#ifdef CONFIG_ASPEED_AST2600
-                Write_Reg_PHY_DD( eng, 0x60, data | MAC_PHYWr_AST2600 | ( eng->phy.Adr << 21 ) | ( ( adr & 0x1f ) << 16 ) );
-				
-				while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYBusy_AST2600 ) {
+//#define RTK_DEBUG
+#define RTK_DBG_GPIO		BIT(22)
+#ifdef RTK_DEBUG
+#define RTK_DBG_PRINTF		printf
 #else
-                Write_Reg_PHY_DD( eng, 0x60, ( data << 16 ) | MAC_PHYWr_New | ( eng->phy.Adr << 5 ) | ( adr & 0x1f ) );
+#define RTK_DBG_PRINTF(...)
+#endif
 
-                while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYBusy_New ) {
-#endif				
-                        if ( ++timeout > TIME_OUT_PHY_RW ) {
-                                if ( !eng->run.TM_Burst )
-                                        PRINTF( FP_LOG, "[PHY-Write] Time out: %08x\n", Read_Reg_PHY_DD( eng, 0x60 ) );
+static void rtk_dbg_gpio_set(void)
+{
+#ifdef RTK_DEBUG		
+	GPIO_WR(GPIO_RD(0x20) | RTK_DBG_GPIO, 0x20);
+#endif	
+}
 
-                                FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-                                break;
-                        }
-                }
-        }
-        else {
-                Write_Reg_PHY_DD( eng, 0x64, data );
+static void rtk_dbg_gpio_clr(void)
+{
+#ifdef RTK_DEBUG		
+	GPIO_WR(GPIO_RD(0x20) & ~RTK_DBG_GPIO, 0x20);
+#endif	
+}
 
-                Write_Reg_PHY_DD( eng, 0x60, MDC_Thres | MAC_PHYWr | ( eng->phy.Adr << 16 ) | ( ( adr & 0x1f ) << 21 ) );
+static void rtk_dbg_gpio_init(void)
+{
+#ifdef RTK_DEBUG
+	GPIO_WR(GPIO_RD(0x24) | RTK_DBG_GPIO, 0x24);
 
-                while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYWr ) {
-                        if ( ++timeout > TIME_OUT_PHY_RW ) {
-                                if ( !eng->run.TM_Burst )
-                                        PRINTF( FP_LOG, "[PHY-Write] Time out: %08x\n", Read_Reg_PHY_DD( eng, 0x60 ) );
+	rtk_dbg_gpio_set();
+#endif	
+}
 
-                                FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-                                break;
-                        }
-                }
-        } // End if ( eng->inf.NewMDIO )
-#endif /* defined(PHY_GPIO) */
+//------------------------------------------------------------
+// PHY R/W basic
+//------------------------------------------------------------
+void phy_write (MAC_ENGINE *eng, int index, uint32_t data) 
+{
+	int timeout = 0;
 
-#ifdef PHY_debug
-        if ( 1 ) {
-#else
-        if ( DbgPrn_PHYRW ) {
-#endif
-                printf("[Wr ]%02d: 0x%04x (%02d:%08x)\n", adr, data, eng->phy.Adr, eng->phy.PHY_BASE );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "[Wr ]%02d: 0x%04x (%02d:%08x)\n", adr, data, eng->phy.Adr, eng->phy.PHY_BASE );
-        }
+	if (eng->env.is_new_mdio_reg[eng->run.mdio_idx]) {
+#ifdef CONFIG_ASPEED_AST2600
+		writel(data | MAC_PHYWr_New | (eng->phy.Adr << 21) |
+			   (index << 16),
+		       eng->run.mdio_base);
+#else
+		writel(data | MAC_PHYWr_New | (eng->phy.Adr << 5) | index,
+		       eng->run.mdio_base);
+#endif
+		/* check time-out */
+		while(readl(eng->run.mdio_base) & MAC_PHYBusy_New) {
+			if (++timeout > TIME_OUT_PHY_RW) {
+				if (!eng->run.tm_tx_only)
+					PRINTF(FP_LOG,
+					       "[PHY-Write] Time out: %08x\n",
+					       readl(eng->run.mdio_base));
+
+				FindErr(eng, Err_Flag_PHY_TimeOut_RW);
+				break;
+			}
+		}
+	} else {
+		writel(data, eng->run.mdio_base + 0x4);
+		writel(MDC_Thres | MAC_PHYWr | (eng->phy.Adr << 16) |
+				     ((index & 0x1f) << 21), eng->run.mdio_base);
+
+		while (readl(eng->run.mdio_base) & MAC_PHYWr) {
+			if (++timeout > TIME_OUT_PHY_RW) {
+				if (!eng->run.tm_tx_only)
+					PRINTF(FP_LOG,
+					       "[PHY-Write] Time out: %08x\n",
+					       readl(eng->run.mdio_base));
+
+				FindErr(eng, Err_Flag_PHY_TimeOut_RW);
+				break;
+			}
+		}
+	} // End if (eng->env.new_mdio_reg)
+
+	if (DbgPrn_PHYRW) {
+		printf("[Wr ]%02d: 0x%04x (%02d:%08x)\n", index, data,
+		       eng->phy.Adr, eng->run.mdio_base);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG, "[Wr ]%02d: 0x%04x (%02d:%08x)\n", index,
+			       data, eng->phy.Adr, eng->run.mdio_base);
+	}
 
 } // End void phy_write (int adr, uint32_t data)
 
 //------------------------------------------------------------
-uint32_t phy_read (MAC_ENGINE *eng, int adr) {
-        uint32_t      read_value;
+uint32_t phy_read (MAC_ENGINE *eng, int index) 
+{
+	uint32_t read_value;
+	int timeout = 0;
 
-#if defined(PHY_GPIO)
-        read_value = phy_gpio_read( eng, adr );
-#else
-        int        timeout = 0;
+	if (index > 0x1f) {
+		printf("invalid PHY register index: 0x%02x\n", index);
+		FindErr(eng, Err_Flag_PHY_TimeOut_RW);
+		return 0;
+	}
 
-        if ( eng->inf.NewMDIO ) {
+	if (eng->env.is_new_mdio_reg[eng->run.mdio_idx]) {
 #ifdef CONFIG_ASPEED_AST2600
-				Write_Reg_PHY_DD( eng, 0x60, MAC_PHYRd_AST2600 | (eng->phy.Adr << 21) | (( adr & 0x1f ) << 16) );
-
-				while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYBusy_AST2600 ) {
+		writel(MAC_PHYRd_New | (eng->phy.Adr << 21) | (index << 16),
+		       eng->run.mdio_base);
 #else
-                Write_Reg_PHY_DD( eng, 0x60, MAC_PHYRd_New | (eng->phy.Adr << 5) | ( adr & 0x1f ) );
-
-                while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYBusy_New ) {
+		writel(MAC_PHYRd_New | (eng->phy.Adr << 5) | index,
+		       eng->run.mdio_base);
 #endif
-                        if ( ++timeout > TIME_OUT_PHY_RW ) {
-                                if ( !eng->run.TM_Burst )
-                                        PRINTF( FP_LOG, "[PHY-Read] Time out: %08x\n", Read_Reg_PHY_DD( eng, 0x60 ) );
 
-                                FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-                                break;
-                        }
-                }
-
-  #ifdef Delay_PHYRd
-                DELAY( Delay_PHYRd );
-  #endif
-                read_value = Read_Reg_PHY_DD( eng, 0x64 ) & 0xffff;
-        }
-        else {
-                Write_Reg_PHY_DD( eng, 0x60, MDC_Thres | MAC_PHYRd | (eng->phy.Adr << 16) | ((adr & 0x1f) << 21) );
-
-                while ( Read_Reg_PHY_DD( eng, 0x60 ) & MAC_PHYRd ) {
-                        if ( ++timeout > TIME_OUT_PHY_RW ) {
-                                if ( !eng->run.TM_Burst )
-                                        PRINTF( FP_LOG, "[PHY-Read] Time out: %08x\n", Read_Reg_PHY_DD( eng, 0x60 ) );
-
-                                FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-                                break;
-                        }
-                }
-
-  #ifdef Delay_PHYRd
-                DELAY( Delay_PHYRd );
-  #endif
-                read_value = Read_Reg_PHY_DD( eng, 0x64 ) >> 16;
-        }
-#endif /* End defined(PHY_GPIO) */
-
-#ifdef PHY_debug
-        if ( 1 ) {
-#else
-        if ( DbgPrn_PHYRW ) {
-#endif
-                printf("[Rd ]%02d: 0x%04x (%02d:%08x)\n", adr, read_value, eng->phy.Adr, eng->phy.PHY_BASE );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "[Rd ]%02d: 0x%04x (%02d:%08x)\n", adr, read_value, eng->phy.Adr, eng->phy.PHY_BASE );
-        }
+		while (readl(eng->run.mdio_base) & MAC_PHYBusy_New) {
+			if (++timeout > TIME_OUT_PHY_RW) {
+				if (!eng->run.tm_tx_only)
+					PRINTF(FP_LOG,
+					       "[PHY-Read] Time out: %08x\n",
+					       readl(eng->run.mdio_base));
+
+				FindErr(eng, Err_Flag_PHY_TimeOut_RW);
+				break;
+			}
+		}
+
+#ifdef Delay_PHYRd
+		DELAY(Delay_PHYRd);
+#endif
+		read_value = readl(eng->run.mdio_base + 0x4) & GENMASK(15, 0);
+	} else {
+		writel(MDC_Thres | MAC_PHYRd | (eng->phy.Adr << 16) |
+			   (index << 21),
+		       eng->run.mdio_base);
+
+		while (readl(eng->run.mdio_base) & MAC_PHYRd) {
+			if (++timeout > TIME_OUT_PHY_RW) {
+				if (!eng->run.tm_tx_only)
+					PRINTF(FP_LOG,
+					       "[PHY-Read] Time out: %08x\n",
+					       readl(eng->run.mdio_base));
+
+				FindErr(eng, Err_Flag_PHY_TimeOut_RW);
+				break;
+			}
+		}
+
+#ifdef Delay_PHYRd
+		DELAY(Delay_PHYRd);
+#endif
+		read_value = readl(eng->run.mdio_base + 0x4) >> 16;
+	}
+
+
+	if (DbgPrn_PHYRW) {
+		printf("[Rd ]%02d: 0x%04x (%02d:%08x)\n", index, read_value,
+		       eng->phy.Adr, eng->run.mdio_base);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG, "[Rd ]%02d: 0x%04x (%02d:%08x)\n", index,
+			       read_value, eng->phy.Adr, eng->run.mdio_base);
+	}
 
-        return( read_value );
+	return (read_value);
 } // End uint32_t phy_read (MAC_ENGINE *eng, int adr)
 
 //------------------------------------------------------------
-void phy_Read_Write (MAC_ENGINE *eng, int adr, uint32_t clr_mask, uint32_t set_mask) {
-#ifdef PHY_debug
-        if ( 1 ) {
-#else
-        if ( DbgPrn_PHYRW ) {
-#endif
-                printf("[RW ]%02d: clr:0x%04x: set:0x%04x (%02d:%08x)\n", adr, clr_mask, set_mask, eng->phy.Adr, eng->phy.PHY_BASE);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "[RW ]%02d: clr:0x%04x: set:0x%04x (%02d:%08x)\n", adr, clr_mask, set_mask, eng->phy.Adr, eng->phy.PHY_BASE);
-        }
-        phy_write( eng, adr, ((phy_read( eng, adr ) & (~clr_mask)) | set_mask) );
-}
-
-//------------------------------------------------------------
-void phy_out (MAC_ENGINE *eng, int adr) {
-        printf("%02d: %04x\n", adr, phy_read( eng, adr ));
+void phy_Read_Write (MAC_ENGINE *eng, int adr, uint32_t clr_mask, uint32_t set_mask) 
+{
+	if (DbgPrn_PHYRW) {
+		printf("[RW ]%02d: clr:0x%04x: set:0x%04x (%02d:%08x)\n", adr,
+		       clr_mask, set_mask, eng->phy.Adr, eng->run.mdio_base);
+		if (!eng->run.tm_tx_only)
+			PRINTF(
+			    FP_LOG,
+			    "[RW ]%02d: clr:0x%04x: set:0x%04x (%02d:%08x)\n",
+			    adr, clr_mask, set_mask, eng->phy.Adr,
+			    eng->run.mdio_base);
+	}
+	phy_write(eng, adr, ((phy_read(eng, adr) & (~clr_mask)) | set_mask));
 }
 
 //------------------------------------------------------------
-//void phy_outchg (MAC_ENGINE *eng,  int adr) {
-//      uint32_t   PHY_valold = 0;
-//      uint32_t   PHY_val;
-//
-//      while (1) {
-//              PHY_val = phy_read( eng, adr );
-//              if (PHY_valold != PHY_val) {
-//                      printf("%02d: %04x\n", adr, PHY_val);
-//                      PHY_valold = PHY_val;
-//              }
-//      }
-//}
-
-//------------------------------------------------------------
 void phy_dump (MAC_ENGINE *eng) {
         int        index;
 
-        printf("[PHY%d][%d]----------------\n", eng->run.MAC_idx + 1, eng->phy.Adr);
+        printf("[PHY%d][%d]----------------\n", eng->run.mac_idx + 1, eng->phy.Adr);
         for (index = 0; index < 32; index++) {
                 printf("%02d: %04x ", index, phy_read( eng, index ));
 
@@ -197,10 +226,11 @@
 }
 
 //------------------------------------------------------------
-void phy_id (MAC_ENGINE *eng, BYTE option) {
+void phy_id (MAC_ENGINE *eng, uint8_t option)
+{
 
         uint32_t      reg_adr;
-        CHAR       PHY_ADR_org;
+        int8_t       PHY_ADR_org;
 
         PHY_ADR_org = eng->phy.Adr;
         for ( eng->phy.Adr = 0; eng->phy.Adr < 32; eng->phy.Adr++ ) {
@@ -219,19 +249,15 @@
 }
 
 //------------------------------------------------------------
-void phy_delay (int dt) {
-#ifdef Realtek_debug
-Write_Reg_GPIO_DD( 0x20, GPIO_20h_Value & 0xffbfffff);
-//      delay_hwtimer( dt );
-#endif
-#ifdef PHY_debug
-        printf("delay %d ms\n", dt);
-#endif
-        DELAY( dt );
+void phy_delay (int dt) 
+{
+	rtk_dbg_gpio_clr();
 
-#ifdef Realtek_debug
-Write_Reg_GPIO_DD( 0x20, GPIO_20h_Value );
+#ifdef PHY_DEBUG
+        printf("delay %d ms\n", dt);
 #endif
+        DELAY(dt);
+	rtk_dbg_gpio_set();
 }
 
 //------------------------------------------------------------
@@ -239,13 +265,10 @@
 //------------------------------------------------------------
 void phy_basic_setting (MAC_ENGINE *eng) {
         phy_Read_Write( eng,  0, 0x7140, eng->phy.PHY_00h ); //clr set
-#ifdef PHY_debug_set_clr
-        if ( 1 ) {
-#else
+
         if ( DbgPrn_PHYRW ) {
-#endif
-                printf("[Set]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->phy.PHY_BASE );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "[Set]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->phy.PHY_BASE );
+                printf("[Set]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->run.mdio_base );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "[Set]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->run.mdio_base );
         }
 }
 
@@ -255,21 +278,18 @@
 
         while (  phy_read( eng, PHY_REG_BMCR ) & 0x8000 ) {
                 if (++timeout > TIME_OUT_PHY_Rst) {
-                        if ( !eng->run.TM_Burst )
-                                PRINTF( FP_LOG, "[PHY-Reset] Time out: %08x\n", Read_Reg_PHY_DD( eng, 0x60 ) );
+                        if ( !eng->run.tm_tx_only )
+                                PRINTF( FP_LOG, "[PHY-Reset] Time out: %08x\n", readl(eng->run.mdio_base));
 
                         FindErr( eng, Err_Flag_PHY_TimeOut_Rst );
                         break;
                 }
         }//wait Rst Done
 
-#ifdef PHY_debug_set_clr
-        if ( 1 ) {
-#else
+
         if ( DbgPrn_PHYRW ) {
-#endif
-                printf("[Clr]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->phy.PHY_BASE );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "[Clr]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->phy.PHY_BASE );
+                printf("[Clr]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->run.mdio_base );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "[Clr]00: 0x%04x (%02d:%08x)\n", phy_read( eng, PHY_REG_BMCR ), eng->phy.Adr, eng->run.mdio_base );
         }
 #ifdef Delay_PHYRst
         DELAY( Delay_PHYRst );
@@ -311,7 +331,6 @@
         }
         if ( hit_count < hit_number ) {
                 printf("Timeout: %s\n", runname);
-                PRINTF( FP_LOG, "Timeout: %s\n", runname);
         }
 }
 
@@ -319,12 +338,12 @@
 // PHY IC
 //------------------------------------------------------------
 void recov_phy_marvell (MAC_ENGINE *eng) {//88E1111
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng,  9, eng->phy.PHY_09h );
 
                         phy_Reset( eng );
@@ -346,16 +365,16 @@
 //      int        Retry;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 phy_Reset( eng );
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         eng->phy.PHY_09h = phy_read( eng, PHY_GBCR );
                         eng->phy.PHY_12h = phy_read( eng, PHY_INER );
                         phy_write( eng, 18, 0x0000 );
@@ -364,7 +383,7 @@
 
                 phy_Reset( eng );
 
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 29, 0x0007 );
                         phy_Read_Write( eng, 30, 0x0000, 0x0008 );//clr set
                         phy_write( eng, 29, 0x0010 );
@@ -374,22 +393,22 @@
                 }
         }
 
-        if ( !eng->phy.loop_phy )
+        if ( !eng->phy.loopback )
                 phy_check_register ( eng, 17, 0x0400, 0x0400, 1, "wait 88E1111 link-up");
 //      Retry = 0;
 //      do {
 //              eng->phy.PHY_11h = phy_read( eng, PHY_SR );
-//      } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loop_phy | ( Retry++ > 20 ) ) );
+//      } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loopback | ( Retry++ > 20 ) ) );
 }
 
 //------------------------------------------------------------
 void recov_phy_marvell0 (MAC_ENGINE *eng) {//88E1310
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 22, 0x0006 );
                         phy_Read_Write( eng, 16, 0x0020, 0x0000 );//clr set
                         phy_write( eng, 22, 0x0000 );
@@ -402,7 +421,7 @@
 //      int        Retry;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         phy_write( eng, 22, 0x0002 );
 
@@ -410,23 +429,23 @@
         if ( eng->phy.PHY_15h & 0x0030 ) {
                 printf("\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15_2:%04x]\n\n", eng->phy.PHY_15h);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15_2:%04x]\n\n", eng->phy.PHY_15h );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15_2:%04x]\n\n", eng->phy.PHY_15h );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15_2:%04x]\n\n", eng->phy.PHY_15h );
 
                 phy_write( eng, 21, eng->phy.PHY_15h & 0xffcf ); // Set [5]Rx Dly, [4]Tx Dly to 0
         }
 phy_read( eng, 21 ); // v069
         phy_write( eng, 22, 0x0000 );
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 phy_Reset( eng );
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_write( eng, 22, 0x0002 );
 
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_Read_Write( eng, 21, 0x6040, 0x0040 );//clr set
                 }
-                else if ( eng->run.Speed_sel[ 1 ] ) {
+                else if ( eng->run.speed_sel[ 1 ] ) {
                         phy_Read_Write( eng, 21, 0x6040, 0x2000 );//clr set
                 }
                 else {
@@ -436,7 +455,7 @@
                 phy_Reset(  eng  );
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 22, 0x0006 );
                         phy_Read_Write( eng, 16, 0x0000, 0x0020 );//clr set
 phy_read( eng, 16 ); // v069
@@ -447,21 +466,21 @@
 phy_read( eng, 0 ); // v069
         }
 
-        if ( !eng->phy.loop_phy )
+        if ( !eng->phy.loopback )
                 phy_check_register ( eng, 17, 0x0400, 0x0400, 1, "wait 88E1310 link-up");
 //      Retry = 0;
 //      do {
 //              eng->phy.PHY_11h = phy_read( eng, PHY_SR );
-//      } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loop_phy | ( Retry++ > 20 ) ) );
+//      } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loopback | ( Retry++ > 20 ) ) );
 }
 
 //------------------------------------------------------------
 void recov_phy_marvell1 (MAC_ENGINE *eng) {//88E6176
-        CHAR       PHY_ADR_org;
+        int8_t       PHY_ADR_org;
 
         PHY_ADR_org = eng->phy.Adr;
         for ( eng->phy.Adr = 16; eng->phy.Adr <= 22; eng->phy.Adr++ ) {
-                if ( eng->run.TM_Burst ) {
+                if ( eng->run.tm_tx_only ) {
                 }
                 else {
                         phy_write( eng,  6, eng->phy.PHY_06hA[eng->phy.Adr-16] );//06h[5]P5 loopback, 06h[6]P6 loopback
@@ -476,12 +495,12 @@
 //------------------------------------------------------------
 void phy_marvell1 (MAC_ENGINE *eng) {//88E6176
 //      uint32_t      PHY_01h;
-        CHAR       PHY_ADR_org;
+        int8_t       PHY_ADR_org;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 printf("This mode doesn't support in 88E6176.\n");
         } else {
                 //The 88E6176 is switch with 7 Port(P0~P6) and the PHYAdr will be fixed at 0x10~0x16, and only P5/P6 can be connected to the MAC.
@@ -494,11 +513,11 @@
 
                 for ( eng->phy.Adr = 21; eng->phy.Adr <= 22; eng->phy.Adr++ ) {
 //                      PHY_01h = phy_read( eng, PHY_REG_BMSR );
-//                      if      ( eng->run.Speed_sel[ 0 ] ) phy_write( eng,  1, (PHY_01h & 0xfffc) | 0x0002 );//[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
-//                      else if ( eng->run.Speed_sel[ 1 ] ) phy_write( eng,  1, (PHY_01h & 0xfffc) | 0x0001 );//[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
+//                      if      ( eng->run.speed_sel[ 0 ] ) phy_write( eng,  1, (PHY_01h & 0xfffc) | 0x0002 );//[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
+//                      else if ( eng->run.speed_sel[ 1 ] ) phy_write( eng,  1, (PHY_01h & 0xfffc) | 0x0001 );//[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
 //                      else                              phy_write( eng,  1, (PHY_01h & 0xfffc)          );//[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
-                        if      ( eng->run.Speed_sel[ 0 ] ) phy_write( eng,  1, 0x0002 );//01h[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
-                        else if ( eng->run.Speed_sel[ 1 ] ) phy_write( eng,  1, 0x0001 );//01h[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
+                        if      ( eng->run.speed_sel[ 0 ] ) phy_write( eng,  1, 0x0002 );//01h[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
+                        else if ( eng->run.speed_sel[ 1 ] ) phy_write( eng,  1, 0x0001 );//01h[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
                         else                                phy_write( eng,  1, 0x0000 );//01h[1:0]00 = 10 Mbps, 01 = 100 Mbps, 10 = 1000 Mbps, 11 = Speed is not forced.
 
                         eng->phy.PHY_06hA[eng->phy.Adr-16] = phy_read( eng, PHY_ANER );
@@ -511,12 +530,12 @@
 
 //------------------------------------------------------------
 void recov_phy_marvell2 (MAC_ENGINE *eng) {//88E1512//88E15 10/12/14/18
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         // Enable Stub Test
                         // switch page 6
                         phy_write( eng, 22, 0x0006 );
@@ -532,9 +551,7 @@
 //      uint32_t      temp_reg;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-
-//      eng->run.TIME_OUT_Des_PHYRatio = 10;
+                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         // switch page 2
         phy_write( eng, 22, 0x0002 );
@@ -542,17 +559,17 @@
         if ( eng->phy.PHY_15h & 0x0030 ) {
                 printf("\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15h_2:%04x]\n\n", eng->phy.PHY_15h);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15h_2:%04x]\n\n", eng->phy.PHY_15h );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15h_2:%04x]\n\n", eng->phy.PHY_15h );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Page2, Register 21, bit 4~5 must be 0 [Reg15h_2:%04x]\n\n", eng->phy.PHY_15h );
 
                 phy_write( eng, 21, eng->phy.PHY_15h & 0xffcf );
         }
         phy_write( eng, 22, 0x0000 );
 
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 phy_Reset( eng );
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 // Internal loopback funciton only support in copper mode
                 // switch page 18
                 phy_write( eng, 22, 0x0012 );
@@ -562,7 +579,7 @@
                 if ( ( eng->phy.PHY_14h & 0x003f ) != 0x0010 ) {
                         printf("\n\n[Warning] Internal loopback funciton only support in copper mode[%04x]\n\n", eng->phy.PHY_14h);
                         if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Internal loopback funciton only support in copper mode[%04x]\n\n", eng->phy.PHY_14h);
-                        if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Internal loopback funciton only support in copper mode[%04x]\n\n", eng->phy.PHY_14h);
+                        if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Internal loopback funciton only support in copper mode[%04x]\n\n", eng->phy.PHY_14h);
 
                         phy_write( eng, 20, ( eng->phy.PHY_14h & 0xffc0 ) | 0x8010 );
                         // do software reset
@@ -574,10 +591,10 @@
 
                 // switch page 2
                 phy_write( eng, 22, 0x0002 );
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_Read_Write( eng, 21, 0x2040, 0x0040 );//clr set
                 }
-                else if ( eng->run.Speed_sel[ 1 ] ) {
+                else if ( eng->run.speed_sel[ 1 ] ) {
                         phy_Read_Write( eng, 21, 0x2040, 0x2000 );//clr set
                 }
                 else {
@@ -590,14 +607,14 @@
                 //Internal loopback at 100Mbps need delay 400~500 ms
 //              DELAY( 400 );//Still fail at 100Mbps
 //              DELAY( 500 );//All Pass
-                if ( !eng->run.Speed_sel[ 0 ] ) {
+                if ( !eng->run.speed_sel[ 0 ] ) {
                         phy_check_register ( eng, 17, 0x0040, 0x0040, 10, "wait 88E15 10/12/14/18 link-up");
                         phy_check_register ( eng, 17, 0x0040, 0x0000, 10, "wait 88E15 10/12/14/18 link-up");
                         phy_check_register ( eng, 17, 0x0040, 0x0040, 10, "wait 88E15 10/12/14/18 link-up");
                 }
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         // Enable Stub Test
                         // switch page 6
                         phy_write( eng, 22, 0x0006 );
@@ -609,24 +626,22 @@
                 phy_check_register ( eng, 17, 0x0400, 0x0400, 10, "wait 88E15 10/12/14/18 link-up");
         }
 
-//      if ( !eng->phy.loop_phy )
-////    if ( !eng->run.TM_Burst )
+//      if ( !eng->phy.loopback )
+////    if ( !eng->run.tm_tx_only )
 //              phy_check_register ( eng, 17, 0x0400, 0x0400, 10, "wait 88E15 10/12/14/18 link-up");
 ////    Retry = 0;
 ////    do {
 ////            eng->phy.PHY_11h = phy_read( eng, PHY_SR );
-////    } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loop_phy | ( Retry++ > 20 ) ) );
+////    } while ( !( ( eng->phy.PHY_11h & 0x0400 ) | eng->phy.loopback | ( Retry++ > 20 ) ) );
 }
 
 //------------------------------------------------------------
-void phy_marvell3 (MAC_ENGINE *eng) {//88E3019
-#ifdef PHY_debug
-        if ( 1 ) {
-#else
+void phy_marvell3 (MAC_ENGINE *eng) 
+{//88E3019
+
         if ( DbgPrn_PHYName ) {
-#endif
-                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "--->(%04x %04x)[Marvell] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
         }
 
         //Reg1ch[11:10]: MAC Interface Mode
@@ -635,28 +650,24 @@
         // 10 => RMII
         // 11 => MII
         eng->phy.PHY_1ch = phy_read( eng, 28 );
-        if ( eng->env.MAC_RMII ) {
-                if ( ( eng->phy.PHY_1ch & 0x0c00 ) != 0x0800 ) {
-                        printf("\n\n[Warning] Register 28, bit 10~11 must be 2 (RMII Mode)[Reg1ch:%04x]\n\n", eng->phy.PHY_1ch);
-                        eng->phy.PHY_1ch = ( eng->phy.PHY_1ch & 0xf3ff ) | 0x0800;
-                        phy_write( eng, 28, eng->phy.PHY_1ch );
-//                      phy_write( eng,  0, phy_read( eng,  0 ) | 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
-                }
-        } else {
+        if (eng->run.is_rgmii) {
                 if ( ( eng->phy.PHY_1ch & 0x0c00 ) != 0x0000 ) {
                         printf("\n\n[Warning] Register 28, bit 10~11 must be 0 (RGMIIRX Edge-align Mode)[Reg1ch:%04x]\n\n", eng->phy.PHY_1ch);
                         eng->phy.PHY_1ch = ( eng->phy.PHY_1ch & 0xf3ff ) | 0x0000;
                         phy_write( eng, 28, eng->phy.PHY_1ch );
-//                      phy_write( eng,  0, phy_read( eng,  0 ) | 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
+                }
+        } else {
+                if ( ( eng->phy.PHY_1ch & 0x0c00 ) != 0x0800 ) {
+                        printf("\n\n[Warning] Register 28, bit 10~11 must be 2 (RMII Mode)[Reg1ch:%04x]\n\n", eng->phy.PHY_1ch);
+                        eng->phy.PHY_1ch = ( eng->phy.PHY_1ch & 0xf3ff ) | 0x0800;
+                        phy_write( eng, 28, eng->phy.PHY_1ch );
                 }
         }
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 phy_Reset( eng );
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
         }
         else {
@@ -671,12 +682,12 @@
     uint32_t      reg;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Broadcom] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Broadcom] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         phy_Reset( eng );
 
         if ( eng->run.TM_IEEE ) {
-                if ( eng->arg.GIEEE_sel == 0 ) {
+                if ( eng->run.ieee_sel == 0 ) {
                         phy_write( eng, 25, 0x1f01 );//Force MDI  //Measuring from channel A
                 }
                 else {
@@ -688,7 +699,7 @@
         else
         {
                 // we can check link status from register 0x18
-                if ( eng->run.Speed_sel[ 1 ] ) {
+                if ( eng->run.speed_sel[ 1 ] ) {
                         do {
                                 reg = phy_read( eng, 0x18 ) & 0xF;
                         } while ( reg != 0x7 );
@@ -708,9 +719,9 @@
 //      phy_write( eng, 24, eng->phy.PHY_18h | 0xf007 );//write reg 18h, shadow value 111
 //      phy_write( eng, 28, eng->phy.PHY_1ch | 0x8c00 );//write reg 1Ch, shadow value 00011
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_write( eng,  0, eng->phy.PHY_00h );
         }
         else {
@@ -725,7 +736,7 @@
         uint32_t      PHY_new;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Broadcom] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Broadcom] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         eng->phy.PHY_00h = phy_read( eng, PHY_REG_BMCR );
         eng->phy.PHY_09h = phy_read( eng, PHY_GBCR );
@@ -738,7 +749,7 @@
                 PHY_new = ( eng->phy.PHY_18h & 0x0af0 ) | 0xf007;
                 printf("\n\n[Warning] Shadow value 111, Register 24, bit 8 must be 0 [Reg18h_7:%04x->%04x]\n\n", eng->phy.PHY_18h, PHY_new);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Shadow value 111, Register 24, bit 8 must be 0 [Reg18h_7:%04x->%04x]\n\n", eng->phy.PHY_18h, PHY_new );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Shadow value 111, Register 24, bit 8 must be 0 [Reg18h_7:%04x->%04x]\n\n", eng->phy.PHY_18h, PHY_new );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Shadow value 111, Register 24, bit 8 must be 0 [Reg18h_7:%04x->%04x]\n\n", eng->phy.PHY_18h, PHY_new );
 
                 phy_write( eng, 24, PHY_new ); // Disable RGMII RXD to RXC Skew
         }
@@ -746,15 +757,15 @@
                 PHY_new = ( eng->phy.PHY_1ch & 0x0000 ) | 0x8c00;
                 printf("\n\n[Warning] Shadow value 00011, Register 28, bit 9 must be 0 [Reg1ch_3:%04x->%04x]\n\n", eng->phy.PHY_1ch, PHY_new);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Shadow value 00011, Register 28, bit 9 must be 0 [Reg1ch_3:%04x->%04x]\n\n", eng->phy.PHY_1ch, PHY_new );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Shadow value 00011, Register 28, bit 9 must be 0 [Reg1ch_3:%04x->%04x]\n\n", eng->phy.PHY_1ch, PHY_new );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Shadow value 00011, Register 28, bit 9 must be 0 [Reg1ch_3:%04x->%04x]\n\n", eng->phy.PHY_1ch, PHY_new );
 
                 phy_write( eng, 28, PHY_new );// Disable GTXCLK Clock Delay Enable
         }
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 phy_basic_setting( eng );
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_basic_setting( eng );
 
                 // Enable Internal Loopback mode
@@ -763,23 +774,23 @@
 #ifdef Delay_PHYRst
                 phy_delay( Delay_PHYRst );
 #endif
-                /* Only 1G Test is PASS, 100M and 10M is false @20130619 */
+                /* Only 1G Test is PASS, 100M and 10M is 0 @20130619 */
 
 // Waiting for BCM FAE's response
-//              if ( eng->run.Speed_sel[ 0 ] ) {
+//              if ( eng->run.speed_sel[ 0 ] ) {
 //                      // Speed 1G
 //                      // Enable Internal Loopback mode
 //                      // Page 58, BCM54612EB1KMLG_Spec.pdf
 //                      phy_write( eng,  0, 0x5140 );
 //              }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {
+//              else if ( eng->run.speed_sel[ 1 ] ) {
 //                      // Speed 100M
 //                      // Enable Internal Loopback mode
 //                      // Page 58, BCM54612EB1KMLG_Spec.pdf
 //                      phy_write( eng,  0, 0x7100 );
 //                      phy_write( eng, 30, 0x1000 );
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {
+//              else if ( eng->run.speed_sel[ 2 ] ) {
 //                      // Speed 10M
 //                      // Enable Internal Loopback mode
 //                      // Page 58, BCM54612EB1KMLG_Spec.pdf
@@ -793,14 +804,14 @@
         }
         else {
 
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         // Page 60, BCM54612EB1KMLG_Spec.pdf
                         // need to insert loopback plug
                         phy_write( eng,  9, 0x1800 );
                         phy_write( eng,  0, 0x0140 );
                         phy_write( eng, 24, 0x8400 ); // Enable Transmit test mode
                 }
-                else if ( eng->run.Speed_sel[ 1 ] ) {
+                else if ( eng->run.speed_sel[ 1 ] ) {
                         // Page 60, BCM54612EB1KMLG_Spec.pdf
                         // need to insert loopback plug
                         phy_write( eng,  0, 0x2100 );
@@ -822,7 +833,7 @@
 //------------------------------------------------------------
 void phy_realtek (MAC_ENGINE *eng) {//RTL8201N
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         phy_Reset( eng );
 }
@@ -832,7 +843,7 @@
 //internal loop 10M : no  loopback stub
 void phy_realtek0 (MAC_ENGINE *eng) {//RTL8201E
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         eng->phy.RMIICK_IOMode = eng->phy.RMIICK_IOMode | PHY_Flag_RMIICK_IOMode_RTL8201E;
 
@@ -844,28 +855,28 @@
                 phy_write( eng, 25, eng->phy.PHY_19h | 0x0400 );
                 printf("\n\n[Warning] Register 25, bit 10 must be 1 [Reg19h:%04x]\n\n", eng->phy.PHY_19h);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Register 25, bit 10 must be 1 [Reg19h:%04x]\n\n", eng->phy.PHY_19h );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 10 must be 1 [Reg19h:%04x]\n\n", eng->phy.PHY_19h );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 10 must be 1 [Reg19h:%04x]\n\n", eng->phy.PHY_19h );
         }
         //Check TXC Input/Output Direction
-        if ( eng->arg.GEn_RMIIPHY_IN == 0 ) {
+        if ( eng->arg.ctrl.b.rmii_phy_in == 0 ) {
                 if ( ( eng->phy.PHY_19h & 0x0800 ) == 0x0800 ) {
                         phy_write( eng, 25, eng->phy.PHY_19h & 0xf7ff );
                         printf("\n\n[Warning] Register 25, bit 11 must be 0 (TXC should be output mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h);
                         if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Register 25, bit 11 must be 0 (TXC should be output mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
-                        if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 11 must be 0 (TXC should be output mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
+                        if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 11 must be 0 (TXC should be output mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
                 }
         } else {
                 if ( ( eng->phy.PHY_19h & 0x0800 ) == 0x0000 ) {
                         phy_write( eng, 25, eng->phy.PHY_19h | 0x0800 );
                         printf("\n\n[Warning] Register 25, bit 11 must be 1 (TXC should be input mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h);
                         if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Register 25, bit 11 must be 1 (TXC should be input mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
-                        if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 11 must be 1 (TXC should be input mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
+                        if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Register 25, bit 11 must be 1 (TXC should be input mode)[Reg19h:%04x]\n\n", eng->phy.PHY_19h );
                 }
         }
 
         if ( eng->run.TM_IEEE ) {
                 phy_write( eng, 31, 0x0001 );
-                if ( eng->arg.GIEEE_sel == 0 ) {
+                if ( eng->run.ieee_sel == 0 ) {
                         phy_write( eng, 25, 0x1f01 );//Force MDI  //Measuring from channel A
                 }
                 else {
@@ -877,10 +888,10 @@
 
 //------------------------------------------------------------
 void recov_phy_realtek1 (MAC_ENGINE *eng) {//RTL8211D
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Test Mode 1
+                        if ( eng->run.speed_sel[ 0 ] ) {
+                                if ( eng->run.ieee_sel == 0 ) {//Test Mode 1
                                         //Rev 1.2
                                         phy_write( eng, 31, 0x0002 );
                                         phy_write( eng,  2, 0xc203 );
@@ -893,7 +904,7 @@
                                         phy_write( eng,  9, 0x0000 );
                                 }
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 //Rev 1.2
                                 phy_write( eng, 23, 0x2100 );
                                 phy_write( eng, 16, 0x016e );
@@ -908,15 +919,15 @@
                         phy_Reset( eng );
                 } // End if ( eng->run.TM_IEEE )
         }
-        else if ( eng->phy.loop_phy ) {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+        else if ( eng->phy.loopback ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 31, 0x0000 ); // new in Rev. 1.6
                         phy_write( eng,  0, 0x1140 ); // new in Rev. 1.6
                         phy_write( eng, 20, 0x8040 ); // new in Rev. 1.6
                 }
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 31, 0x0001 );
                         phy_write( eng,  3, 0xdf41 );
                         phy_write( eng,  2, 0xdf20 );
@@ -933,12 +944,12 @@
                         phy_write( eng, 21, 0x1006 ); // new in Rev. 1.6
                         phy_write( eng, 23, 0x2100 );
 //              }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
+//              else if ( eng->run.speed_sel[ 1 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  0, 0x1200 );
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
+//              else if ( eng->run.speed_sel[ 2 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  4, 0x05e1 );
@@ -946,7 +957,7 @@
                 }
                 phy_Reset( eng );
                 phy_delay(2000);
-        } // End if ( eng->run.TM_Burst )
+        } // End if ( eng->run.tm_tx_only )
 } // End void recov_phy_realtek1 (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
@@ -955,12 +966,12 @@
 //internal loop 10M : no  loopback stub
 void phy_realtek1 (MAC_ENGINE *eng) {//RTL8211D
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Test Mode 1
+                        if ( eng->run.speed_sel[ 0 ] ) {
+                                if ( eng->run.ieee_sel == 0 ) {//Test Mode 1
                                         //Rev 1.2
                                         phy_write( eng, 31, 0x0002 );
                                         phy_write( eng,  2, 0xc22b );
@@ -973,8 +984,8 @@
                                         phy_write( eng,  9, 0x8000 );
                                 }
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
-                                if ( eng->arg.GIEEE_sel == 0 ) {//From Channel A
+                        else if ( eng->run.speed_sel[ 1 ] ) {
+                                if ( eng->run.ieee_sel == 0 ) {//From Channel A
                                         //Rev 1.2
                                         phy_write( eng, 23, 0xa102 );
                                         phy_write( eng, 16, 0x01ae );//MDI
@@ -987,12 +998,12 @@
                                 }
                         }
                         else {
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Diff. Voltage/TP-IDL/Jitter: Pseudo-random pattern
+                                if ( eng->run.ieee_sel == 0 ) {//Diff. Voltage/TP-IDL/Jitter: Pseudo-random pattern
                                         phy_write( eng, 31, 0x0006 );
                                         phy_write( eng,  0, 0x5a21 );
                                         phy_write( eng, 31, 0x0000 );
                                 }
-                                else if ( eng->arg.GIEEE_sel == 1 ) {//Harmonic: pattern
+                                else if ( eng->run.ieee_sel == 1 ) {//Harmonic: pattern
                                         phy_write( eng, 31, 0x0006 );
                                         phy_write( eng,  2, 0x05ee );
                                         phy_write( eng,  0, 0xff21 );
@@ -1010,17 +1021,17 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
 
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 20, 0x0042 );//new in Rev. 1.6
                 }
         }
         else {
         // refer to RTL8211D Register for Manufacture Test_V1.6.pdf
         // MDI loop back
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 31, 0x0001 );
                         phy_write( eng,  3, 0xff41 );
                         phy_write( eng,  2, 0xd720 );
@@ -1047,14 +1058,14 @@
 //                      phy_delay(200); // new in Rev. 1.6
                         phy_delay(5000); // 20150504
 //              }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
+//              else if ( eng->run.speed_sel[ 1 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0000 );
 //                      phy_write( eng,  4, 0x0061 );
 //                      phy_write( eng,  0, 0x1200 );
 //                      phy_delay(5000);
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
+//              else if ( eng->run.speed_sel[ 2 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0000 );
 //                      phy_write( eng,  4, 0x05e1 );
@@ -1068,18 +1079,18 @@
 } // End void phy_realtek1 (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
-void recov_phy_realtek2 (MAC_ENGINE *eng) {//RTL8211E
-#ifdef Realtek_debug
-printf ("\nClear RTL8211E [Start] =====>\n");
-#endif
-        if ( eng->run.TM_Burst ) {
+void recov_phy_realtek2 (MAC_ENGINE *eng)
+{
+	RTK_DBG_PRINTF("\nClear RTL8211E [Start] =====>\n");
+
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
+                        if ( eng->run.speed_sel[ 0 ] ) {
                                 //Rev 1.2
                                 phy_write( eng, 31, 0x0000 );
                                 phy_write( eng,  9, 0x0000 );
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 //Rev 1.2
                                 phy_write( eng, 31, 0x0007 );
                                 phy_write( eng, 30, 0x002f );
@@ -1107,38 +1118,14 @@
                 else {
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
-                        //Rev 1.5  //not stable
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  0, 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
-//                      phy_delay(30);
-//                      phy_write( eng, 23, 0x2160 );
-//                      phy_write( eng, 31, 0x0007 );
-//                      phy_write( eng, 30, 0x0040 );
-//                      phy_write( eng, 24, 0x0004 );
-//                      phy_write( eng, 24, 0x1a24 );
-//                      phy_write( eng, 25, 0xfd00 );
-//                      phy_write( eng, 24, 0x0000 );
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  0, 0x1140 );
-//                      phy_write( eng, 26, 0x0040 );
-//                      phy_write( eng, 31, 0x0007 );
-//                      phy_write( eng, 30, 0x002f );
-//                      phy_write( eng, 23, 0xd88f );
-//                      phy_write( eng, 30, 0x0023 );
-//                      phy_write( eng, 22, 0x0300 );
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng, 21, 0x1006 );
-//                      phy_write( eng, 23, 0x2100 );
-
+                if ( eng->run.speed_sel[ 0 ] ) {
                         //Rev 1.6
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, 0x8000 );
-#ifdef Realtek_debug
+#ifdef RTK_DEBUG
 #else
                         phy_Wait_Reset_Done( eng );
                         phy_delay(30);
@@ -1159,12 +1146,12 @@
                         phy_write( eng, 21, 0x1006 );
                         phy_write( eng, 23, 0x2100 );
                 }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
+//              else if ( eng->run.speed_sel[ 1 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  0, 0x1200 );
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
+//              else if ( eng->run.speed_sel[ 2 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  4, 0x05e1 );
@@ -1174,34 +1161,33 @@
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, 0x1140 );
                 }
-#ifdef Realtek_debug
+#ifdef RTK_DEBUG
 #else
                 // Check register 0x11 bit10 Link OK or not OK
                 phy_check_register ( eng, 17, 0x0c02, 0x0000, 10, "clear RTL8211E");
 #endif
         }
-#ifdef Realtek_debug
-printf ("\nClear RTL8211E [End] =====>\n");
-#endif
+
+	RTK_DBG_PRINTF("\nClear RTL8211E [End] =====>\n");
 } // End void recov_phy_realtek2 (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
 //internal loop 1G  : no  loopback stub
 //internal loop 100M: no  loopback stub
 //internal loop 10M : no  loopback stub
-void phy_realtek2 (MAC_ENGINE *eng) {//RTL8211E
+// for RTL8211E
+void phy_realtek2 (MAC_ENGINE *eng) 
+{
         uint16_t     check_value;
-#ifdef Realtek_debug
-printf ("\nSet RTL8211E [Start] =====>\n");
-GPIO_20h_Value = Read_Reg_GPIO_DD( 0x20 );
-GPIO_24h_Value = Read_Reg_GPIO_DD( 0x24 ) | 0x00400000;
 
-Write_Reg_GPIO_DD( 0x24, GPIO_24h_Value );
-#endif
+	RTK_DBG_PRINTF("\nSet RTL8211E [Start] =====>\n");
+
+	rtk_dbg_gpio_init();	
+
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-#ifdef Realtek_debug
+#ifdef RTK_DEBUG
 #else
         phy_write( eng, 31, 0x0000 );
         phy_Read_Write( eng,  0, 0x0000, 0x8000 | eng->phy.PHY_00h ); // clr set // Rst PHY
@@ -1209,7 +1195,7 @@
         phy_delay(30);
 #endif
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
                         //Rev 1.2
                         phy_write( eng, 31, 0x0005 );
@@ -1220,18 +1206,18 @@
                         phy_write( eng, 21, 0x0108 );
                         phy_write( eng, 31, 0x0000 );
 
-                        if ( eng->run.Speed_sel[ 0 ] ) {
+                        if ( eng->run.speed_sel[ 0 ] ) {
                                 //Rev 1.2
                                 phy_write( eng, 31, 0x0000 );
 
-                                if ( eng->arg.GIEEE_sel == 0 ) {
+                                if ( eng->run.ieee_sel == 0 ) {
                                         phy_write( eng,  9, 0x2000 );//Test Mode 1
                                 }
                                 else {
                                         phy_write( eng,  9, 0x8000 );//Test Mode 4
                                 }
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 //Rev 1.2
                                 phy_write( eng, 31, 0x0007 );
                                 phy_write( eng, 30, 0x002f );
@@ -1240,7 +1226,7 @@
                                 phy_write( eng, 24, 0xf060 );
                                 phy_write( eng, 31, 0x0000 );
 
-                                if ( eng->arg.GIEEE_sel == 0 ) {
+                                if ( eng->run.ieee_sel == 0 ) {
                                         phy_write( eng, 16, 0x00ae );//From Channel A
                                 }
                                 else {
@@ -1250,10 +1236,10 @@
                         else {
                                 //Rev 1.2
                                 phy_write( eng, 31, 0x0006 );
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Diff. Voltage/TP-IDL/Jitter
+                                if ( eng->run.ieee_sel == 0 ) {//Diff. Voltage/TP-IDL/Jitter
                                         phy_write( eng,  0, 0x5a21 );
                                 }
-                                else if ( eng->arg.GIEEE_sel == 1 ) {//Harmonic: �FF� pattern
+                                else if ( eng->run.ieee_sel == 1 ) {//Harmonic: �FF� pattern
                                         phy_write( eng,  2, 0x05ee );
                                         phy_write( eng,  0, 0xff21 );
                                 }
@@ -1269,8 +1255,8 @@
                         phy_delay(30);
                 }
         }
-        else if ( eng->phy.loop_phy ) {
-#ifdef Realtek_debug
+        else if ( eng->phy.loopback ) {
+#ifdef RTK_DEBUG
                 phy_write( eng,  0, 0x0000 );
                 phy_write( eng,  0, 0x8000 );
                 phy_delay(60);
@@ -1289,52 +1275,19 @@
         }
         else {
 #ifdef Enable_Dual_Mode
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         check_value = 0x0c02 | 0xa000;
-                        //set GPIO
                 }
-                else if ( eng->run.Speed_sel[ 1 ] ) {
+                else if ( eng->run.speed_sel[ 1 ] ) {
                         check_value = 0x0c02 | 0x6000;
-                        //set GPIO
                 }
-                else if ( eng->run.Speed_sel[ 2 ] ) {
+                else if ( eng->run.speed_sel[ 2 ] ) {
                         check_value = 0x0c02 | 0x2000;
-                        //set GPIO
                 }
 #else
-                if ( eng->run.Speed_sel[ 0 ] ) {
-                        check_value = 0x0c02 | 0xa000;
-                        //Rev 1.5  //not stable
-//                      phy_write( eng, 23, 0x2160 );
-//                      phy_write( eng, 31, 0x0007 );
-//                      phy_write( eng, 30, 0x0040 );
-//                      phy_write( eng, 24, 0x0004 );
-//                      phy_write( eng, 24, 0x1a24 );
-//                      phy_write( eng, 25, 0x7d00 );
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng, 23, 0x2100 );
-//                      phy_write( eng, 31, 0x0007 );
-//                      phy_write( eng, 30, 0x0040 );
-//                      phy_write( eng, 24, 0x0000 );
-//                      phy_write( eng, 30, 0x0023 );
-//                      phy_write( eng, 22, 0x0006 );
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  0, 0x0140 );
-//                      phy_write( eng, 26, 0x0060 );
-//                      phy_write( eng, 31, 0x0007 );
-//                      phy_write( eng, 30, 0x002f );
-//                      phy_write( eng, 23, 0xd820 );
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng, 21, 0x0206 );
-//                      phy_write( eng, 23, 0x2120 );
-//                      phy_write( eng, 23, 0x2160 );
-
-                        //Rev 1.6
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  0, 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
-//                      phy_delay(30);
-  #ifdef Realtek_debug
+                if ( eng->run.speed_sel[ 0 ] ) {
+                        check_value = 0x0c02 | 0xa000;                
+#ifdef RTK_DEBUG
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, 0x8000 );
                         phy_delay(60);
@@ -1355,13 +1308,13 @@
                         phy_write( eng, 21, 0x0206 );
                         phy_write( eng, 23, 0x2120 );
                         phy_write( eng, 23, 0x2160 );
-  #ifdef Realtek_debug
+  #ifdef RTK_DEBUG
                         phy_delay(600);
   #else
                         phy_delay(300);
   #endif
                 }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
+//              else if ( eng->run.speed_sel[ 1 ] ) {//option
 //                      check_value = 0x0c02 | 0x6000;
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0000 );
@@ -1369,7 +1322,7 @@
 //                      phy_write( eng,  0, 0x1200 );
 //                      phy_delay(6000);
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
+//              else if ( eng->run.speed_sel[ 2 ] ) {//option
 //                      check_value = 0x0c02 | 0x2000;
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0000 );
@@ -1378,38 +1331,37 @@
 //                      phy_delay(6000);
 //              }
                 else {
-                        if ( eng->run.Speed_sel[ 1 ] )
+                        if ( eng->run.speed_sel[ 1 ] )
                                 check_value = 0x0c02 | 0x6000;
                         else
                                 check_value = 0x0c02 | 0x2000;
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, eng->phy.PHY_00h );
-  #ifdef Realtek_debug
+  #ifdef RTK_DEBUG
                         phy_delay(300);
   #else
                         phy_delay(150);
   #endif
                 }
 #endif
-#ifdef Realtek_debug
+#ifdef RTK_DEBUG
 #else
                 // Check register 0x11 bit10 Link OK or not OK
                 phy_check_register ( eng, 17, 0x0c02 | 0xe000, check_value, 10, "set RTL8211E");
 #endif
         }
-#ifdef Realtek_debug
-printf ("\nSet RTL8211E [End] =====>\n");
-#endif
+
+	RTK_DBG_PRINTF("\nSet RTL8211E [End] =====>\n");
 } // End void phy_realtek2 (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
 void recov_phy_realtek3 (MAC_ENGINE *eng) {//RTL8211C
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
+                        if ( eng->run.speed_sel[ 0 ] ) {
                                 phy_write( eng,  9, 0x0000 );
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 phy_write( eng, 17, eng->phy.PHY_11h );
                                 phy_write( eng, 14, 0x0000 );
                                 phy_write( eng, 16, 0x00a0 );
@@ -1423,14 +1375,14 @@
                 else {
                 }
         }
-        else if ( eng->phy.loop_phy ) {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+        else if ( eng->phy.loopback ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 11, 0x0000 );
                 }
                 phy_write( eng, 12, 0x1006 );
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 31, 0x0001 );
                         phy_write( eng,  4, 0xb000 );
                         phy_write( eng,  3, 0xff41 );
@@ -1454,30 +1406,30 @@
 //------------------------------------------------------------
 void phy_realtek3 (MAC_ENGINE *eng) {//RTL8211C
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
-                                if ( eng->arg.GIEEE_sel == 0 ) {   //Test Mode 1
+                        if ( eng->run.speed_sel[ 0 ] ) {
+                                if ( eng->run.ieee_sel == 0 ) {   //Test Mode 1
                                         phy_write( eng,  9, 0x2000 );
                                 }
-                                else if ( eng->arg.GIEEE_sel == 1 ) {//Test Mode 2
+                                else if ( eng->run.ieee_sel == 1 ) {//Test Mode 2
                                         phy_write( eng,  9, 0x4000 );
                                 }
-                                else if ( eng->arg.GIEEE_sel == 2 ) {//Test Mode 3
+                                else if ( eng->run.ieee_sel == 2 ) {//Test Mode 3
                                         phy_write( eng,  9, 0x6000 );
                                 }
                                 else {                           //Test Mode 4
                                         phy_write( eng,  9, 0x8000 );
                                 }
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 eng->phy.PHY_11h = phy_read( eng, PHY_SR );
                                 phy_write( eng, 17, eng->phy.PHY_11h & 0xfff7 );
                                 phy_write( eng, 14, 0x0660 );
 
-                                if ( eng->arg.GIEEE_sel == 0 ) {
+                                if ( eng->run.ieee_sel == 0 ) {
                                         phy_write( eng, 16, 0x00a0 );//MDI  //From Channel A
                                 }
                                 else {
@@ -1485,12 +1437,12 @@
                                 }
                         }
                         else {
-//                              if ( eng->arg.GIEEE_sel == 0 ) {//Pseudo-random pattern
+//                              if ( eng->run.ieee_sel == 0 ) {//Pseudo-random pattern
 //                                      phy_write( eng, 31, 0x0006 );
 //                                      phy_write( eng,  0, 0x5a21 );
 //                                      phy_write( eng, 31, 0x0000 );
 //                              }
-//                              else if ( eng->arg.GIEEE_sel == 1 ) {//�FF� pattern
+//                              else if ( eng->run.ieee_sel == 1 ) {//�FF� pattern
 //                                      phy_write( eng, 31, 0x0006 );
 //                                      phy_write( eng,  2, 0x05ee );
 //                                      phy_write( eng,  0, 0xff21 );
@@ -1508,7 +1460,7 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_write( eng,  0, 0x9200 );
                 phy_Wait_Reset_Done( eng );
                 phy_delay(30);
@@ -1516,7 +1468,7 @@
                 phy_write( eng, 17, 0x401c );
                 phy_write( eng, 12, 0x0006 );
 
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 11, 0x0002 );
                 }
                 else {
@@ -1524,7 +1476,7 @@
                 }
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 31, 0x0001 );
                         phy_write( eng,  4, 0xb000 );
                         phy_write( eng,  3, 0xff41 );
@@ -1556,7 +1508,7 @@
 //internal loop 10M : no  loopback stub
 void phy_realtek4 (MAC_ENGINE *eng) {//RTL8201F
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         eng->phy.RMIICK_IOMode = eng->phy.RMIICK_IOMode | PHY_Flag_RMIICK_IOMode_RTL8201F;
 
@@ -1567,27 +1519,27 @@
                 phy_write( eng, 16, eng->phy.PHY_10h | 0x0008 );
                 printf("\n\n[Warning] Page 7 Register 16, bit 3 must be 1 [Reg10h_7:%04x]\n\n", eng->phy.PHY_10h);
                 if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Page 7 Register 16, bit 3 must be 1 [Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 3 must be 1 [Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
+                if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 3 must be 1 [Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
         }
         //Check TXC Input/Output Direction
-        if ( eng->arg.GEn_RMIIPHY_IN == 0 ) {
+        if ( eng->arg.ctrl.b.rmii_phy_in == 0 ) {
                 if ( ( eng->phy.PHY_10h & 0x1000 ) == 0x1000 ) {
                         phy_write( eng, 16, eng->phy.PHY_10h & 0xefff );
                         printf("\n\n[Warning] Page 7 Register 16, bit 12 must be 0 (TXC should be output mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h);
                         if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Page 7 Register 16, bit 12 must be 0 (TXC should be output mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
-                        if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 12 must be 0 (TXC should be output mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
+                        if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 12 must be 0 (TXC should be output mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
                 }
         } else {
                 if ( ( eng->phy.PHY_10h & 0x1000 ) == 0x0000 ) {
                         phy_write( eng, 16, eng->phy.PHY_10h | 0x1000 );
                         printf("\n\n[Warning] Page 7 Register 16, bit 12 must be 1 (TXC should be input mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h);
                         if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Page 7 Register 16, bit 12 must be 1 (TXC should be input mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
-                        if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 12 must be 1 (TXC should be input mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
+                        if ( !eng->run.tm_tx_only ) PRINTF( FP_LOG, "\n\n[Warning] Page 7 Register 16, bit 12 must be 1 (TXC should be input mode)[Reg10h_7:%04x]\n\n", eng->phy.PHY_10h );
                 }
         }
         phy_write( eng, 31, 0x0000 );
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
                         //Rev 1.0
                         phy_write( eng, 31, 0x0004 );
@@ -1595,12 +1547,12 @@
                         phy_write( eng, 21, 0xc5a0 );
                         phy_write( eng, 31, 0x0000 );
 
-                        if ( eng->run.Speed_sel[ 1 ] ) {
+                        if ( eng->run.speed_sel[ 1 ] ) {
                                 phy_write( eng,  0, 0x8000 ); // Reset PHY
                                 phy_Wait_Reset_Done( eng );
                                 phy_write( eng, 24, 0x0310 ); // Disable ALDPS
 
-                                if ( eng->arg.GIEEE_sel == 0 ) {//From Channel A (RJ45 pair 1, 2)
+                                if ( eng->run.ieee_sel == 0 ) {//From Channel A (RJ45 pair 1, 2)
                                         phy_write( eng, 28, 0x40c2 ); //Force MDI
                                 }
                                 else {//From Channel B (RJ45 pair 3, 6)
@@ -1614,9 +1566,9 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 // Internal loopback
-                if ( eng->run.Speed_sel[ 1 ] ) {
+                if ( eng->run.speed_sel[ 1 ] ) {
                         // Enable 100M PCS loop back; RTL8201(F_FL_FN)-VB-CG_DataSheet_1.6.pdf
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, 0x6100 );
@@ -1625,7 +1577,7 @@
                         phy_write( eng, 16, 0x0FF8 );
                         phy_write( eng, 31, 0x0000 );
                         phy_delay(20);
-                } else if ( eng->run.Speed_sel[ 2 ] ) {
+                } else if ( eng->run.speed_sel[ 2 ] ) {
                         // Enable 10M PCS loop back; RTL8201(F_FL_FN)-VB-CG_DataSheet_1.6.pdf
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  0, 0x4100 );
@@ -1638,12 +1590,12 @@
         }
         else {
                 // External loopback
-                if ( eng->run.Speed_sel[ 1 ] ) {
+                if ( eng->run.speed_sel[ 1 ] ) {
                         // Enable 100M MDI loop back Nway option; RTL8201(F_FL_FN)-VB-CG_DataSheet_1.6.pdf
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  4, 0x01E1 );
                         phy_write( eng,  0, 0x1200 );
-                } else if ( eng->run.Speed_sel[ 2 ] ) {
+                } else if ( eng->run.speed_sel[ 2 ] ) {
                         // Enable 10M MDI loop back Nway option; RTL8201(F_FL_FN)-VB-CG_DataSheet_1.6.pdf
                         phy_write( eng, 31, 0x0000 );
                         phy_write( eng,  4, 0x0061 );
@@ -1663,18 +1615,18 @@
 }
 
 //------------------------------------------------------------
-void recov_phy_realtek5 (MAC_ENGINE *eng) {//RTL8211F
-#ifdef Realtek_debug
-printf ("\nClear RTL8211F [Start] =====>\n");
-#endif
-        if ( eng->run.TM_Burst ) {
+/* for RTL8211F */
+void recov_phy_realtek5 (MAC_ENGINE *eng) 
+{
+	RTK_DBG_PRINTF("\nClear RTL8211F [Start] =====>\n");
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
+                        if ( eng->run.speed_sel[ 0 ] ) {
                                 //Rev 1.0
                                 phy_write( eng, 31, 0x0000 );
                                 phy_write( eng,  9, 0x0000 );
                         }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {
+                        else if ( eng->run.speed_sel[ 1 ] ) {
                                 //Rev 1.0
                                 phy_write( eng, 31, 0x0000 );
                                 phy_write( eng, 24, 0x2118 );//RGMII
@@ -1696,21 +1648,21 @@
                 else {
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         //Rev 1.1
                         phy_write( eng, 31, 0x0a43 );
                         phy_write( eng, 24, 0x2118 );
                         phy_write( eng,  0, 0x1040 );
                 }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
+//              else if ( eng->run.speed_sel[ 1 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  0, 0x1200 );
 //              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
+//              else if ( eng->run.speed_sel[ 2 ] ) {//option
 //                      phy_write( eng, 31, 0x0000 );
 //                      phy_write( eng,  9, 0x0200 );
 //                      phy_write( eng,  4, 0x01e1 );
@@ -1721,7 +1673,7 @@
                         phy_write( eng,  0, 0x1040 );
                 }
 
-#ifdef Realtek_debug
+#ifdef RTK_DEBUG
 #else
                 // Check register 0x1A bit2 Link OK or not OK
                 phy_write( eng, 31, 0x0a43 );
@@ -1729,212 +1681,183 @@
                 phy_write( eng, 31, 0x0000 );
 #endif
         }
-#ifdef Realtek_debug
-printf ("\nClear RTL8211F [End] =====>\n");
-#endif
+
+	RTK_DBG_PRINTF("\nClear RTL8211F [End] =====>\n");
 }
 
 //------------------------------------------------------------
 void phy_realtek5 (MAC_ENGINE *eng) {//RTL8211F
-        uint16_t     check_value;
-#ifdef Realtek_debug
-printf ("\nSet RTL8211F [Start] =====>\n");
-#endif
-        if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-
-        if ( eng->run.TM_Burst ) {
-                if ( eng->run.TM_IEEE ) {
-                        if ( eng->run.Speed_sel[ 0 ] ) {
-                                //Rev 1.0
-                                phy_write( eng, 31, 0x0000 );
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Test Mode 1
-                                        phy_write( eng,  9, 0x0200 );
-                                }
-                                else if ( eng->arg.GIEEE_sel == 1 ) {//Test Mode 2
-                                        phy_write( eng,  9, 0x0400 );
-                                }
-                                else {//Test Mode 4
-                                        phy_write( eng,  9, 0x0800 );
-                                }
-                        }
-                        else if ( eng->run.Speed_sel[ 1 ] ) {//option
-                                //Rev 1.0
-                                phy_write( eng, 31, 0x0000 );
-                                if ( eng->arg.GIEEE_sel == 0 ) {//Output MLT-3 from Channel A
-                                        phy_write( eng, 24, 0x2318 );
-                                }
-                                else {//Output MLT-3 from Channel B
-                                        phy_write( eng, 24, 0x2218 );
-                                }
-                                phy_write( eng,  9, 0x0000 );
-                                phy_write( eng,  0, 0x2100 );
-                        }
-                        else {
-                                //Rev 1.0
-                                //0: For Diff. Voltage/TP-IDL/Jitter with EEE
-                                //1: For Diff. Voltage/TP-IDL/Jitter without EEE
-                                //2: For Harmonic (all "1" patten) with EEE
-                                //3: For Harmonic (all "1" patten) without EEE
-                                //4: For Harmonic (all "0" patten) with EEE
-                                //5: For Harmonic (all "0" patten) without EEE
-                                phy_write( eng, 31, 0x0000 );
-                                phy_write( eng,  9, 0x0000 );
-                                phy_write( eng,  4, 0x0061 );
-                                if ( (eng->arg.GIEEE_sel & 0x1) == 0 ) {//with EEE
-                                        phy_write( eng, 25, 0x0853 );
-                                }
-                                else {//without EEE
-                                        phy_write( eng, 25, 0x0843 );
-                                }
-                                phy_write( eng,  0, 0x9200 );
-                                phy_Wait_Reset_Done( eng );
-
-                                if ( (eng->arg.GIEEE_sel & 0x6) == 0 ) {//For Diff. Voltage/TP-IDL/Jitter
-                                        phy_write( eng, 31, 0x0c80 );
-                                        phy_write( eng, 18, 0x0115 );
-                                        phy_write( eng, 16, 0x5a21 );
-                                }
-                                else if ( (eng->arg.GIEEE_sel & 0x6) == 0x2 ) {//For Harmonic (all "1" patten)
-                                        phy_write( eng, 31, 0x0c80 );
-                                        phy_write( eng, 18, 0x0015 );
-                                        phy_write( eng, 16, 0xff21 );
-                                }
-                                else {//For Harmonic (all "0" patten)
-                                        phy_write( eng, 31, 0x0c80 );
-                                        phy_write( eng, 18, 0x0015 );
-                                        phy_write( eng, 16, 0x0021 );
-                                }
-                                phy_write( eng, 31, 0x0000 );
-                        }
-                }
-                else {
-                        phy_Reset( eng );
-                }
-        }
-        else if ( eng->phy.loop_phy ) {
-                phy_Reset( eng );
-        }
-        else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
-                        check_value = 0x0004 | 0x0028;
-                        //Rev 1.1
-                        phy_write( eng, 31, 0x0a43 );
-                        phy_write( eng,  0, 0x8000 );
-#ifdef Realtek_debug
-                        phy_delay(60);
-#else
-                        phy_Wait_Reset_Done( eng );
-                        phy_delay(30);
-#endif
-
-                        phy_write( eng,  0, 0x0140 );
-                        phy_write( eng, 24, 0x2d18 );
-#ifdef Realtek_debug
-                        phy_delay(600);
-#else
-                        phy_delay(300);
-#endif
-                }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {//option
-//                      check_value = 0x0004 | 0x0018;
-//                      phy_write( eng, 31, 0x0a43 );
-//                      phy_write( eng,  0, 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
-//                      phy_delay(30);
-//
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  9, 0x0000 );
-//                      phy_write( eng,  4, 0x01e1 );
-//                      phy_write( eng,  0, 0x1200 );
-//                      phy_delay(6000);
-//              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {//option
-//                      check_value = 0x0004 | 0x0008;
-//                      phy_write( eng, 31, 0x0a43 );
-//                      phy_write( eng,  0, 0x8000 );
-//                      phy_Wait_Reset_Done( eng );
-//                      phy_delay(30);
-//
-//                      phy_write( eng, 31, 0x0000 );
-//                      phy_write( eng,  9, 0x0000 );
-//                      phy_write( eng,  4, 0x0061 );
-//                      phy_write( eng,  0, 0x1200 );
-//                      phy_delay(6000);
-//              }
-                else {
-                        if ( eng->run.Speed_sel[ 1 ] )
-                                check_value = 0x0004 | 0x0018;
-                        else
-                                check_value = 0x0004 | 0x0008;
-#ifdef Realtek_debug
-#else
-                        phy_write( eng, 31, 0x0a43 );
-                        phy_write( eng,  0, 0x8000 );
-                        phy_Wait_Reset_Done( eng );
-                        phy_delay(30);
-#endif
+	uint16_t check_value;
 
-                        phy_write( eng, 31, 0x0000 );
-                        phy_write( eng,  0, eng->phy.PHY_00h );
-#ifdef Realtek_debug
-                        phy_delay(300);
-#else
-                        phy_delay(150);
+	RTK_DBG_PRINTF("\nSet RTL8211F [Start] =====>\n");
+	if (DbgPrn_PHYName)
+		printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2,
+		       eng->phy.PHY_ID3, eng->phy.phy_name);
+
+	if (eng->run.tm_tx_only) {
+		if (eng->run.TM_IEEE) {
+			if (eng->run.speed_sel[0]) {
+				// Rev 1.0
+				phy_write(eng, 31, 0x0000);
+				if (eng->run.ieee_sel == 0) { // Test Mode 1
+					phy_write(eng, 9, 0x0200);
+				} else if (eng->run.ieee_sel ==
+					   1) { // Test Mode 2
+					phy_write(eng, 9, 0x0400);
+				} else { // Test Mode 4
+					phy_write(eng, 9, 0x0800);
+				}
+			} else if (eng->run.speed_sel[1]) { // option
+				// Rev 1.0
+				phy_write(eng, 31, 0x0000);
+				if (eng->run.ieee_sel ==
+				    0) { // Output MLT-3 from Channel A
+					phy_write(eng, 24, 0x2318);
+				} else { // Output MLT-3 from Channel B
+					phy_write(eng, 24, 0x2218);
+				}
+				phy_write(eng, 9, 0x0000);
+				phy_write(eng, 0, 0x2100);
+			} else {
+				// Rev 1.0
+				// 0: For Diff. Voltage/TP-IDL/Jitter with EEE
+				// 1: For Diff. Voltage/TP-IDL/Jitter without
+				// EEE 2: For Harmonic (all "1" patten) with EEE
+				// 3: For Harmonic (all "1" patten) without EEE
+				// 4: For Harmonic (all "0" patten) with EEE
+				// 5: For Harmonic (all "0" patten) without EEE
+				phy_write(eng, 31, 0x0000);
+				phy_write(eng, 9, 0x0000);
+				phy_write(eng, 4, 0x0061);
+				if ((eng->run.ieee_sel & 0x1) == 0) { // with
+								      // EEE
+					phy_write(eng, 25, 0x0853);
+				} else { // without EEE
+					phy_write(eng, 25, 0x0843);
+				}
+				phy_write(eng, 0, 0x9200);
+				phy_Wait_Reset_Done(eng);
+
+				if ((eng->run.ieee_sel & 0x6) ==
+				    0) { // For Diff. Voltage/TP-IDL/Jitter
+					phy_write(eng, 31, 0x0c80);
+					phy_write(eng, 18, 0x0115);
+					phy_write(eng, 16, 0x5a21);
+				} else if ((eng->run.ieee_sel & 0x6) ==
+					   0x2) { // For Harmonic (all "1"
+						  // patten)
+					phy_write(eng, 31, 0x0c80);
+					phy_write(eng, 18, 0x0015);
+					phy_write(eng, 16, 0xff21);
+				} else { // For Harmonic (all "0" patten)
+					phy_write(eng, 31, 0x0c80);
+					phy_write(eng, 18, 0x0015);
+					phy_write(eng, 16, 0x0021);
+				}
+				phy_write(eng, 31, 0x0000);
+			}
+		} else {
+			phy_Reset(eng);
+		}
+	} else if (eng->phy.loopback) {
+		phy_Reset(eng);
+	} else {
+		if (eng->run.speed_sel[0]) {
+			check_value = 0x0004 | 0x0028;
+			// Rev 1.1
+			phy_write(eng, 31, 0x0a43);
+			phy_write(eng, 0, 0x8000);
+#ifdef RTK_DEBUG
+			phy_delay(60);
+#else
+			phy_Wait_Reset_Done(eng);
+			phy_delay(30);
+#endif
+
+			phy_write(eng, 0, 0x0140);
+			phy_write(eng, 24, 0x2d18);
+#ifdef RTK_DEBUG
+			phy_delay(600);
+#else
+			phy_delay(300);
+#endif
+		} else {
+			if (eng->run.speed_sel[1])
+				check_value = 0x0004 | 0x0018;
+			else
+				check_value = 0x0004 | 0x0008;
+#ifdef RTK_DEBUG
+#else
+			phy_write(eng, 31, 0x0a43);
+			phy_write(eng, 0, 0x8000);
+			phy_Wait_Reset_Done(eng);
+			phy_delay(30);
+#endif
+
+			phy_write(eng, 31, 0x0000);
+			phy_write(eng, 0, eng->phy.PHY_00h);
+#ifdef RTK_DEBUG
+			phy_delay(300);
+#else
+			phy_delay(150);
+#endif
+		}
+
+#ifdef RTK_DEBUG
+#else
+		// Check register 0x1A bit2 Link OK or not OK
+		phy_write(eng, 31, 0x0a43);
+		phy_check_register(eng, 26, 0x0004 | 0x0038, check_value, 10,
+				   "set RTL8211F");
+		phy_write(eng, 31, 0x0000);
 #endif
-                }
+	}
 
-#ifdef Realtek_debug
-#else
-                // Check register 0x1A bit2 Link OK or not OK
-                phy_write( eng, 31, 0x0a43 );
-                phy_check_register ( eng, 26, 0x0004 | 0x0038, check_value, 10, "set RTL8211F");
-                phy_write( eng, 31, 0x0000 );
-#endif
-        }
-#ifdef Realtek_debug
-printf ("\nSet RTL8211F [End] =====>\n");
-#endif
+	RTK_DBG_PRINTF("\nSet RTL8211F [End] =====>\n");
 }
 
 //------------------------------------------------------------
 //It is a LAN Switch, only support 1G internal loopback test.
-void phy_realtek6 (MAC_ENGINE *eng) {//RTL8363S
-        if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-
-        if ( eng->run.TM_Burst ) {
-                printf("This mode doesn't support in RTL8363S.\n");
-        }
-        else if ( eng->phy.loop_phy ) {
-
-                // RXDLY2 and TXDLY2 of RTL8363S should set to LOW
-                phy_basic_setting( eng );
-
-                phy_Read_Write( eng,  0, 0x0000, 0x8000 | eng->phy.PHY_00h );//clr set//Rst PHY
-                phy_Wait_Reset_Done( eng );
-                phy_delay(30);
-
-                phy_basic_setting( eng );
-                phy_delay(30);
-        }
-        else {
-                printf("This mode doesn't support in RTL8363S\n");
-        }
+void phy_realtek6 (MAC_ENGINE *eng) 
+{//RTL8363S
+	if (DbgPrn_PHYName)
+		printf("--->(%04x %04x)[Realtek] %s\n", eng->phy.PHY_ID2,
+		       eng->phy.PHY_ID3, eng->phy.phy_name);
+
+	if (eng->run.tm_tx_only) {
+		printf("This mode doesn't support in RTL8363S.\n");
+	} else if (eng->phy.loopback) {
+
+		// RXDLY2 and TXDLY2 of RTL8363S should set to LOW
+		phy_basic_setting(eng);
+
+		phy_Read_Write(eng, 0, 0x0000,
+			       0x8000 | eng->phy.PHY_00h); // clr set//Rst PHY
+		phy_Wait_Reset_Done(eng);
+		phy_delay(30);
+
+		phy_basic_setting(eng);
+		phy_delay(30);
+	} else {
+		printf("This mode doesn't support in RTL8363S\n");
+	}
 } // End void phy_realtek6 (MAC_ENGINE *eng)
 
 //------------------------------------------------------------
-void phy_smsc (MAC_ENGINE *eng) {//LAN8700
-        if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[SMSC] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+void phy_smsc (MAC_ENGINE *eng) 
+{//LAN8700
+	if (DbgPrn_PHYName)
+		printf("--->(%04x %04x)[SMSC] %s\n", eng->phy.PHY_ID2,
+		       eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        phy_Reset( eng );
+	phy_Reset(eng);
 }
 
 //------------------------------------------------------------
-void phy_micrel (MAC_ENGINE *eng) {//KSZ8041
+void phy_micrel (MAC_ENGINE *eng) 
+{//KSZ8041
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         phy_Reset( eng );
 
@@ -1944,14 +1867,14 @@
 //------------------------------------------------------------
 void phy_micrel0 (MAC_ENGINE *eng) {//KSZ8031/KSZ8051
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
         //For KSZ8051RNL only
         //Reg1Fh[7] = 0(default): 25MHz Mode, XI, XO(pin 9, 8) is 25MHz(crystal/oscilator).
         //Reg1Fh[7] = 1         : 50MHz Mode, XI(pin 9) is 50MHz(oscilator).
         eng->phy.PHY_1fh = phy_read( eng, 31 );
-        if ( eng->phy.PHY_1fh & 0x0080 ) sprintf(eng->phy.PHYName, "%s-50MHz Mode", eng->phy.PHYName);
-        else                             sprintf(eng->phy.PHYName, "%s-25MHz Mode", eng->phy.PHYName);
+        if ( eng->phy.PHY_1fh & 0x0080 ) sprintf((char *)eng->phy.phy_name, "%s-50MHz Mode", eng->phy.phy_name);
+        else                             sprintf((char *)eng->phy.phy_name, "%s-25MHz Mode", eng->phy.phy_name);
 
         if ( eng->run.TM_IEEE ) {
                 phy_Read_Write( eng,  0, 0x0000, 0x8000 | eng->phy.PHY_00h );//clr set//Rst PHY
@@ -1982,11 +1905,12 @@
 //internal loop 1G  : no  loopback stub
 //internal loop 100M: no  loopback stub
 //internal loop 10M : no  loopback stub
-void phy_micrel1 (MAC_ENGINE *eng) {//KSZ9031
+void phy_micrel1 (MAC_ENGINE *eng) 
+{//KSZ9031
 //      int        temp;
 
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
 /*
         phy_write( eng, 13, 0x0002 );
@@ -2021,7 +1945,7 @@
 printf("Reg2.8 = %04x -> %04x\n", temp, phy_read( eng, 14 ));
 */
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
                         phy_Reset( eng );
                 }
@@ -2029,11 +1953,11 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_Reset( eng );//DON'T support for 1G external loopback testing
                 }
                 else {
@@ -2047,11 +1971,12 @@
 //external loop 10M : OK
 //internal loop 100M: no  loopback stub
 //internal loop 10M : no  loopback stub
-void phy_micrel2 (MAC_ENGINE *eng) {//KSZ8081
+void phy_micrel2 (MAC_ENGINE *eng) 
+{//KSZ8081
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[Micrel] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
                         phy_Reset( eng );
                 }
@@ -2059,11 +1984,11 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
         }
         else {
-                if ( eng->run.Speed_sel[ 1 ] )
+                if ( eng->run.speed_sel[ 1 ] )
                         phy_Reset( eng );
                 else
                         phy_Reset( eng );
@@ -2072,16 +1997,16 @@
 
 //------------------------------------------------------------
 void recov_phy_vitesse (MAC_ENGINE *eng) {//VSC8601
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
 //              if ( eng->run.TM_IEEE ) {
 //              }
 //              else {
 //              }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         phy_write( eng, 24, eng->phy.PHY_18h );
                         phy_write( eng, 18, eng->phy.PHY_12h );
                 }
@@ -2091,9 +2016,9 @@
 //------------------------------------------------------------
 void phy_vitesse (MAC_ENGINE *eng) {//VSC8601
         if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)[VITESSE] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+                printf("--->(%04x %04x)[VITESSE] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        if ( eng->run.TM_Burst ) {
+        if ( eng->run.tm_tx_only ) {
                 if ( eng->run.TM_IEEE ) {
                         phy_Reset( eng );
                 }
@@ -2101,11 +2026,11 @@
                         phy_Reset( eng );
                 }
         }
-        else if ( eng->phy.loop_phy ) {
+        else if ( eng->phy.loopback ) {
                 phy_Reset( eng );
         }
         else {
-                if ( eng->run.Speed_sel[ 0 ] ) {
+                if ( eng->run.speed_sel[ 0 ] ) {
                         eng->phy.PHY_18h = phy_read( eng, 24 );
                         eng->phy.PHY_12h = phy_read( eng, PHY_INER );
 
@@ -2122,107 +2047,149 @@
 
 //------------------------------------------------------------
 void recov_phy_atheros (MAC_ENGINE *eng) {//AR8035
-        if ( eng->run.TM_Burst ) {
-                if ( eng->run.TM_IEEE ) {
-                }
-                else {
-                }
-        }
-        else if ( eng->phy.loop_phy ) {
-        }
-        else {
-                phy_Read_Write( eng, 11, 0x0000, 0x8000 );//clr set//Disable hibernate: Reg0Bh[15] = 0
-                phy_Read_Write( eng, 17, 0x0001, 0x0000 );//clr set//Enable external loopback: Reg11h[0] = 1
-        }
+	if (eng->run.tm_tx_only) {
+		if (eng->run.TM_IEEE) {
+		} else {
+		}
+	} else if (eng->phy.loopback) {
+	} else {
+		phy_Read_Write(
+		    eng, 11, 0x0000,
+		    0x8000); // clr set//Disable hibernate: Reg0Bh[15] = 0
+		phy_Read_Write(
+		    eng, 17, 0x0001,
+		    0x0000); // clr set//Enable external loopback: Reg11h[0] = 1
+	}
 }
 
 //------------------------------------------------------------
-void phy_atheros (MAC_ENGINE *eng) {//AR8035
-#ifdef PHY_debug
-        if ( 1 ) {
+void phy_atheros (MAC_ENGINE *eng) 
+{
+#ifdef PHY_DEBUG
+	if (1) {
 #else
-        if ( DbgPrn_PHYName ) {
+	if (DbgPrn_PHYName) {
 #endif
-                printf("--->(%04x %04x)[ATHEROS] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "--->(%04x %04x)[ATHEROS] %s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
-        }
-
-        //Reg0b[15]: Power saving
-        phy_write( eng, 29, 0x000b );
-        eng->phy.PHY_1eh = phy_read( eng, 30 );
-        if ( eng->phy.PHY_1eh & 0x8000 ) {
-                printf("\n\n[Warning] Debug register offset = 11, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Debug register offset = 11, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Debug register offset = 11, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-
-                phy_write( eng, 30, eng->phy.PHY_1eh & 0x7fff );
-        }
-//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0x7fff) | 0x8000 );
-
-        //Check RGMIIRXCK delay (Sel_clk125m_dsp)
-        phy_write( eng, 29, 0x0000 );
-        eng->phy.PHY_1eh = phy_read( eng, 30 );
-        if ( eng->phy.PHY_1eh & 0x8000 ) {
-                printf("\n\n[Warning] Debug register offset = 0, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Debug register offset = 0, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Debug register offset = 0, bit 15 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-
-                phy_write( eng, 30, eng->phy.PHY_1eh & 0x7fff );
-        }
-//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0x7fff) | 0x8000 );
-
-        //Check RGMIITXCK delay (rgmii_tx_clk_dly)
-        phy_write( eng, 29, 0x0005 );
-        eng->phy.PHY_1eh = phy_read( eng, 30 );
-        if ( eng->phy.PHY_1eh & 0x0100 ) {
-                printf("\n\n[Warning] Debug register offset = 5, bit 8 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Debug register offset = 5, bit 8 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Debug register offset = 5, bit 8 must be 0 [%04x]\n\n", eng->phy.PHY_1eh);
-
-                phy_write( eng, 30, eng->phy.PHY_1eh & 0xfeff );
-        }
-//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0xfeff) | 0x0100 );
-
-        //Check CLK_25M output (Select_clk125m)
-        phy_write( eng, 13, 0x0007 );
-        phy_write( eng, 14, 0x8016 );
-        phy_write( eng, 13, 0x4007 );
-        eng->phy.PHY_0eh = phy_read( eng, 14 );
-        if ( (eng->phy.PHY_0eh & 0x0018) != 0x0018 ) {
-                 printf("\n\n[Warning] Device addrress = 7, Addrress ofset = 0x8016, bit 4~3 must be 3 [%04x]\n\n", eng->phy.PHY_0eh);
-                if ( eng->run.TM_IOTiming ) PRINTF( FP_IO, "\n\n[Warning] Device addrress = 7, Addrress ofset = 0x8016, bit 4~3 must be 3 [%04x]\n\n", eng->phy.PHY_0eh );
-                if ( !eng->run.TM_Burst ) PRINTF( FP_LOG, "\n\n[Warning] Device addrress = 7, Addrress ofset = 0x8016, bit 4~3 must be 3 [%04x]\n\n", eng->phy.PHY_0eh );
-                printf("          The CLK_25M don't ouput 125MHz clock for the RGMIICK !!!\n\n");
- 
-                phy_write( eng, 14, (eng->phy.PHY_0eh & 0xffe7) | 0x0018 );
-        }
-
-        if ( eng->run.TM_Burst ) {
-                if ( eng->run.TM_IEEE ) {
-                        phy_write( eng,  0, eng->phy.PHY_00h );
-                }
-                else {
-                        phy_write( eng,  0, eng->phy.PHY_00h );
-                }
-        }
-        else if ( eng->phy.loop_phy ) {
-                phy_write( eng,  0, eng->phy.PHY_00h );
-        }
-        else {
-                phy_Read_Write( eng, 11, 0x8000, 0x0000 );//clr set//Disable hibernate: Reg0Bh[15] = 0
-                phy_Read_Write( eng, 17, 0x0000, 0x0001 );//clr set//Enable external loopback: Reg11h[0] = 1
+		printf("--->(%04x %04x)[ATHEROS] %s\n", eng->phy.PHY_ID2,
+		       eng->phy.PHY_ID3, eng->phy.phy_name);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG, "--->(%04x %04x)[ATHEROS] %s\n",
+			       eng->phy.PHY_ID2, eng->phy.PHY_ID3,
+			       eng->phy.phy_name);
+	}
+
+	// Reg0b[15]: Power saving
+	phy_write(eng, 29, 0x000b);
+	eng->phy.PHY_1eh = phy_read(eng, 30);
+	if (eng->phy.PHY_1eh & 0x8000) {
+		printf("\n\n[Warning] Debug register offset = 11, bit 15 must "
+		       "be 0 [%04x]\n\n",
+		       eng->phy.PHY_1eh);
+		if (eng->run.TM_IOTiming)
+			PRINTF(FP_IO,
+			       "\n\n[Warning] Debug register offset = 11, bit "
+			       "15 must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG,
+			       "\n\n[Warning] Debug register offset = 11, bit "
+			       "15 must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+
+		phy_write(eng, 30, eng->phy.PHY_1eh & 0x7fff);
+	}
+	//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0x7fff) | 0x8000 );
+
+	// Check RGMIIRXCK delay (Sel_clk125m_dsp)
+	phy_write(eng, 29, 0x0000);
+	eng->phy.PHY_1eh = phy_read(eng, 30);
+	if (eng->phy.PHY_1eh & 0x8000) {
+		printf("\n\n[Warning] Debug register offset = 0, bit 15 must "
+		       "be 0 [%04x]\n\n",
+		       eng->phy.PHY_1eh);
+		if (eng->run.TM_IOTiming)
+			PRINTF(FP_IO,
+			       "\n\n[Warning] Debug register offset = 0, bit "
+			       "15 must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG,
+			       "\n\n[Warning] Debug register offset = 0, bit "
+			       "15 must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+
+		phy_write(eng, 30, eng->phy.PHY_1eh & 0x7fff);
+	}
+	//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0x7fff) | 0x8000 );
+
+	// Check RGMIITXCK delay (rgmii_tx_clk_dly)
+	phy_write(eng, 29, 0x0005);
+	eng->phy.PHY_1eh = phy_read(eng, 30);
+	if (eng->phy.PHY_1eh & 0x0100) {
+		printf("\n\n[Warning] Debug register offset = 5, bit 8 must be "
+		       "0 [%04x]\n\n",
+		       eng->phy.PHY_1eh);
+		if (eng->run.TM_IOTiming)
+			PRINTF(FP_IO,
+			       "\n\n[Warning] Debug register offset = 5, bit 8 "
+			       "must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG,
+			       "\n\n[Warning] Debug register offset = 5, bit 8 "
+			       "must be 0 [%04x]\n\n",
+			       eng->phy.PHY_1eh);
+
+		phy_write(eng, 30, eng->phy.PHY_1eh & 0xfeff);
+	}
+	//      phy_write( eng, 30, (eng->phy.PHY_1eh & 0xfeff) | 0x0100 );
+
+	// Check CLK_25M output (Select_clk125m)
+	phy_write(eng, 13, 0x0007);
+	phy_write(eng, 14, 0x8016);
+	phy_write(eng, 13, 0x4007);
+	eng->phy.PHY_0eh = phy_read(eng, 14);
+	if ((eng->phy.PHY_0eh & 0x0018) != 0x0018) {
+		printf("\n\n[Warning] Device addrress = 7, Addrress ofset = "
+		       "0x8016, bit 4~3 must be 3 [%04x]\n\n",
+		       eng->phy.PHY_0eh);
+		if (eng->run.TM_IOTiming)
+			PRINTF(FP_IO,
+			       "\n\n[Warning] Device addrress = 7, Addrress "
+			       "ofset = 0x8016, bit 4~3 must be 3 [%04x]\n\n",
+			       eng->phy.PHY_0eh);
+		if (!eng->run.tm_tx_only)
+			PRINTF(FP_LOG,
+			       "\n\n[Warning] Device addrress = 7, Addrress "
+			       "ofset = 0x8016, bit 4~3 must be 3 [%04x]\n\n",
+			       eng->phy.PHY_0eh);
+		printf("          The CLK_25M don't ouput 125MHz clock for the "
+		       "RGMIICK !!!\n\n");
+
+		phy_write(eng, 14, (eng->phy.PHY_0eh & 0xffe7) | 0x0018);
+	}
+
+	if (eng->run.tm_tx_only) {
+		if (eng->run.TM_IEEE) {
+			phy_write(eng, 0, eng->phy.PHY_00h);
+		} else {
+			phy_write(eng, 0, eng->phy.PHY_00h);
+		}
+	} else if (eng->phy.loopback) {
+		phy_write(eng, 0, eng->phy.PHY_00h);
+	} else {
+		phy_Read_Write(
+		    eng, 11, 0x8000,
+		    0x0000); // clr set//Disable hibernate: Reg0Bh[15] = 0
+		phy_Read_Write(
+		    eng, 17, 0x0000,
+		    0x0001); // clr set//Enable external loopback: Reg11h[0] = 1
 
-                phy_write( eng,  0, eng->phy.PHY_00h | 0x8000 );
+		phy_write(eng, 0, eng->phy.PHY_00h | 0x8000);
 #ifdef Delay_PHYRst
-                phy_delay( Delay_PHYRst );
+		phy_delay(Delay_PHYRst);
 #endif
-//              if ( eng->run.Speed_sel[ 0 ] ) {
-//              }
-//              else if ( eng->run.Speed_sel[ 1 ] ) {
-//              }
-//              else if ( eng->run.Speed_sel[ 2 ] ) {
-//              }
-        }
+	}
 }
 
 //------------------------------------------------------------
@@ -2230,208 +2197,171 @@
 {
 	nt_log_func_name();
 
-        if ( DbgPrn_PHYName )
-                printf("--->(%04x %04x)%s\n", eng->phy.PHY_ID2, eng->phy.PHY_ID3, eng->phy.PHYName);
+	if (DbgPrn_PHYName)
+		printf("--->(%04x %04x)%s\n", eng->phy.PHY_ID2,
+		       eng->phy.PHY_ID3, eng->phy.phy_name);
 
-        phy_Reset( eng );
+	phy_Reset(eng);
 }
 
 //------------------------------------------------------------
 // PHY Init
 //------------------------------------------------------------
-BOOLEAN find_phyadr (MAC_ENGINE *eng) 
+/**
+ * @return	1->addr found,  0->else
+*/
+uint32_t phy_find_addr (MAC_ENGINE *eng)
 {
         uint32_t      PHY_val;
-        BOOLEAN    ret = FALSE;
-        CHAR       PHY_ADR_org;
+        uint32_t    ret = 0;
+        int8_t       PHY_ADR_org;
 
 	nt_log_func_name();
-
-        if ( eng->env.AST2300 ) {
-#ifdef Force_Enable_NewMDIO
-                Write_Reg_PHY_DD( eng, 0x40, Read_Reg_PHY_DD( eng, 0x40 ) | 0x80000000 );
-#endif
-                eng->inf.NewMDIO = ( Read_Reg_PHY_DD( eng, 0x40 ) & 0x80000000 ) ? 1 : 0;
-        } else
-                eng->inf.NewMDIO = 0;
-#ifdef CONFIG_ASPEED_AST2600
-		eng->inf.NewMDIO = 1;
-#endif
+        
         PHY_ADR_org = eng->phy.Adr;
-        // Check current PHY address by user setting
-        PHY_val = phy_read( eng, PHY_REG_ID_1 );
-        if ( PHY_IS_VALID( PHY_val ) ) {
-                ret = TRUE;
-        }
-        else if ( eng->arg.GEn_SkipChkPHY ) {
-                PHY_val = phy_read( eng, PHY_REG_BMCR );
-
-                if ( ( PHY_val & 0x8000 ) & eng->arg.GEn_InitPHY ) {
-                }
-                else {
-                        ret = TRUE;
-                }
-        }
-
-#ifdef Enable_SearchPHYID
-        if ( ret == FALSE ) {
-                // Scan PHY address from 0 to 31
-                if ( eng->arg.GEn_InitPHY )
-                        printf("Search PHY address\n");
-                for ( eng->phy.Adr = 0; eng->phy.Adr < 32; eng->phy.Adr++ ) {
-                        PHY_val = phy_read( eng, PHY_REG_ID_1 );
-                        if ( PHY_IS_VALID( PHY_val ) ) {
-                                ret = TRUE;
-                                break;
-                        }
-                }
-                // Don't find PHY address
-        }
-        if ( ret == FALSE )
-                eng->phy.Adr = eng->arg.GPHYADR;
-#endif
-
-        if ( eng->arg.GEn_InitPHY ) {
-                if ( ret == TRUE ) {
-                        if ( PHY_ADR_org != eng->phy.Adr ) {
-                                phy_id( eng, STD_OUT );
-                                if ( !eng->run.TM_Burst )
-                                        phy_id( eng, FP_LOG );
-                        }
-                }
-                else {
-                        phy_id( eng, STD_OUT );
-                        if ( !eng->run.TM_Burst )
-                                phy_id( eng, FP_LOG );
-
-                        FindErr( eng, Err_Flag_PHY_Type );
-                }
-        }
-
-        eng->phy.PHY_ID2 = phy_read( eng, PHY_REG_ID_1 );
-        eng->phy.PHY_ID3 = phy_read( eng, PHY_REG_ID_2 );
-
-        if      ( (eng->phy.PHY_ID2 == 0xffff) && ( eng->phy.PHY_ID3 == 0xffff ) && !eng->arg.GEn_SkipChkPHY ) {
-                sprintf( eng->phy.PHYName, "--" );
-                if ( eng->arg.GEn_InitPHY )
-                        FindErr( eng, Err_Flag_PHY_Type );
-        }
-#ifdef Enable_CheckZeroPHYID
-        else if ( (eng->phy.PHY_ID2 == 0x0000) && ( eng->phy.PHY_ID3 == 0x0000 ) && !eng->arg.GEn_SkipChkPHY ) {
-                sprintf( eng->phy.PHYName, "--" );
-                if ( eng->arg.GEn_InitPHY )
+        PHY_val = phy_read(eng, PHY_REG_ID_1);
+	if (PHY_IS_VALID(PHY_val)) {
+		ret = 1;
+	} else if (eng->arg.ctrl.b.phy_skip_check) {
+		PHY_val = phy_read(eng, PHY_REG_BMCR);
+
+		if ((PHY_val & BIT(15)) && (0 == eng->arg.ctrl.b.phy_skip_init)) {
+		} else {
+			ret = 1;
+		}
+	}
+
+#ifdef ENABLE_SCAN_PHY_ID
+	if (ret == 0) {
+		for (eng->phy.Adr = 0; eng->phy.Adr < 32; eng->phy.Adr++) {
+			PHY_val = phy_read(eng, PHY_REG_ID_1);
+			if (PHY_IS_VALID(PHY_val)) {
+				ret = 1;
+				break;
+			}
+		}
+	}
+	if (ret == 0)
+		eng->phy.Adr = eng->arg.phy_addr;
+#endif
+
+	if (0 == eng->arg.ctrl.b.phy_skip_init) {
+		if (ret == 1) {
+			if (PHY_ADR_org != eng->phy.Adr) {
+				phy_id(eng, STD_OUT);
+				if (!eng->run.tm_tx_only)
+					phy_id(eng, FP_LOG);
+			}
+		} else {
+			phy_id(eng, STD_OUT);
+			FindErr(eng, Err_Flag_PHY_Type);
+		}
+	}
+
+	eng->phy.PHY_ID2 = phy_read(eng, PHY_REG_ID_1);
+	eng->phy.PHY_ID3 = phy_read(eng, PHY_REG_ID_2);
+
+	if ((eng->phy.PHY_ID2 == 0xffff) && (eng->phy.PHY_ID3 == 0xffff) &&
+	    !eng->arg.ctrl.b.phy_skip_check) {
+		sprintf((char *)eng->phy.phy_name, "--");
+		if (0 == eng->arg.ctrl.b.phy_skip_init)
+			FindErr(eng, Err_Flag_PHY_Type);
+	}
+#ifdef ENABLE_CHK_ZERO_PHY_ID
+	else if ((eng->phy.PHY_ID2 == 0x0000) && (eng->phy.PHY_ID3 == 0x0000) &&
+		 !eng->arg.ctrl.b.phy_skip_check) {
+                sprintf((char *)eng->phy.phy_name, "--");
+                if (0 == eng->arg.ctrl.b.phy_skip_init)
                         FindErr( eng, Err_Flag_PHY_Type );
         }
 #endif
 
         return ret;
-} // End BOOLEAN find_phyadr (MAC_ENGINE *eng)
-
-//------------------------------------------------------------
-char phy_chk (MAC_ENGINE *eng, uint32_t id2, uint32_t id3, uint32_t id3_mask) {
-        if ( ( eng->phy.PHY_ID2 == id2 ) && ( ( eng->phy.PHY_ID3 & id3_mask ) == ( id3 & id3_mask ) ) )
-                return(1);
-        else
-                return(0);
 }
 
 //------------------------------------------------------------
 void phy_set00h (MAC_ENGINE *eng) 
 {
 	nt_log_func_name();
+	if (eng->run.tm_tx_only) {
+		if (eng->run.TM_IEEE) {
+			if (eng->run.speed_sel[0])
+				eng->phy.PHY_00h = 0x0140;
+			else if (eng->run.speed_sel[1])
+				eng->phy.PHY_00h = 0x2100;
+			else
+				eng->phy.PHY_00h = 0x0100;
+		} else {
+			if (eng->run.speed_sel[0])
+				eng->phy.PHY_00h = 0x0140;
+			else if (eng->run.speed_sel[1])
+				eng->phy.PHY_00h = 0x2100;
+			else
+				eng->phy.PHY_00h = 0x0100;
+		}
+	} else if (eng->phy.loopback) {
+		if (eng->run.speed_sel[0])
+			eng->phy.PHY_00h = 0x4140;
+		else if (eng->run.speed_sel[1])
+			eng->phy.PHY_00h = 0x6100;
+		else
+			eng->phy.PHY_00h = 0x4100;
+	} else {
+		if (eng->run.speed_sel[0])
+			eng->phy.PHY_00h = 0x0140;
+		else if (eng->run.speed_sel[1])
+			eng->phy.PHY_00h = 0x2100;
+		else
+			eng->phy.PHY_00h = 0x0100;
+	}
+}
 
-
-        if ( eng->run.TM_Burst ) {
-                if ( eng->run.TM_IEEE ) {
-                        if      ( eng->run.Speed_sel[ 0 ] ) eng->phy.PHY_00h = 0x0140;
-                        else if ( eng->run.Speed_sel[ 1 ] ) eng->phy.PHY_00h = 0x2100;
-                        else                                eng->phy.PHY_00h = 0x0100;
-                }
-                else {
-                        if      ( eng->run.Speed_sel[ 0 ] ) eng->phy.PHY_00h = 0x0140;
-                        else if ( eng->run.Speed_sel[ 1 ] ) eng->phy.PHY_00h = 0x2100;
-                        else                                eng->phy.PHY_00h = 0x0100;
-//                      if      ( eng->run.Speed_sel[ 0 ] ) eng->phy.PHY_00h = 0x1140;
-//                      else if ( eng->run.Speed_sel[ 1 ] ) eng->phy.PHY_00h = 0x3100;
-//                      else                                eng->phy.PHY_00h = 0x1100;
-                }
-        }
-        else if ( eng->phy.loop_phy ) {
-                if      ( eng->run.Speed_sel[ 0 ] ) eng->phy.PHY_00h = 0x4140;
-                else if ( eng->run.Speed_sel[ 1 ] ) eng->phy.PHY_00h = 0x6100;
-                else                                eng->phy.PHY_00h = 0x4100;
-        }
-        else {
-                if      ( eng->run.Speed_sel[ 0 ] ) eng->phy.PHY_00h = 0x0140;
-                else if ( eng->run.Speed_sel[ 1 ] ) eng->phy.PHY_00h = 0x2100;
-                else                                eng->phy.PHY_00h = 0x0100;
-        }
+static uint32_t phy_chk(MAC_ENGINE *p_eng, const struct phy_desc *p_phy) 
+{
+	debug("PHY_ID %08x %08x\n", p_eng->phy.PHY_ID2, p_eng->phy.PHY_ID3);
+	debug("PHY_DESC %08x %08x %08x\n", p_phy->id2, p_phy->id3,
+	      p_phy->id3_mask);
+
+	if ((p_eng->phy.PHY_ID2 == p_phy->id2) &&
+	    ((p_eng->phy.PHY_ID3 & p_phy->id3_mask) ==
+	     (p_phy->id3 & p_phy->id3_mask)))
+		return (1);
+	else
+		return (0);
 }
 
-//------------------------------------------------------------
 void phy_sel (MAC_ENGINE *eng, PHY_ENGINE *phyeng) 
 {
+	int i;
+	const struct phy_desc *p_phy;
 	nt_log_func_name();
 
-        if ( eng->phy.default_phy ) {
-                sprintf( eng->phy.PHYName, "default"); phyeng->fp_set = phy_default;
-        } else {
-                if      ( phy_chk( eng, 0x001c, 0xc916, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8211F"          ); phyeng->fp_set = phy_realtek5 ; phyeng->fp_clr = recov_phy_realtek5 ;}//RTL8211F         1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x001c, 0xc915, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8211E"          ); phyeng->fp_set = phy_realtek2 ; phyeng->fp_clr = recov_phy_realtek2 ;}//RTL8211E         1G/100/10M  GMII(RTL8211EG only), RGMII
-                else if ( phy_chk( eng, 0x001c, 0xc914, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8211D"          ); phyeng->fp_set = phy_realtek1 ; phyeng->fp_clr = recov_phy_realtek1 ;}//RTL8211D         1G/100/10M  GMII(RTL8211DN/RTL8211DG only), MII(RTL8211DN/RTL8211DG only), RGMII
-                else if ( phy_chk( eng, 0x001c, 0xc912, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8211C"          ); phyeng->fp_set = phy_realtek3 ; phyeng->fp_clr = recov_phy_realtek3 ;}//RTL8211C         1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x001c, 0xc930, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8363S"          ); phyeng->fp_set = phy_realtek6 ;                                      }//RTL8363S         1G/100/10M  RGMII Switch
-                else if ( phy_chk( eng, 0x001c, 0xc816, 0xffff      ) ) { sprintf( eng->phy.PHYName, "RTL8201F"          ); phyeng->fp_set = phy_realtek4 ;                                      }//RTL8201F            100/10M  MII, RMII(RMIICK I/O mode)
-                else if ( phy_chk( eng, 0x001c, 0xc815, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "RTL8201E"          ); phyeng->fp_set = phy_realtek0 ;                                      }//RTL8201E            100/10M  MII, RMII(RMIICK I/O mode)(RTL8201E(L)-VC only)
-                else if ( phy_chk( eng, 0x0000, 0x8201, PHYID3_Mask ) ) { sprintf( eng->phy.PHYName, "RTL8201N"          ); phyeng->fp_set = phy_realtek  ;                                      }//RTL8201N            100/10M  MII, RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x0143, 0xbcb2, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM5482"           ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM5482          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0143, 0xbca0, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM5481"           ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM5481          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0362, 0x5e6a, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM54612"          ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM54612         1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0362, 0x5d10, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM54616S"         ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM54616S        1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0020, 0x60b0, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM5464SR"         ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM5464SR        1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0020, 0x60c1, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM5461S"          ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM5461S
-                else if ( phy_chk( eng, 0x600d, 0x84a2, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM54210E"         ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM54210E
-                else if ( phy_chk( eng, 0x0143, 0xbd63, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "BCM54610C"         ); phyeng->fp_set = phy_broadcom0; phyeng->fp_clr = recov_phy_broadcom0;}//BCM54610C
-                else if ( phy_chk( eng, 0x0040, 0x61e0, PHYID3_Mask ) ) { sprintf( eng->phy.PHYName, "BCM5221"           ); phyeng->fp_set = phy_broadcom ;                                      }//BCM5221             100/10M  MII, RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x0141, 0x0e22, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "88E3019"           ); phyeng->fp_set = phy_marvell3 ;                                      }//88E3019             100/10M  RGMII, MII, RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x0141, 0x0dd0, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "88E15 10/12/14/18" ); phyeng->fp_set = phy_marvell2 ; phyeng->fp_clr = recov_phy_marvell2 ;}//88E1512          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0xff00, 0x1761, 0xffff      ) ) { sprintf( eng->phy.PHYName, "88E6176(IntLoop)"  ); phyeng->fp_set = phy_marvell1 ; phyeng->fp_clr = recov_phy_marvell1 ;}//88E6176          1G/100/10M  2 RGMII Switch
-                else if ( phy_chk( eng, 0xff00, 0x1152, 0xffff      ) ) { sprintf( eng->phy.PHYName, "88E6320(IntLoop)"  ); phyeng->fp_set = phy_marvell1 ; phyeng->fp_clr = recov_phy_marvell1 ;}//88E6320          1G/100/10M  2 RGMII Switch
-                else if ( phy_chk( eng, 0x0141, 0x0e90, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "88E1310"           ); phyeng->fp_set = phy_marvell0 ; phyeng->fp_clr = recov_phy_marvell0 ;}//88E1310          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0141, 0x0cc0, PHYID3_Mask ) ) { sprintf( eng->phy.PHYName, "88E1111"           ); phyeng->fp_set = phy_marvell  ; phyeng->fp_clr = recov_phy_marvell  ;}//88E1111          1G/100/10M  GMII, MII, RGMII
-                else if ( phy_chk( eng, 0x0022, 0x1555, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "KSZ8031/KSZ8051"   ); phyeng->fp_set = phy_micrel0  ;                                      }//KSZ8051/KSZ8031     100/10M  RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x0022, 0x1622, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "KSZ9031"           ); phyeng->fp_set = phy_micrel1  ;                                      }//KSZ9031          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0022, 0x1562, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "KSZ8081"           ); phyeng->fp_set = phy_micrel2  ;                                      }//KSZ8081             100/10M  MII, RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x0022, 0x1512, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "KSZ8041"           ); phyeng->fp_set = phy_micrel   ;                                      }//KSZ8041             100/10M  RMII(RMIICK input mode)
-                else if ( phy_chk( eng, 0x004d, 0xd072, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "AR8035"            ); phyeng->fp_set = phy_atheros  ; phyeng->fp_clr = recov_phy_atheros  ;}//AR8035           1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0007, 0xc0c4, PHYID3_Mask ) ) { sprintf( eng->phy.PHYName, "LAN8700"           ); phyeng->fp_set = phy_smsc     ;                                      }//LAN8700             100/10M  MII, RMII
-                else if ( phy_chk( eng, 0x000f, 0xc4b1, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "VSC8211"           ); phyeng->fp_set = phy_vitesse  ; phyeng->fp_clr = recov_phy_vitesse  ;}//VSC8211          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0007, 0x0421, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "VSC8601"           ); phyeng->fp_set = phy_vitesse  ; phyeng->fp_clr = recov_phy_vitesse  ;}//VSC8601          1G/100/10M  RGMII
-                else if ( phy_chk( eng, 0x0007, 0x0431, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "VSC8641"           ); phyeng->fp_set = phy_vitesse  ; phyeng->fp_clr = recov_phy_vitesse  ;}//VSC8641          1G/100/10M  RGMII
-#if defined(PHY_SPECIAL)                    
-                else if ( phy_chk( eng, 0x0143, 0xbd70, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "[S]BCM5387/BCM5389"); phyeng->fp_set = 0            ; phyeng->fp_clr = 0                  ;}//BCM5389          1G/100/10M  RGMII(IMP Port)
-                else if ( phy_chk( eng, 0x0000, 0x0000, 0xfff0      ) ) { sprintf( eng->phy.PHYName, "[S]BCM5396"        ); phyeng->fp_set = 0            ; phyeng->fp_clr = 0                  ;}//BCM5396          1G/100/10M  RGMII(IMP Port)
-#endif                    
-                else                                                    { sprintf( eng->phy.PHYName, "default"           ); phyeng->fp_set = phy_default  ;                                      }//
-
-#if defined(PHY_SPECIAL)
-                switch ( eng->phy.PHY_ID3 & 0xfff0 ) {
-                        case 0xbd70:    eng->phy.Adr = 30; eng->BCMIMP.PHY_sel = 0;                            break; // for BCM5387/BCM5389
-//                        case 0x0960:    eng->phy.Adr = 30; eng->BCMIMP.PHY_sel = 1; eng->GPIO.Dat_RdDelay = 1; break;
-//                        case 0x0000:    eng->phy.Adr = 30; eng->BCMIMP.PHY_sel = 1; eng->GPIO.Dat_RdDelay = 1; break;
-//                        default:        eng->phy.Adr = 30; eng->BCMIMP.PHY_sel = 1; eng->GPIO.Dat_RdDelay = 1; break;
-                        default:        eng->phy.Adr = 30; eng->BCMIMP.PHY_sel = 1;                            break; // for BCM5396
-                }
-#endif
-        }
-
-        if ( eng->arg.GEn_InitPHY ) {
-                if ( eng->arg.GDis_RecovPHY )
-                        phyeng->fp_clr = 0;
-        } else {
-                phyeng->fp_set = 0;
-                phyeng->fp_clr = 0;
-        }
+	/* set default before lookup */
+	sprintf((char *)eng->phy.phy_name, "default");
+	phyeng->fp_set = phy_default;
+	phyeng->fp_clr = NULL;
+
+	if (eng->phy.default_phy) {
+		debug("use default PHY\n");
+	} else {
+		for (i = 0; i < PHY_LOOKUP_N; i++) {
+			p_phy = &phy_lookup_tbl[i];
+			if (phy_chk(eng, p_phy)) {
+				sprintf((char *)eng->phy.phy_name,
+					(char *)p_phy->name);
+				phyeng->fp_set = p_phy->cfg.fp_set;
+				phyeng->fp_clr = p_phy->cfg.fp_clr;
+				break;
+			}
+		}
+	}
+
+	if (eng->arg.ctrl.b.phy_skip_init) {
+		phyeng->fp_set = NULL;
+		phyeng->fp_clr = NULL;
+	} else if (eng->arg.ctrl.b.phy_skip_deinit) {
+		phyeng->fp_clr = NULL;
+	}
 }
 
 //------------------------------------------------------------
@@ -2439,8 +2369,8 @@
 {
 	nt_log_func_name();
 
-
-        (*phyeng->fp_clr)( eng );
+	if (phyeng->fp_clr != NULL)
+        	(*phyeng->fp_clr)( eng );
 }
 
 //------------------------------------------------------------
@@ -2448,12 +2378,13 @@
 {
 	nt_log_func_name();
 
-        if ( DbgPrn_PHYInit )
-                phy_dump( eng );
+	if (DbgPrn_PHYInit)
+		phy_dump(eng);
 
-        phy_set00h( eng );
-        (*phyeng->fp_set)( eng );
+	phy_set00h(eng);
+	if (phyeng->fp_set != NULL)
+		(*phyeng->fp_set)(eng);
 
-        if ( DbgPrn_PHYInit )
-                phy_dump( eng );
+	if (DbgPrn_PHYInit)
+		phy_dump(eng);
 }
diff -Naur u-boot-2019.04/cmd/nettest/phygpio.c uboot/cmd/nettest/phygpio.c
--- u-boot-2019.04/cmd/nettest/phygpio.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/phygpio.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,177 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#define PHYGPIO_C
-
-#include "comminf.h"
-#include "swfunc.h"
-
-#include "stduboot.h"
-#include <command.h>
-#include <common.h>
-
-#include "comminf.h"
-
-#if defined(PHY_GPIO)
-//------------------------------------------------------------
-// PHY Read/Write Using GPIO
-//------------------------------------------------------------
-//          AST2500  AST2400  AST2300  AST1010
-// MDC1  :  GPIOR6   GPIOR6   GPIOR6   GPIOK6
-// MDIO1 :  GPIOR7   GPIOR7   GPIOR7   GPIOK7
-// MDC2  :  GPIOA6   GPIOA6   GPIOA6   ------
-// MDIO2 :  GPIOA7   GPIOA7   GPIOA7   ------
-//------------------------------------------------------------
-
-//------------------------------------------------------------
-// Initial
-//------------------------------------------------------------
-void phy_gpio_init( MAC_ENGINE *eng )
-{
-	nt_log_func_name();
-
-	switch ( eng->run.MAC_idx_PHY ) {
-		case 0  :
-			eng->GPIO.IOAdr_Dat      = 0x00000080;
-			eng->GPIO.IOAdr_OE       = 0x00000084;
-			eng->GPIO.MDIO_shiftbit  = 15;
-			eng->GPIO.Mask_MDC       = 0x00004000;
-			eng->GPIO.Mask_MDIO      = 0x00008000;
-			break;
-		case 1  :
-			eng->GPIO.IOAdr_Dat      = 0x00000000;
-			eng->GPIO.IOAdr_OE       = 0x00000004;
-			eng->GPIO.MDIO_shiftbit  = 7;
-			eng->GPIO.Mask_MDC       = 0x00000040;
-			eng->GPIO.Mask_MDIO      = 0x00000080;
-			break;
-		default : break;
-	}
-	eng->GPIO.Mask_all  = eng->GPIO.Mask_MDC | eng->GPIO.Mask_MDIO;
-
-	eng->GPIO.Value_Dat =  Read_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat ) & (~eng->GPIO.Mask_all);
-	eng->GPIO.Value_OE  = (Read_Reg_GPIO_DD( eng->GPIO.IOAdr_OE  ) & (~eng->GPIO.Mask_MDIO)) | eng->GPIO.Mask_MDC;
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_all );
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_OE , eng->GPIO.Value_OE                       );
-	
-	eng->GPIO.Dat_RdDelay = 0;
-}
-
-//------------------------------------------------------------
-// PHY R/W GPIO
-//------------------------------------------------------------
-void phy_gpio_wrbit ( MAC_ENGINE *eng, int value )
-{
-	if ( value & 0x8000 )
-	{
-		Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_MDIO );                 
-		PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-
-		Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_all  );
-		PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-	} else {
-		Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat                       );
-		PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-
-		Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_MDC  );
-		PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-	}
-}
-
-char phy_gpio_rdbit ( MAC_ENGINE *eng )
-{
-	static char read_bit;
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_MDIO );
-	PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-
-	read_bit = ( Read_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat ) >> eng->GPIO.MDIO_shiftbit ) & 0x1;
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat, eng->GPIO.Value_Dat | eng->GPIO.Mask_all  );
-	PHY_GPIO_DELAY( PHY_GPIO_MDC_HalfPeriod );
-
-//	return ( ( Read_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat ) >> eng->GPIO.MDIO_shiftbit ) & 0x1 );
-	return ( read_bit );
-}
-
-void phy_gpio_write( MAC_ENGINE *eng, int regadr, int wrdata )
-{
-	static int phy_wr_cnt;
-	static int phy_wr_wrvalue;
-
-#ifdef PHY_GPIO_ReadValueEveryTime
-	eng->GPIO.Value_Dat = Read_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat ) & (~eng->GPIO.Mask_all);
-	eng->GPIO.Value_OE  = Read_Reg_GPIO_DD( eng->GPIO.IOAdr_OE  );
-#endif
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_OE, eng->GPIO.Value_OE | eng->GPIO.Mask_MDIO );
-
-	for ( phy_wr_cnt = 0; phy_wr_cnt < 36; phy_wr_cnt++ )
-		phy_gpio_wrbit ( eng, 0x8000 );
-
-	phy_wr_wrvalue = 0x5002 | (( eng->phy.Adr & 0x1f ) << 7 ) | (( regadr & 0x1f ) << 2 );
-	for ( phy_wr_cnt = 0; phy_wr_cnt < 16; phy_wr_cnt++ )
-	{
-		phy_gpio_wrbit ( eng, phy_wr_wrvalue );
-		phy_wr_wrvalue = phy_wr_wrvalue << 1;
-	}
-
-	phy_wr_wrvalue = wrdata;
-	for ( phy_wr_cnt = 0; phy_wr_cnt < 16; phy_wr_cnt++ )
-	{
-		phy_gpio_wrbit ( eng, phy_wr_wrvalue );
-		phy_wr_wrvalue = phy_wr_wrvalue << 1;
-	}
-
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_OE, eng->GPIO.Value_OE );
-	phy_gpio_wrbit ( eng, 1 );
-	phy_gpio_wrbit ( eng, 1 );
-}
-
-uint32_t phy_gpio_read( MAC_ENGINE *eng, int regadr )
-{
-	static int phy_rd_cnt;
-	static int phy_rd_wrvalue;
-	static int phy_rd_rdvalue;
-
-#ifdef PHY_GPIO_ReadValueEveryTime
-	eng->GPIO.Value_Dat = Read_Reg_GPIO_DD( eng->GPIO.IOAdr_Dat ) & (~eng->GPIO.Mask_all);
-	eng->GPIO.Value_OE  = Read_Reg_GPIO_DD( eng->GPIO.IOAdr_OE  );
-#endif
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_OE, eng->GPIO.Value_OE | eng->GPIO.Mask_MDIO );
-
-	for ( phy_rd_cnt = 0; phy_rd_cnt < 36; phy_rd_cnt++ )
-		phy_gpio_wrbit ( eng, 0x8000 );
-
-	phy_rd_wrvalue = 0x6000 | (( eng->phy.Adr & 0x1f ) << 7 ) | (( regadr & 0x1f ) << 2 );
-	for ( phy_rd_cnt = 0; phy_rd_cnt < 14; phy_rd_cnt++ )
-	{
-		phy_gpio_wrbit ( eng, phy_rd_wrvalue );
-		phy_rd_wrvalue = phy_rd_wrvalue << 1;
-	}
-
-	Write_Reg_GPIO_DD( eng->GPIO.IOAdr_OE, eng->GPIO.Value_OE );
-	phy_gpio_rdbit( eng );
-	phy_gpio_rdbit(eng );
-
-	for (phy_rd_cnt = 0; phy_rd_cnt < eng->GPIO.Dat_RdDelay; phy_rd_cnt++)
-		phy_gpio_rdbit( eng );
-
-	phy_rd_rdvalue = phy_gpio_rdbit( eng );
-	for (phy_rd_cnt = 0; phy_rd_cnt < 15; phy_rd_cnt++) {
-		phy_rd_rdvalue = ( phy_rd_rdvalue << 1 ) | phy_gpio_rdbit( eng );
-	}
-
-	phy_gpio_rdbit( eng );
-	phy_gpio_rdbit( eng );
-	phy_gpio_rdbit( eng );
-	phy_gpio_rdbit( eng );
-
-	return ( phy_rd_rdvalue );
-}
-#endif // defined(PHY_GPIO)
diff -Naur u-boot-2019.04/cmd/nettest/phygpio.h uboot/cmd/nettest/phygpio.h
--- u-boot-2019.04/cmd/nettest/phygpio.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/phygpio.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,32 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef PHYGPIO_H
-#define PHYGPIO_H
-
-//#define PHY_GPIO_ReadValueEveryTime
-#define PHY_GPIO_MDC_HalfPeriod                           1
-#define PHY_GPIO_DELAY( x )                           udelay( x ) // For Uboot, the unit of udelay() is us.
-typedef struct {
-	uint32_t                IOAdr_Dat                               ;//__attribute__ ((aligned (4)));
-	uint32_t                IOAdr_OE                                ;//__attribute__ ((aligned (4)));
-	uint32_t                MDIO_shiftbit                           ;//__attribute__ ((aligned (4)));
-	uint32_t                Mask_MDC                                ;//__attribute__ ((aligned (4)));
-	uint32_t                Mask_MDIO                               ;//__attribute__ ((aligned (4)));
-	uint32_t                Mask_all                                ;//__attribute__ ((aligned (4)));
-	uint32_t                Value_Dat                               ;//__attribute__ ((aligned (4)));
-	uint32_t                Value_OE                                ;//__attribute__ ((aligned (4)));
-
-	char                 Dat_RdDelay                             ;//__attribute__ ((aligned (4)));
-} PHY_GPIOstr;
-
-
-#endif // PHYGPIO_H
diff -Naur u-boot-2019.04/cmd/nettest/phy.h uboot/cmd/nettest/phy.h
--- u-boot-2019.04/cmd/nettest/phy.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/phy.h	2020-01-14 13:36:49.337961228 -0500
@@ -15,12 +15,10 @@
 //
 // Define
 //
-#define Enable_SearchPHYID             //[ON] (Search vlid PHY ID)
-#ifndef PHY_SPECIAL
-#define Enable_CheckZeroPHYID          //[ON] (Check PHY ID with value 0)
-#endif
+#define ENABLE_SCAN_PHY_ID             //[ON] (Search vlid PHY ID)
+#define ENABLE_CHK_ZERO_PHY_ID          //[ON] (Check PHY ID with value 0)
 
-#ifdef Enable_CheckZeroPHYID
+#ifdef ENABLE_CHK_ZERO_PHY_ID
   #define PHY_IS_VALID( dat )      ( ( (dat & 0xffff) != 0xffff ) && ( ( dat & 0xffff ) != 0x0 ) )
 #else
   #define PHY_IS_VALID( dat )      ( ( dat & 0xffff) != 0xffff )
diff -Naur u-boot-2019.04/cmd/nettest/physpecial.c uboot/cmd/nettest/physpecial.c
--- u-boot-2019.04/cmd/nettest/physpecial.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/physpecial.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,962 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#define PHYMISC_C
-//#define PHY_BCMIMP_debug
-
-#include "comminf.h"
-#include "swfunc.h"
-
-#include "stduboot.h"
-#include <command.h>
-#include <common.h>
-
-#include "comminf.h"
-
-#ifdef PHY_SPECIAL
-
-/*
-uint32_t   BCMIMP_sample_tx[PHY_BCMIMP_Pkt_DW_Len] = { //120 Byte, 30 DW
-	0xffffffff,
-	0x0000ffff, // SA:00-00-
-	0x12345678, // SA:78-56-34-12
-	0x00407488, // BRCM Type(0x8874), BRCM Tag:40-00-  //Egress Directed
-	0x00000800, // BRCM Tag:00-08                      //DSTPortID [3:0] = 0x8
-//	0x00607488, // BRCM Type(0x8874), BRCM Tag:60-00-  //Multiple Egress Directed
-//	0x0000ff01, // BRCM Tag:01-ff
-	0x00000000, // SimpleData_FixVal00
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, //
-	0x00000000, // SimpleData_FixVal11
-	0x937e9ade  // Original FCS
-//	0x84100dad  // MAC FCS(Tx)(BRCM Tag:40-00-00-08)
-//	0xdfb1c84d  // MAC FCS(Tx)(BRCM Tag:60-00-01-ff)
-//	0x0983fe7b  // MAC FCS(Rx)
-};
-*/
-
-/*
-uint32_t   BCMIMP_sample_tx[PHY_BCMIMP_Pkt_DW_Len] = { //120 Byte, 30 DW
-	0xffffffff,
-	0x0000ffff, // SA:00-00-
-	0x12345678, // SA:78-56-34-12
-	0x00407488, // BRCM Type(0x8874), BRCM Tag:40-00-  //Egress Directed
-	0x55550800, // BRCM Tag:00-08                      //DSTPortID [3:0] = 0x8
-//	0x00607488, // BRCM Type(0x8874), BRCM Tag:60-00-  //Multiple Egress Directed
-//	0x5555ff01, // BRCM Tag:01-ff
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x7ba6d41a  // Original FCS
-//	0x84100dad  // MAC FCS(Tx)(BRCM Tag:40-00-00-08)
-//	0xdfb1c84d  // MAC FCS(Tx)(BRCM Tag:60-00-01-ff)
-//	0x0983fe7b  // MAC FCS(Rx)
-};
-*/
-
-uint32_t   BCMIMP_sample_tx[PHY_BCMIMP_Pkt_DW_Len] = { //1524 Byte, 381 DW
-	0xffffffff,
-	0x0000ffff, // SA:00-00-
-	0x12345678, // SA:78-56-34-12
-	0x00407488, // [BCM5389] BRCM Type(0x8874), BRCM Tag:40-00-  //Egress Directed
-	0x55550800, // [BCM5389] BRCM Tag:00-08                      //DSTPortID [3:0] = 0x8
-//	0x00607488, // [BCM5389] BRCM Type(0x8874), BRCM Tag:60-00-  //Multiple Egress Directed
-//	0x5555ff01, // [BCM5389] BRCM Tag:01-ff
-
-//	0x00407488, // [BCM5396] BRCM Type(0x8874), BRCM Tag:40-00-  //Egress Directed
-//	0x55551000, // [BCM5396] BRCM Tag:00-10                      //DSTPortID [4:0] = 0x10
-////	0x01607488, // [BCM5396] BRCM Type(0x8874), BRCM Tag:60-01-  //Multiple Egress Directed
-////	0x5555ffff, // [BCM5396] BRCM Tag:ff-ff
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0xaaaaaaaa, //
-	0x5a5a5a5a, //
-	0xc3c3c3c3, //
-	0x96969696, //
-	0xf0f0f0f0, //
-	0x5555aaaa, //
-	0xffff0000, //
-	0x5a5aa5a5, //
-	0xc3c33c3c, // SimpleData_FixVal11
-	0x00000000, // SimpleData_FixVal00
-	0xffffffff, //
-	0x55555555, //
-	0x8dedb8b6  // Original FCS
-//	0x5604efcf  // MAC FCS(Tx)(BRCM Tag:40-00-00-08)
-//	0x36be85a5  // MAC FCS(Tx)(BRCM Tag:60-00-01-ff)
-//	0x9f4a367a  // MAC FCS(Rx)
-};
-
-//------------------------------------------------------------
-// BCM IMP Port
-//------------------------------------------------------------
-void BCMIMP_set_page (MAC_ENGINE *eng, uint32_t page_num) {
-	phy_write( eng, 16, ( ( page_num & 0xff ) << 8 ) | 0x0001 );
-}
-
-//------------------------------------------------------------
-void BCMIMP_reg_write (MAC_ENGINE *eng, uint32_t addr, uint32_t wrdat_DW_MSB, uint32_t wrdat_DW_LSB) {
-	int        timeout = 0;
-
-#ifdef PHY_BCMIMP_debug
-	printf("%s[Wr ]%02d: 0x%04x 0x%04x\n", eng->phy.PHYName, addr, wrdat_DW_MSB, wrdat_DW_LSB);
-#endif
-	phy_write( eng, 24,   wrdat_DW_LSB         & 0xffff );
-	phy_write( eng, 25, ( wrdat_DW_LSB >> 16 ) & 0xffff );
-	phy_write( eng, 26,   wrdat_DW_MSB         & 0xffff );
-	phy_write( eng, 27, ( wrdat_DW_MSB >> 16 ) & 0xffff );
-
-	phy_write( eng, 17, ( ( addr & 0xff ) << 8 )          ); //for BCM5396
-	phy_write( eng, 17, ( ( addr & 0xff ) << 8 ) | 0x0001 );
-
-	while ( ( phy_read ( eng, 17 ) & 0x0003 ) != 0x0 ) {
-		if (++timeout > PHY_BCMIMP_TIME_OUT_RW) {
-#ifdef PHY_BCMIMP_debug
-			printf("%s[Reg]17: 0x%04x\n", eng->phy.PHYName, phy_read ( eng, 17 ));
-#endif
-			FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-			break;
-		}
-	}
-}
-
-//------------------------------------------------------------
-void BCMIMP_reg_read_2ptr (MAC_ENGINE *eng, uint32_t addr, uint32_t *data_MSB, uint32_t *data_LSB) {
-	int        timeout = 0;
-
-#ifdef PHY_BCMIMP_debug
-	printf("%s[RdS]%02d\n", eng->phy.PHYName, addr);
-#endif
-	phy_write( eng, 17, ( ( addr & 0xff ) << 8 )          ); //for BCM5396
-	phy_write( eng, 17, ( ( addr & 0xff ) << 8 ) | 0x0002 );
-
-	while ( ( phy_read ( eng, 17 ) & 0x0003 ) != 0x0 ) {
-		if (++timeout > PHY_BCMIMP_TIME_OUT_RW) {
-#ifdef PHY_BCMIMP_debug
-			printf("%s[Reg]17: 0x%04x\n", eng->phy.PHYName, phy_read ( eng, 17 ));
-#endif
-			FindErr( eng, Err_Flag_PHY_TimeOut_RW );
-			break;
-		}
-	}
-
-	*data_LSB = phy_read ( eng, 24 ) | ( phy_read ( eng, 25 ) << 16 );
-	*data_MSB = phy_read ( eng, 26 ) | ( phy_read ( eng, 27 ) << 16 );
-#ifdef PHY_BCMIMP_debug
-	printf("%s[RdE]%02d: 0x%04x 0x%04x\n", eng->phy.PHYName, addr, eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0]);
-#endif
-}
-
-//------------------------------------------------------------
-void BCMIMP_reg_read  (MAC_ENGINE *eng, uint32_t addr) {
-	BCMIMP_reg_read_2ptr( eng, addr, (eng->BCMIMP.rddata + 1), eng->BCMIMP.rddata );
-}
-
-//------------------------------------------------------------
-void BCMIMP_reg_chgcheck (MAC_ENGINE *eng, uint32_t page, uint32_t addr) {
-	uint32_t	olddat[2];
-
-	olddat[0] = eng->BCMIMP.rddata[0];
-	olddat[1] = eng->BCMIMP.rddata[1];
-	BCMIMP_reg_read ( eng, addr );
-#ifdef PHY_BCMIMP_debug
-	PRINTF( STD_OUT, "[page %d:0x%02x] %08x %08x --> %08x %08x\n", page, addr, olddat[1], olddat[0], eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0]);
-#else
-	PRINTF( FP_LOG, "[page %d:0x%02x] %08x %08x --> %08x %08x\n", page, addr, olddat[1], olddat[0], eng->BCMIMP.rddata[1], eng->BCMIMP.rddata[0]);
-#endif
-}
-
-//------------------------------------------------------------
-void BCMIMP_init (MAC_ENGINE *eng) {
-	eng->BCMIMP.wait_init  = 1;
-}
-
-//------------------------------------------------------------
-void BCMIMP_MDIO_init (MAC_ENGINE *eng) {
-	phy_write( eng, 16, 0x0001 );
-}
-
-//------------------------------------------------------------
-void BCMIMP_buf_init (MAC_ENGINE *eng) {
-	eng->BCMIMP.pkt_tx_len = PHY_BCMIMP_Pkt_Byte_Len;
-	eng->BCMIMP.pkt_tx     = (uint32_t *)BCMIMP_sample_tx;
-
-	if ( eng->BCMIMP.PHY_sel == 0 ) {
-		if ( eng->arg.GUserDVal == 1 ) {
-			eng->BCMIMP.pkt_tx[3] = 0x00607488;                                    // [BCM5389] BRCM Type(0x8874), BRCM Tag:60-00-
-			eng->BCMIMP.pkt_tx[4] = 0xff01 | (eng->BCMIMP.pkt_tx[4] & 0xffff0000); // [BCM5389] BRCM Tag:01-ff
-		} else {
-			eng->BCMIMP.pkt_tx[3] = 0x00407488;                                    // [BCM5389] BRCM Type(0x8874), BRCM Tag:40-00-
-			eng->BCMIMP.pkt_tx[4] = 0x0800 | (eng->BCMIMP.pkt_tx[4] & 0xffff0000); // [BCM5389] BRCM Tag:00-08
-		}
-	} else {
-		if ( eng->arg.GUserDVal == 1 ) {
-			eng->BCMIMP.pkt_tx[3] = 0x00407488;                                    // [BCM5396] BRCM Type(0x8874), BRCM Tag:40-00-
-			eng->BCMIMP.pkt_tx[4] = 0x1000 | (eng->BCMIMP.pkt_tx[4] & 0xffff0000); // [BCM5396] BRCM Tag:00-10                    
-		} else {
-			eng->BCMIMP.pkt_tx[3] = 0x01607488;                                    // [BCM5396] BRCM Type(0x8874), BRCM Tag:60-01-
-			eng->BCMIMP.pkt_tx[4] = 0xffff | (eng->BCMIMP.pkt_tx[4] & 0xffff0000); // [BCM5396] BRCM Tag:ff-ff
-		}
-	}
-
-	eng->BCMIMP.pkt_rx_len = eng->BCMIMP.pkt_tx_len - 6;
-	memcpy( (UCHAR *)eng->BCMIMP.pkt_rx, (UCHAR *)eng->BCMIMP.pkt_tx, eng->BCMIMP.pkt_tx_len);
-
-	eng->BCMIMP.pkt_rx[3] = 0x00007488
-	                      | ( ( ( eng->BCMIMP.pkt_rx_len >> 1 ) & 0xff ) << 24 )
-	                      | ( ( ( eng->BCMIMP.pkt_rx_len >> 9 ) & 0xff ) << 16 ); // BRCM Type(0x8874), BRCM Tag:00-00-
-	if ( eng->BCMIMP.PHY_sel == 0 ) {
-		eng->BCMIMP.pkt_rx[4] = 0x0800
-				      |   (   eng->BCMIMP.pkt_rx[4] & 0xffff0000   )
-				      |   (   eng->BCMIMP.pkt_rx_len        & 0x01 );         // BRCM Tag:00-08
-	} else {
-		eng->BCMIMP.pkt_rx[4] = 0x1000
-				      |   (   eng->BCMIMP.pkt_rx[4] & 0xffff0000   )
-				      |   (   eng->BCMIMP.pkt_rx_len        & 0x01 );         // BRCM Tag:00-10
-	}
-
-}
-
-//------------------------------------------------------------
-// BCM 5389
-//------------------------------------------------------------
-void BCM5389_counter(MAC_ENGINE *eng)
-{
-	int port, page;
-	uint32_t dat[10];
-
-	PRINTF(FP_LOG, "     TxOctets           TxDropPkts | RxOctets          "
-		       "  RxDropPkts RxGoodOctets\n");
-	page = 0x20;
-	for (port = 0; port < 8; port++) {
-		BCMIMP_set_page(eng, page);
-
-		BCMIMP_reg_read_2ptr(eng, 0x00, &dat[1],
-				     &dat[0]); //[TxOctets    ] 64 bits
-		BCMIMP_reg_read_2ptr(eng, 0x08, &dat[3],
-				     &dat[2]); //[TxDropPkts  ] 32 bits
-		BCMIMP_reg_read_2ptr(eng, 0x44, &dat[5],
-				     &dat[4]); //[RxOctets    ] 64 bits
-		BCMIMP_reg_read_2ptr(eng, 0x84, &dat[7],
-				     &dat[6]); //[RxDropPkts  ] 32 bits
-		BCMIMP_reg_read_2ptr(eng, 0x7c, &dat[9],
-				     &dat[8]); //[RxGoodOctets] 64 bits
-		PRINTF(FP_LOG,
-		       "[P%d](%08x %08x) (%08x) | (%08x %08x) (%08x) "
-		       "(%08x %08x)\n",
-		       page - 0x20, dat[1], dat[0], dat[2], dat[5], dat[4],
-		       dat[6], dat[9], dat[8]);
-		page++;
-	}
-	phy_write(eng, 16, 0x0000);
-}
-
-//------------------------------------------------------------
-void BCM5389_reg_init(MAC_ENGINE *eng)
-{
-	uint32_t dat_08;
-	uint32_t dat_0b;
-
-#ifdef PHY_BCM5389_Debug_Counter
-	if (eng->BCMIMP.wait_init)
-		BCM5389_counter(eng);
-#endif
-
-	//------------------------------
-	// Page 0
-	//------------------------------
-	// [page 0:0x0e] IMP Port State Override Register           //([3:0] =
-	// 0xb) && ([7] = 1) for 1G [page 0:0x0e] IMP Port State Override
-	// Register           //([3:0] = 0x7) && ([7] = 1) for 100M [page
-	// 0:0x0e] IMP Port State Override Register           //([3:0] = 0x3) &&
-	// ([7] = 1) for 10M [page 0:0x60] IMP RGMII Control Register // [1:0] =
-	// 0x0 [page 0:0x08] IMP Traffic Control Register               // [4:2]
-	// = 0x7 for Enable IMP Port to receive the other Port's data [page
-	// 0:0x08] IMP Traffic Control Register               // [4:2] = 0x0 for
-	// Disable IMP Port to receive the other Port's data [page 0:0x0b]
-	// Switch Mode Register                       // [  0] = 0x1 for Enable
-	// IMP Port to receive the other Port's data [page 0:0x0b] Switch Mode
-	// Register                       // [  0] = 0x0 for Disable IMP Port to
-	// receive the other Port's data
-	//------------------------------
-	BCMIMP_set_page(eng, 0);
-
-	//[page 0:0x0e] IMP Port State Override Register
-	BCMIMP_reg_read(eng, 0x0e);
-	if (eng->run.Speed_sel[0])
-		BCMIMP_reg_write(
-		    eng, 0x0e, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x0000008b); // 8 bit //  1 G//[0]LINK, [1]FDX,
-				     // [3:2]SPEED, [7]MII_SW_OR
-	else if (eng->run.Speed_sel[1])
-		BCMIMP_reg_write(
-		    eng, 0x0e, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x00000087); // 8 bit //100 M//[0]LINK, [1]FDX,
-				     // [3:2]SPEED, [7]MII_SW_OR
-	else
-		BCMIMP_reg_write(
-		    eng, 0x0e, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x00000083); // 8 bit // 10 M//[0]LINK, [1]FDX,
-				     // [3:2]SPEED, [7]MII_SW_OR
-#ifdef PHY_BCM5389_Debug_RWValue
-	BCMIMP_reg_chgcheck(eng, 0, 0x0e);
-#endif
-
-	if (eng->BCMIMP.wait_init) {
-		//[page 0:0x60] IMP RGMII Control Register
-		BCMIMP_reg_read(eng, 0x60);
-		if ((eng->BCMIMP.rddata[0] & 0x3) != 0) {
-			printf("\n\n[Warning] Page0, Register 0x60, bit 0~1 "
-			       "must be 0 [Reg60h_0:%08x]\n\n",
-			       eng->BCMIMP.rddata[0]);
-			if (eng->run.TM_IOTiming)
-				PRINTF(FP_IO,
-				       "\n\n[Warning] Page0, Register 0x60, "
-				       "bit 0~1 must be 0 [Reg60h_0:%08x]\n\n",
-				       eng->BCMIMP.rddata[0]);
-			if (!eng->run.TM_Burst)
-				PRINTF(FP_LOG,
-				       "\n\n[Warning] Page0, Register 0x60, "
-				       "bit 0~1 must be 0 [Reg60h_0:%08x]\n\n",
-				       eng->BCMIMP.rddata[0]);
-			BCMIMP_reg_write(
-			    eng, 0x60, 0x00000000,
-			    (eng->BCMIMP.rddata[0] &
-			     0xfffffffc)); // 8 bit //[0]TXC_DELAY, [1]RXC_DELAY
-		}
-#ifdef PHY_BCM5389_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 0, 0x60);
-#endif
-
-		if (eng->phy.loop_phy) {
-			// Enable IMP Port to receive the other Port's data
-			dat_08 = 0x0000001c;
-			dat_0b = 0x00000003;
-		} else {
-			// Disable IMP Port to receive the other Port's data
-			dat_08 = 0x00000000;
-			dat_0b = 0x00000002;
-		}
-		//[page 0:0x08] IMP Traffic Control Register
-		BCMIMP_reg_read(eng, 0x08);
-		BCMIMP_reg_write(eng, 0x08, 0x00000000,
-				 (eng->BCMIMP.rddata[0] & 0xffffffe3) |
-				     dat_08); // 8 bit //[2]RX_BCST_EN,
-					      // [3]RX_MCST_EN, [4]RX_UCST_EN
-#ifdef PHY_BCM5389_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 0, 0x08);
-#endif
-
-		//[page 0:0x0b] Switch Mode Register
-		BCMIMP_reg_read(eng, 0x0b);
-		BCMIMP_reg_write(
-		    eng, 0x0b, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0xfffffffc) |
-			dat_0b); // 8 bit //[0]SW_FWDG_MODE, [1]SW_FWDG_EN
-#ifdef PHY_BCM5389_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 0, 0x0b);
-#endif
-
-		//------------------------------
-		// Page 2
-		//------------------------------
-		// [page 2:0x00] Global Management Configuration Register   // [
-		// 7] = 0x1 for IMP Port Enable
-		//------------------------------
-		BCMIMP_set_page(eng, 2);
-
-		//[page 2:0x00] Global Management Configuration Register
-		BCMIMP_reg_read(eng, 0x00);
-		BCMIMP_reg_write(eng, 0x00, 0x00000000,
-				 (eng->BCMIMP.rddata[0] & 0xffffff7f) |
-				     0x00000080); // 8 bit //[7]IMP Port Enable
-#ifdef PHY_BCM5389_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 2, 0x00);
-#endif
-
-		eng->BCMIMP.wait_init = 0;
-	}
-
-	phy_write(eng, 16, 0x0000);
-}
-
-//------------------------------------------------------------
-// BCM 5396
-//------------------------------------------------------------
-void BCM5396_reg_init(MAC_ENGINE *eng)
-{
-	//------------------------------
-	// Page 0
-	//------------------------------
-	// [page 0:0x70] Port 16 State Override Register            //([3:0] =
-	// 0xb) && ([7] = 1) for 1G [page 0:0x70] Port 16 State Override
-	// Register            //([3:0] = 0x7) && ([7] = 1) for 100M [page
-	// 0:0x70] Port 16 State Override Register            //([3:0] = 0x3) &&
-	// ([7] = 1) for 10M [page 0:0x10] IMP Port (Port 16) Control Register
-	// // [4:2] = 0x7 for Enable IMP Port to receive the other Port's data
-	// [page 0:0x20] Switch Mode Register                       // [  0] =
-	// 0x1 for Enable IMP Port to receive the other Port's data
-	//------------------------------
-	BCMIMP_set_page(eng, 0);
-
-	//[page 0:0x70] Port 16 State Override Register
-	BCMIMP_reg_read(eng, 0x70);
-	if (eng->run.Speed_sel[0])
-		BCMIMP_reg_write(
-		    eng, 0x70, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x0000008b); // 8 bit //  1 G//[0]Link State, [1]Duplex
-				     // Mode, [3:2]Speed, [7]Software Override
-	else if (eng->run.Speed_sel[1])
-		BCMIMP_reg_write(
-		    eng, 0x70, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x00000087); // 8 bit //100 M//[0]Link State, [1]Duplex
-				     // Mode, [3:2]Speed, [7]Software Override
-	else
-		BCMIMP_reg_write(
-		    eng, 0x70, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0x0fffff70) |
-			0x00000083); // 8 bit // 10 M//[0]Link State, [1]Duplex
-				     // Mode, [3:2]Speed, [7]Software Override
-#ifdef PHY_BCM5396_Debug_RWValue
-	BCMIMP_reg_chgcheck(eng, 0, 0x70);
-#endif
-
-	if (eng->BCMIMP.wait_init) {
-		//[page 0:0x10] IMP Port (Port 16) Control Register
-		BCMIMP_reg_read(eng, 0x10);
-		BCMIMP_reg_write(
-		    eng, 0x10, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0xffffffe3) |
-			0x0000001c); // 8 bit //[2]RX_BCST_EN, [3]RX_MCST_EN,
-				     // [4]RX_UCST_EN
-#ifdef PHY_BCM5396_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 0, 0x10);
-#endif
-
-		//[page 0:0x20] Switch Mode Register
-		BCMIMP_reg_read(eng, 0x20);
-		BCMIMP_reg_write(
-		    eng, 0x20, 0x00000000,
-		    (eng->BCMIMP.rddata[0] & 0xfffffffc) |
-			0x00000003); // 8 bit //[0]SW_FWDG_MODE, [1]SW_FWDG_EN
-#ifdef PHY_BCM5396_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 0, 0x20);
-#endif
-
-		//------------------------------
-		// Page 2
-		//------------------------------
-		// [page 2:0x00] Global Management Configuration Register   //
-		// [7:6] = 0x2 for IMP Port Enable
-		//------------------------------
-		BCMIMP_set_page(eng, 2);
-
-		//[page 2:0x00] Global Management Configuration Register
-		BCMIMP_reg_read(eng, 0x00);
-		BCMIMP_reg_write(eng, 0x00, 0x00000000,
-				 (eng->BCMIMP.rddata[0] & 0xffffff3f) |
-				     0x00000080); // 8 bit //[7:6]FRM_MNGT_PORT
-#ifdef PHY_BCM5396_Debug_RWValue
-		BCMIMP_reg_chgcheck(eng, 2, 0x00);
-#endif
-
-		eng->BCMIMP.wait_init = 0;
-	}
-
-	phy_write(eng, 16, 0x0000);
-}
-
-//------------------------------------------------------------
-// Special PHY
-//------------------------------------------------------------
-void special_PHY_init(MAC_ENGINE *eng)
-{
-	nt_log_func_name();
-	BCMIMP_init( eng );
-}
-
-//------------------------------------------------------------
-void special_PHY_MDIO_init(MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-
-	BCMIMP_MDIO_init( eng );
-}
-
-//------------------------------------------------------------
-void special_PHY_buf_init(MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-
-	BCMIMP_buf_init( eng );
-}
-
-//------------------------------------------------------------
-void special_PHY_recov(MAC_ENGINE *eng)
-{
-	nt_log_func_name();
-}
-
-//------------------------------------------------------------
-void special_PHY_reg_init (MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-
-	switch (eng->BCMIMP.PHY_sel) {
-	case 0:
-		BCM5389_reg_init(eng);
-		break;
-	case 1:
-		BCM5396_reg_init(eng);
-		break;
-	default:
-		break;
-	}
-}
-
-//------------------------------------------------------------
-void special_PHY_debug(MAC_ENGINE *eng) 
-{
-	nt_log_func_name();
-#ifdef PHY_BCM5389_Debug_Counter
-	if (eng->BCMIMP.PHY_sel == 0)
-		BCM5389_counter(eng);
-#endif
-}
-
-//------------------------------------------------------------
-// be used in setup_framesize()
-uint32_t special_PHY_FRAME_LEN(MAC_ENGINE *eng)
-{
-	return (eng->BCMIMP.pkt_tx_len);
-}
-
-//------------------------------------------------------------
-// be used in setup_buf()
-uint32_t *special_PHY_txpkt_ptr(MAC_ENGINE *eng)
-{
-	return ((uint32_t *)eng->BCMIMP.pkt_tx);
-}
-
-//------------------------------------------------------------
-// be used in check_Data()
-uint32_t *special_PHY_rxpkt_ptr(MAC_ENGINE *eng)
-{
-	return ( (uint32_t *)eng->BCMIMP.pkt_rx );
-}
-#endif // End PHY_SPECIAL
diff -Naur u-boot-2019.04/cmd/nettest/physpecial.h uboot/cmd/nettest/physpecial.h
--- u-boot-2019.04/cmd/nettest/physpecial.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/physpecial.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,41 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef PHYSPECIAL_H
-#define PHYSPECIAL_H
-
-#define PHY_BCM5396_Debug_RWValue
-#define PHY_BCM5389_Debug_RWValue
-#define PHY_BCM5389_Debug_Counter
-
-
-#define PHY_BCMIMP_TIME_OUT_RW                  100       //10
-//#define PHY_BCMIMP_TIME_OUT_RW                  10       //10
-
-#define PHY_BCMIMP_Pkt_Byte_Len                 1524      //1524/1514
-#define PHY_BCMIMP_Pkt_DW_Len                    381
-//#define PHY_BCMIMP_Pkt_Byte_Len                 120      //120/110   
-//#define PHY_BCMIMP_Pkt_DW_Len                    30
-
-typedef struct {
-	uint32_t                pkt_tx_len                              ;//__attribute__ ((aligned (4)));
-	uint32_t                pkt_rx[PHY_BCMIMP_Pkt_DW_Len]           ;//__attribute__ ((aligned (4)));
-	uint32_t                pkt_rx_len                              ;//__attribute__ ((aligned (4)));
-	uint32_t               *pkt_tx                                  ;//__attribute__ ((aligned (4)));
-	char                 wait_init                               ;//__attribute__ ((aligned (4)));
-	uint32_t                rddata[2];
-
-	char                 PHY_sel                                 ;//__attribute__ ((aligned (4)));
-} PHY_BCMIMP;
-
-
-
-#endif // PHYSPECIAL_H
diff -Naur u-boot-2019.04/cmd/nettest/phy_tbl.h uboot/cmd/nettest/phy_tbl.h
--- u-boot-2019.04/cmd/nettest/phy_tbl.h	1969-12-31 19:00:00.000000000 -0500
+++ uboot/cmd/nettest/phy_tbl.h	2020-01-14 13:36:49.337961228 -0500
@@ -0,0 +1,244 @@
+void recov_phy_marvell (MAC_ENGINE *eng);
+void phy_marvell (MAC_ENGINE *eng);
+void recov_phy_marvell0 (MAC_ENGINE *eng);
+void phy_marvell0 (MAC_ENGINE *eng);
+void recov_phy_marvell1 (MAC_ENGINE *eng);
+void phy_marvell1 (MAC_ENGINE *eng);
+void recov_phy_marvell2 (MAC_ENGINE *eng);
+void phy_marvell2 (MAC_ENGINE *eng);
+void phy_marvell3 (MAC_ENGINE *eng);
+void phy_broadcom (MAC_ENGINE *eng);
+void recov_phy_broadcom0 (MAC_ENGINE *eng);
+void phy_broadcom0 (MAC_ENGINE *eng);
+void phy_realtek (MAC_ENGINE *eng);
+void phy_realtek0 (MAC_ENGINE *eng);
+void recov_phy_realtek1 (MAC_ENGINE *eng);
+void phy_realtek1 (MAC_ENGINE *eng);
+void recov_phy_realtek2 (MAC_ENGINE *eng);
+void recov_phy_realtek3 (MAC_ENGINE *eng);
+void phy_realtek3 (MAC_ENGINE *eng);
+void phy_realtek4 (MAC_ENGINE *eng);
+void phy_realtek2 (MAC_ENGINE *eng);
+void recov_phy_realtek5 (MAC_ENGINE *eng);
+void phy_realtek5 (MAC_ENGINE *eng);
+void phy_realtek6 (MAC_ENGINE *eng);
+void phy_smsc (MAC_ENGINE *eng);
+void phy_micrel (MAC_ENGINE *eng);
+void phy_micrel0 (MAC_ENGINE *eng);
+void phy_micrel1 (MAC_ENGINE *eng);
+void phy_micrel2 (MAC_ENGINE *eng);
+void recov_phy_vitesse (MAC_ENGINE *eng);
+void phy_vitesse (MAC_ENGINE *eng);
+void recov_phy_atheros (MAC_ENGINE *eng);
+void phy_atheros (MAC_ENGINE *eng);
+void phy_default (MAC_ENGINE *eng);
+
+struct phy_desc {
+	uint16_t id2;
+	uint16_t id3;
+	uint16_t id3_mask;
+	uint8_t name[64];
+	PHY_ENGINE cfg;
+};
+
+#define PHY_LOOKUP_N	33
+static const struct phy_desc phy_lookup_tbl[PHY_LOOKUP_N] = {
+    {.id2 = 0x001c,
+     .id3 = 0xc916,
+     .id3_mask = 0xffff,
+     .name = "RTL8211F",
+     .cfg.fp_set = phy_realtek5,
+     .cfg.fp_clr = recov_phy_realtek5},
+    {.id2 = 0x001c,
+     .id3 = 0xc915,
+     .id3_mask = 0xffff,
+     .name = "RTL8211E",
+     .cfg.fp_set = phy_realtek2,
+     .cfg.fp_clr = recov_phy_realtek2},
+    {.id2 = 0x001c,
+     .id3 = 0xc914,
+     .id3_mask = 0xffff,
+     .name = "RTL8211D",
+     .cfg.fp_set = phy_realtek1,
+     .cfg.fp_clr = recov_phy_realtek1},
+    {.id2 = 0x001c,
+     .id3 = 0xc912,
+     .id3_mask = 0xffff,
+     .name = "RTL8211C",
+     .cfg.fp_set = phy_realtek3,
+     .cfg.fp_clr = recov_phy_realtek3},
+    {.id2 = 0x001c,
+     .id3 = 0xc930,
+     .id3_mask = 0xffff,
+     .name = "RTL8363S",
+     .cfg.fp_set = phy_realtek6,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x001c,
+     .id3 = 0xc816,
+     .id3_mask = 0xffff,
+     .name = "RTL8201F",
+     .cfg.fp_set = phy_realtek4,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x001c,
+     .id3 = 0xc815,
+     .id3_mask = 0xfff0,
+     .name = "RTL8201E",
+     .cfg.fp_set = phy_realtek0,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0000,
+     .id3 = 0x8201,
+     .id3_mask = PHYID3_Mask,
+     .name = "RTL8201N",
+     .cfg.fp_set = phy_realtek,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0143,
+     .id3 = 0xbcb2,
+     .id3_mask = 0xfff0,
+     .name = "BCM5482",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0143,
+     .id3 = 0xbca0,
+     .id3_mask = 0xfff0,
+     .name = "BCM5481",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0362,
+     .id3 = 0x5e6a,
+     .id3_mask = 0xfff0,
+     .name = "BCM54612",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0362,
+     .id3 = 0x5d10,
+     .id3_mask = 0xfff0,
+     .name = "BCM54616S",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0020,
+     .id3 = 0x60b0,
+     .id3_mask = 0xfff0,
+     .name = "BCM5464SR",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0020,
+     .id3 = 0x60c1,
+     .id3_mask = 0xfff0,
+     .name = "BCM5461S",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x600d,
+     .id3 = 0x84a2,
+     .id3_mask = 0xfff0,
+     .name = "BCM54210E",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0143,
+     .id3 = 0xbd63,
+     .id3_mask = 0xfff0,
+     .name = "BCM54610C",
+     .cfg.fp_set = phy_broadcom0,
+     .cfg.fp_clr = recov_phy_broadcom0},
+    {.id2 = 0x0040,
+     .id3 = 0x61e0,
+     .id3_mask = PHYID3_Mask,
+     .name = "BCM5221",
+     .cfg.fp_set = phy_broadcom,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0141,
+     .id3 = 0x0e22,
+     .id3_mask = 0xfff0,
+     .name = "88E3019",
+     .cfg.fp_set = phy_marvell3,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0141,
+     .id3 = 0x0dd0,
+     .id3_mask = 0xfff0,
+     .name = "88E15 10/12/14/18",
+     .cfg.fp_set = phy_marvell2,
+     .cfg.fp_clr = recov_phy_marvell2},
+    {.id2 = 0xff00,
+     .id3 = 0x1761,
+     .id3_mask = 0xffff,
+     .name = "88E6176(IntLoop)",
+     .cfg.fp_set = phy_marvell1,
+     .cfg.fp_clr = recov_phy_marvell1},
+    {.id2 = 0xff00,
+     .id3 = 0x1152,
+     .id3_mask = 0xffff,
+     .name = "88E6320(IntLoop)",
+     .cfg.fp_set = phy_marvell1,
+     .cfg.fp_clr = recov_phy_marvell1},
+    {.id2 = 0x0141,
+     .id3 = 0x0e90,
+     .id3_mask = 0xfff0,
+     .name = "88E1310",
+     .cfg.fp_set = phy_marvell0,
+     .cfg.fp_clr = recov_phy_marvell0},
+    {.id2 = 0x0141,
+     .id3 = 0x0cc0,
+     .id3_mask = PHYID3_Mask,
+     .name = "88E1111",
+     .cfg.fp_set = phy_marvell,
+     .cfg.fp_clr = recov_phy_marvell},
+    {.id2 = 0x0022,
+     .id3 = 0x1555,
+     .id3_mask = 0xfff0,
+     .name = "KSZ8031/KSZ8051",
+     .cfg.fp_set = phy_micrel0,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0022,
+     .id3 = 0x1622,
+     .id3_mask = 0xfff0,
+     .name = "KSZ9031",
+     .cfg.fp_set = phy_micrel1,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0022,
+     .id3 = 0x1562,
+     .id3_mask = 0xfff0,
+     .name = "KSZ8081",
+     .cfg.fp_set = phy_micrel2,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x0022,
+     .id3 = 0x1512,
+     .id3_mask = 0xfff0,
+     .name = "KSZ8041",
+     .cfg.fp_set = phy_micrel,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x004d,
+     .id3 = 0xd072,
+     .id3_mask = 0xfff0,
+     .name = "AR8035",
+     .cfg.fp_set = phy_atheros,
+     .cfg.fp_clr = recov_phy_atheros},
+    {.id2 = 0x0007,
+     .id3 = 0xc0c4,
+     .id3_mask = PHYID3_Mask,
+     .name = "LAN8700",
+     .cfg.fp_set = phy_smsc,
+     .cfg.fp_clr = NULL},
+    {.id2 = 0x000f,
+     .id3 = 0xc4b1,
+     .id3_mask = 0xfff0,
+     .name = "VSC8211",
+     .cfg.fp_set = phy_vitesse,
+     .cfg.fp_clr = recov_phy_vitesse},
+    {.id2 = 0x0007,
+     .id3 = 0x0421,
+     .id3_mask = 0xfff0,
+     .name = "VSC8601",
+     .cfg.fp_set = phy_vitesse,
+     .cfg.fp_clr = recov_phy_vitesse},
+    {.id2 = 0x0007,
+     .id3 = 0x0431,
+     .id3_mask = 0xfff0,
+     .name = "VSC8641",
+     .cfg.fp_set = phy_vitesse,
+     .cfg.fp_clr = recov_phy_vitesse},
+    {.id2 = 0x0000,
+     .id3 = 0x0000,
+     .id3_mask = 0x0000,
+     .name = "default",
+     .cfg.fp_set = phy_default,
+     .cfg.fp_clr = NULL},
+};
\ No newline at end of file
diff -Naur u-boot-2019.04/cmd/nettest/stduboot.c uboot/cmd/nettest/stduboot.c
--- u-boot-2019.04/cmd/nettest/stduboot.c	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/stduboot.c	1969-12-31 19:00:00.000000000 -0500
@@ -1,199 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#define STDUBOOT_C
-
-#include "swfunc.h"
-
-int isspace(char c)
-{
-	if ((c == ' ') || (c == 9) || (c == 13))
-		return 1;
-
-	return 0;
-}
-
-/*
- * strtoul.c --
- *
- *  Source code for the "strtoul" library procedure.
- *
- * Copyright 1988 Regents of the University of California
- * Permission to use, copy, modify, and distribute this
- * software and its documentation for any purpose and without
- * fee is hereby granted, provided that the above copyright
- * notice appear in all copies.  The University of California
- * makes no representations about the suitability of this
- * software for any purpose.  It is provided "as is" without
- * express or implied warranty.
- */
-
-//#include <ctype.h>
-
-/*
- * The table below is used to convert from ASCII digits to a
- * numerical equivalent.  It maps from '0' through 'z' to integers
- * (100 for non-digit characters).
- */
-
-static char cvtIn[] = {
-    0,   1,   2,   3,   4,   5,   6,   7,  8,  9,  /* '0' - '9' */
-    100, 100, 100, 100, 100, 100, 100,		   /* punctuation */
-    10,  11,  12,  13,  14,  15,  16,  17, 18, 19, /* 'A' - 'Z' */
-    20,  21,  22,  23,  24,  25,  26,  27, 28, 29, 30, 31, 32, 33, 34, 35,
-    100, 100, 100, 100, 100, 100,		   /* punctuation */
-    10,  11,  12,  13,  14,  15,  16,  17, 18, 19, /* 'a' - 'z' */
-    20,  21,  22,  23,  24,  25,  26,  27, 28, 29, 30, 31, 32, 33, 34, 35};
-
-/**
- * @brief	Convert an ASCII string into an integer
- * @param[in] 	string - String of ASCII digits, possibly preceded by white
- * 		space.  For bases greater than 10, either lower- or upper-case
- *		digits may be used.
- * @param[in] 	**endPtr - Where to store address of terminating character
- * @param[in] 	base - Base for conversion.  Must be less than 37.  If 0, then
- * 		the base is chosen from the leading characters of string: "0x"
- * 		means hex, "0" means octal, anything else means decimal.
- *
- * The return value is the integer equivalent of string.  If endPtr is non-NULL,
- * then *endPtr is filled in with the character after the last one that was part
- * of the integer.  If string doesn't contain a valid integer value, then zero 
- * is returned and *endPtr is set to string.
- */
-unsigned long int strtoul(char *string, char **endPtr, int base)
-{
-	register char *p;
-	register unsigned long int result = 0;
-	register unsigned digit;
-	int anyDigits = 0;
-
-	/*
-	 * Skip any leading blanks.
-	 */
-
-	p = string;
-	while (isspace(*p)) {
-		p += 1;
-	}
-
-	/*
-	 * If no base was provided, pick one from the leading characters
-	 * of the string.
-	 */
-
-	if (base == 0) {
-		if (*p == '0') {
-			p += 1;
-			if (*p == 'x') {
-				p += 1;
-				base = 16;
-			} else {
-
-				/*
-				 * Must set anyDigits here, otherwise "0"
-				 * produces a "no digits" error.
-				 */
-
-				anyDigits = 1;
-				base = 8;
-			}
-		} else
-			base = 10;
-	} else if (base == 16) {
-
-		/*
-		 * Skip a leading "0x" from hex numbers.
-		 */
-
-		if ((p[0] == '0') && (p[1] == 'x')) {
-			p += 2;
-		}
-	}
-
-	/*
-	 * Sorry this code is so messy, but speed seems important.  Do
-	 * different things for base 8, 10, 16, and other.
-	 */
-
-	if (base == 8) {
-		for (;; p += 1) {
-			digit = *p - '0';
-			if (digit > 7) {
-				break;
-			}
-			result = (result << 3) + digit;
-			anyDigits = 1;
-		}
-	} else if (base == 10) {
-		for (;; p += 1) {
-			digit = *p - '0';
-			if (digit > 9) {
-				break;
-			}
-			result = (10 * result) + digit;
-			anyDigits = 1;
-		}
-	} else if (base == 16) {
-		for (;; p += 1) {
-			digit = *p - '0';
-			if (digit > ('z' - '0')) {
-				break;
-			}
-			digit = cvtIn[digit];
-			if (digit > 15) {
-				break;
-			}
-			result = (result << 4) + digit;
-			anyDigits = 1;
-		}
-	} else {
-		for (;; p += 1) {
-			digit = *p - '0';
-			if (digit > ('z' - '0')) {
-				break;
-			}
-			digit = cvtIn[digit];
-			if (digit >= base) {
-				break;
-			}
-			result = result * base + digit;
-			anyDigits = 1;
-		}
-	}
-
-	/*
-	 * See if there were any digits at all.
-	 */
-
-	if (!anyDigits) {
-		p = string;
-	}
-
-	if (endPtr != 0) {
-		*endPtr = p;
-	}
-
-	return result;
-}
-
-// -----------------------------------------------------------------------------
-int atoi( char s[] )
-{
-
-    int i;
-    int ans = 0;
-
-    for( i = 0; s[i] >= '0' && s[i] <= '9'; ++i )
-        ans = ( 10 * ans ) + ( s[i] - '0' );
-
-    return ans;
-}
-
diff -Naur u-boot-2019.04/cmd/nettest/stduboot.h uboot/cmd/nettest/stduboot.h
--- u-boot-2019.04/cmd/nettest/stduboot.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/stduboot.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,17 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef _STDUBOOT_H_
-#define _STDUBOOT_H_
-
-int atoi(char s[]);
-
-#endif /* end of "#ifndef _STDUBOOT_H_" */
diff -Naur u-boot-2019.04/cmd/nettest/swfunc.h uboot/cmd/nettest/swfunc.h
--- u-boot-2019.04/cmd/nettest/swfunc.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/swfunc.h	2020-01-14 13:36:49.337961228 -0500
@@ -17,46 +17,18 @@
 //---------------------------------------------------------
 // Program information
 //---------------------------------------------------------
-//#define PHY_GPIO
-//#define PHY_SPECIAL
-//#define MELLANOX_CONNECTX_4 // for Mellanox ConnectX-4 OCP card
-
-#if defined(MELLANOX_CONNECTX_4)
-      #define    VER_NAME    "Ver 0.75 version @2017/05/25 1338 for Mellanox ConnectX-4 OCP card"
-#else
-  #ifdef PHY_SPECIAL
-    /* PHY in SPECIAL mode */
-    #if defined(PHY_GPIO)
-      #define    VER_NAME    "Verification @2016/07/21 1524 [GPIO]PHY_SPECIAL"
-    #else
-      #define    VER_NAME    "Verification @2016/07/21 1524 PHY_SPECIAL"
-    #endif /* End defined(PHY_GPIO) */
-  #else
-    /* PHY in Normal mode */
-    #if defined(PHY_GPIO)
-      #define    VER_NAME    "Ver 0.75 version @2017/05/25 1338 [GPIO]"
-    #else
-      #define    VER_NAME    "Ver 0.77 version @2017/12/20 1310"
-    #endif /* End defined(PHY_GPIO) */
-  #endif
-#endif // End MELLANOX_CONNECTX_4
-
-//#define  UBOOT_FOR_LINUX_4_9
+/* PHY in Normal mode */
+#define VER_NAME "Ver 0.77 version @2017/12/20 1310"
 
 /* ========================================================== */
 #define NETESTCMD_MAX_ARGS CONFIG_SYS_MAXARGS
 
 /* == Step 4:==========   Select PHY    ================== */
-//#define SUPPORT_PHY_LAN9303                                   // Initial PHY via I2C bus
-#define LAN9303_I2C_BUSNUM                       6              // 1-based
-#define LAN9303_I2C_ADR                          0x14
 
 /* ======================== Program flow control ======================== */
 #define RUN_STEP                                 5
-// 0: read_scu
 // 1: parameter setup
-// 2: init_scu1,
-// 3: init_scu_macrst
+// 2: mdc/mdio pinmux,
 // 4: Data Initial
 // 5: ALL
 
@@ -64,14 +36,14 @@
 //#define   DbgPrn_Enable_Debug_pause                //[off]
 //#define DBG_LOG_FUNC_NAME
 #define   DbgPrn_ErrFlg                          0
-#define   DbgPrn_BufAdr                          0 //1
+#define   DbgPrn_BufAdr                          0
 #define   DbgPrn_Bufdat                          0
 #define   DbgPrn_BufdatDetail                    0
 #define   DbgPrn_PHYRW                           0
 #define   DbgPrn_PHYInit                         0
 #define   DbgPrn_PHYName                         0
 #define   DbgPrn_DumpMACCnt                      0
-#define   DbgPrn_Info                            0 //1
+#define   DbgPrn_Info                            1
 #define   DbgPrn_FRAME_LEN                       0
 
 #ifdef DBG_LOG_FUNC_NAME
@@ -81,8 +53,6 @@
 #define nt_log_func_name(...)
 #endif
 /* ============ Enable or Disable Check item of the descriptor ============ */
-#ifdef Enable_MAC_ExtLoop
-#else
     #define CheckRxOwn
     #define CheckRxLen
     #define CheckRxErr
@@ -91,18 +61,13 @@
     #define CheckRunt
 //    #define CheckOddNibble
     #define CheckRxFIFOFull
-  #ifdef Enable_MAC_ExtLoop_PakcegMode
-    #define CheckDataEveryTime
-  #else
-//    #define CheckDataEveryTime
-  #endif
+  
 
 //    #define CheckRxbufUNAVA
     #define CheckRPktLost
 //    #define CheckNPTxbufUNAVA
     #define CheckTPktLost
     #define CheckRxBuf
-#endif
 
 #ifdef CheckRxErr
   #define Check_ErrMask_RxErr                    0x00040000 //bit18
diff -Naur u-boot-2019.04/cmd/nettest/typedef.h uboot/cmd/nettest/typedef.h
--- u-boot-2019.04/cmd/nettest/typedef.h	2020-01-14 13:36:02.042336845 -0500
+++ uboot/cmd/nettest/typedef.h	1969-12-31 19:00:00.000000000 -0500
@@ -1,31 +0,0 @@
-/*
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#ifndef _TYPEDEF_H_
-#define _TYPEDEF_H_
-
-#include "swfunc.h"
-
-#define PCI		1
-#define PCIE		2
-#define AGP		3
-
-#define UCHAR		unsigned char
-#define CHAR		char
-#define BYTE		UCHAR
-#define BOOL		SHORT
-#define BOOLEAN		uint16_t
-#define SCHAR		signed char
-
-#define TRUE      	1
-#define FALSE     	0
-
-#endif /* end of "#ifndef _TYPEDEF_H_" */
